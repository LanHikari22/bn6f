
	thumb_local_start
sub_8098BE8:
	push {r4-r7,lr}
	ldr r0, dword_8098C1C // =0x1ca0 
	ldrb r1, [r5,#6]
	cmp r1, #0xff
	beq loc_8098C16
	add r0, r0, r1
	bl sub_802F238
	ldrb r0, [r5,#7]
	tst r0, r0
	beq loc_8098C16
	ldr r0, dword_8098C20 // =0x1d20 
	ldrb r1, [r5,#6]
	add r0, r0, r1
	mov r0, r0
	bl ClearEventFlag // (u16 entryFlagBitfield) -> void
	ldr r0, dword_8098C24 // =0x1da0 
	ldrb r1, [r5,#6]
	add r0, r0, r1
	mov r0, r0
	bl SetEventFlag
loc_8098C16:
	mov r0, #0
	pop {r4-r7,pc}
	.balign 4, 0x00
dword_8098C1C: .word 0x1CA0
dword_8098C20: .word 0x1D20
dword_8098C24: .word 0x1DA0
off_8098C28:
	.word Undocumented_GreenSwap, 0x0, 0x0, 0x0
	.byte 0x0C, 0x08, 0x08, 0xFF

	.word 0x4000105, 0x0, 0x0, 0x0
	.byte 0x0c, 0x02, 0x0c, 0xff

	.word 0x4000003, 0x0, 0x0, 0x0
	.byte 0x0c, 0x02, 0x0c, 0xff

	.word 0x4000206, 0x0, 0x0, 0x0
	.byte 0x4, 0x10, 0x4, 0xff

byte_8098C78: .byte 0x3F, 0x0, 0x6, 0x4B, 0xCD, 0x8C, 0x9, 0x8, 0x1C, 0x5, 0xFF
	.byte 0x8B, 0x8C, 0x9, 0x8, 0x3A, 0x5, 0x4, 0x80, 0x2, 0xFF, 0x1E
	.byte 0x27, 0x6, 0xFF, 0xFF, 0x7, 0x4C, 0x80, 0x0, 0x0, 0x0, 0x0
	.byte 0x0, 0x15, 0x9F, 0x8C, 0x9, 0x8, 0x3F, 0x4, 0x0
byte_8098CA2: .byte 0x3F, 0x0, 0x6, 0x4B, 0xCD, 0x8C, 0x9, 0x8, 0x1C, 0x5, 0xFF
	.byte 0xB5, 0x8C, 0x9, 0x8, 0x3A, 0x5, 0x4, 0x80, 0x2, 0xFF, 0x1E
	.byte 0x27, 0x6, 0xFF, 0xFF, 0x7, 0x4C, 0x81, 0x0, 0x0, 0x0, 0x0
	.byte 0x0, 0x15, 0xC9, 0x8C, 0x9, 0x8, 0x3F, 0x4, 0x0, 0x29
byte_8098CCD: .byte 0x79, 0xA, 0x48, 0x14, 0x22, 0x4A, 0x43, 0x80, 0x18
	.byte 0x68, 0x63, 0xC1, 0x7C, 0x69, 0x71, 0x1, 0x7C, 0xA9
	.byte 0x71, 0x41, 0x7C, 0xE9, 0x71, 0x52, 0x46, 0xD2, 0x6B
	.byte 0x81, 0x7C, 0xFF, 0x29, 0x2, 0xD0, 0x91, 0x75, 0xFF
	.byte 0x21, 0xD1, 0x75, 0x0, 0x20, 0xF7, 0x46
	.word off_8098C28
off_8098CFC: .word InterruptEnableRegister+1
	.byte 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xC, 0x2, 0xC, 0xFF
	.byte 0x1B, 0x4, 0x0, 0x0, 0xFF, 0xFF, 0xFF, 0xFF, 0x2, 0x8, 0x0, 0x4, 0x0, 0x0, 0x0, 0x0
	.byte 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xC, 0x2, 0xC, 0xFF, 0x55, 0x4, 0x0, 0x0
	.byte 0xFF, 0xFF, 0xFF, 0xFF, 0x1, 0x2, 0x0, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	.byte 0x0, 0x0, 0x0, 0x0, 0xC, 0x2, 0xC, 0xFF, 0x11, 0x5, 0x0, 0x0, 0xFF, 0xFF, 0xFF, 0xFF
	.byte 0x90, 0x2, 0x0, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	.byte 0xC, 0x2, 0xC, 0xFF, 0x1, 0x6, 0x0, 0x0, 0x20, 0x20, 0x1, 0xFF, 0x90, 0x2, 0x0, 0x4
	.byte 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xC, 0x2, 0xC, 0xFF
	.byte 0x2D, 0x6, 0x0, 0x0, 0xFF, 0xFF, 0xFF, 0xFF, 0x2, 0x0, 0x0, 0x4, 0x0, 0x0, 0x0, 0x0
	.byte 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xC, 0x2, 0xC, 0xFF, 0x11, 0x8, 0x0, 0x0
	.byte 0x32, 0x30, 0xFF, 0xFF, 0x2, 0x8, 0x0, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	.byte 0x0, 0x0, 0x0, 0x0, 0xC, 0x2, 0xC, 0xFF, 0xB, 0xC, 0x0, 0x0, 0xFF, 0xFF, 0xFF, 0xFF
	.byte 0x1, 0x2, 0x0, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	.byte 0xC, 0x2, 0xC, 0xFF, 0x11, 0xE, 0x0, 0x0, 0xFF, 0xFF, 0xFF, 0xFF
byte_8098DDC: .byte 0x3F, 0x0, 0x6, 0x29, 0xFF, 0x31, 0x17, 0x3E, 0x4, 0x34
	.byte 0x3, 0x2, 0x3A, 0xFF, 0x14, 0x4, 0x80, 0x4, 0x80, 0x19
	.byte 0xFF, 0x1F, 0x17, 0x1B, 0x8E, 0x9, 0x8, 0x4B
	.word byte_8098E25
	.byte 0x2, 0xFF, 0x1E, 0x50, 0x8, 0x1F, 0x27, 0x6, 0xFF, 0xFF
	.byte 0x2, 0xFF, 0x78, 0x7, 0x4B, 0x6D, 0x8E, 0x9, 0x8, 0x4C
	.byte 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x15, 0x20, 0x8E, 0x9
	.byte 0x8, 0x15
	.word byte_8098E20
byte_8098E20: .byte 0x3F, 0x4, 0x0, 0x0, 0xF0
byte_8098E25: .byte 0xB5, 0x29, 0x79, 0xF, 0x4C, 0x1C, 0x22, 0x4A, 0x43
	.byte 0xA4, 0x18, 0x6C, 0x63, 0x21, 0x7C, 0xA9, 0x71, 0x61
	.byte 0x7C, 0xE9, 0x71, 0x52, 0x46, 0xD2, 0x6B, 0xA1, 0x7C
	.byte 0xFF, 0x29, 0x2, 0xD0, 0x91, 0x75, 0xFF, 0x21, 0xD1
	.byte 0x75, 0xA0, 0x8A, 0x0, 0x42, 0x2, 0xD0, 0x0, 0x1C
	.byte 0x96, 0xF7, 0x5F, 0xF9, 0xE0, 0x8A, 0x0, 0x42, 0x2
	.byte 0xD0, 0x0, 0x1C, 0x96, 0xF7, 0x67, 0xF9, 0x0, 0x20
	.byte 0xF0, 0xBD, 0x0, 0x0
	.word off_8098CFC
	.byte 0xF0, 0xB5, 0x57, 0x46, 0xFF, 0x6B, 0x29, 0x79, 0x8
	.byte 0x4C, 0x1C, 0x22, 0x4A, 0x43, 0xA4, 0x18, 0x20, 0x7E
	.byte 0xFF, 0x28, 0x0, 0xD0, 0xB8, 0x71, 0x60, 0x7E, 0xFF
	.byte 0x28, 0x0, 0xD0, 0xF8, 0x71, 0xA0, 0x7E, 0xFF, 0x28
	.byte 0x0, 0xD0, 0x38, 0x72, 0x0, 0x20, 0xF0, 0xBD
	.word off_8098CFC
byte_8098E9C: .byte 0x84, 0x3B, 0x7A, 0x88, 0x0, 0x7, 0x0, 0x1, 0x38, 0x1, 0xDC
	.byte 0xFF, 0x0, 0x0, 0x38, 0x1, 0xD0, 0xFF, 0x0, 0x0, 0x84, 0x3B
	.byte 0x7A, 0x88, 0x0, 0x7, 0x0, 0x1, 0xE8, 0xFF, 0xCE, 0xFE, 0x0
	.byte 0x0, 0xE8, 0xFF, 0xC2, 0xFE, 0x0, 0x0, 0x84, 0x3B, 0x7A, 0x88
	.byte 0x0, 0x7, 0x0, 0x1, 0xFA, 0xFF, 0x5E, 0xFF, 0x0, 0x0, 0xFA
	.byte 0xFF, 0x52, 0xFF, 0x0, 0x0, 0x84, 0x3B, 0x7A, 0x88, 0x0, 0x7
	.byte 0x0, 0x1, 0x48, 0xFF, 0xD0, 0x0, 0x0, 0x0, 0x48, 0xFF, 0xC4
	.byte 0x0, 0x0, 0x0, 0x4, 0xDA, 0x2, 0x2, 0x7, 0x1, 0x0, 0x1
	.byte 0x4, 0x0, 0x24, 0x0, 0x0, 0x0, 0x10, 0x0, 0x24, 0x0, 0x0
	.byte 0x0, 0x4, 0xDA, 0x2, 0x2, 0x13, 0x1, 0x0, 0x1, 0x4, 0x0
	.byte 0x24, 0x0, 0x0, 0x0, 0x10, 0x0, 0x24, 0x0, 0x0, 0x0, 0x4
	.byte 0xFA, 0x2, 0x2, 0x4, 0x7, 0x0, 0x1, 0xFA, 0xFF, 0xE, 0x0
	.byte 0x10, 0x0, 0xFA, 0xFF, 0x2, 0x0, 0x10, 0x0, 0x4, 0xFA, 0x2
	.byte 0x2, 0xE, 0x7, 0x0, 0x1, 0xFA, 0xFF, 0xE, 0x0, 0x10, 0x0
	.byte 0xFA, 0xFF, 0x2, 0x0, 0x10, 0x0, 0x4, 0xDA, 0x2, 0x2, 0xF
	.byte 0x7, 0x0, 0x1, 0xE2, 0x0, 0x76, 0xFF, 0x80, 0x0, 0xE2, 0x0
	.byte 0x6A, 0xFF, 0x80, 0x0, 0x4, 0xDA, 0x2, 0x2, 0x15, 0x1, 0x0
	.byte 0x1, 0xE8, 0xFF, 0xBE, 0x0, 0x0, 0x0, 0xF4, 0xFF, 0xBE, 0x0
	.byte 0x0, 0x0, 0x4, 0xDA, 0x2, 0x2, 0xF, 0x5, 0x0, 0x1, 0xC0
	.byte 0xFF, 0x34, 0xFF, 0x40, 0x0, 0xB4, 0xFF, 0x34, 0xFF, 0x40, 0x0
	.byte 0x4, 0xDA, 0x2, 0x2, 0x15, 0x3, 0x0, 0x1, 0x8A, 0xFE, 0x1A
	.byte 0xFF, 0x20, 0x0, 0x8A, 0xFE, 0x26, 0xFF, 0x20, 0x0, 0x4, 0xFA
	.byte 0x2, 0x2, 0x11, 0x7, 0x0, 0x1, 0x5C, 0xFF, 0x24, 0x0, 0x0
	.byte 0x0, 0x5C, 0xFF, 0x18, 0x0, 0x0, 0x0, 0x4, 0xFA, 0x2, 0x2
	.byte 0x1A, 0x7, 0x0, 0x1, 0x5C, 0xFF, 0x24, 0x0, 0x0, 0x0, 0x5C
	.byte 0xFF, 0x18, 0x0, 0x0, 0x0, 0x4, 0xFA, 0x2, 0x2, 0x15, 0x7
	.byte 0x0, 0x1, 0x4A, 0x0, 0xF8, 0xFE, 0x40, 0x0, 0x46, 0x0, 0xEA
	.byte 0xFE, 0x40, 0x0, 0x4, 0xFA, 0x2, 0x2, 0x1A, 0x3, 0x0, 0x1
	.byte 0xC8, 0xFE, 0xD8, 0x0, 0x0, 0x0, 0xCA, 0xFE, 0xE6, 0x0, 0x0
	.byte 0x0, 0x4, 0xFA, 0x2, 0x2, 0x15, 0x1, 0x0, 0x1, 0x84, 0xFF
	.byte 0x3C, 0x0, 0x40, 0x0, 0x92, 0xFF, 0x40, 0x0, 0x40, 0x0, 0x4
	.byte 0xFA, 0x2, 0x2, 0x1A, 0x7, 0x0, 0x1, 0xE0, 0x0, 0xA0, 0xFF
	.byte 0x80, 0x0, 0xDE, 0x0, 0x92, 0xFF, 0x80, 0x0, 0x4, 0xFA, 0x2
	.byte 0x2, 0x8, 0x7, 0x0, 0x1, 0x9C, 0xFF, 0x1C, 0x0, 0x0, 0x0
	.byte 0x9C, 0xFF, 0x10, 0x0, 0x0, 0x0, 0x4, 0xFA, 0x2, 0x2, 0x12
	.byte 0x1, 0x0, 0x1, 0x4C, 0xFF, 0x78, 0xFF, 0xC0, 0xFF, 0x54, 0xFF
	.byte 0x78, 0xFF, 0xC0, 0xFF, 0x4, 0xFA, 0x2, 0x2, 0xE, 0x7, 0x0
	.byte 0x1, 0xC6, 0xFF, 0xF0, 0xFE, 0x80, 0x0, 0xC6, 0xFF, 0xE4, 0xFE
	.byte 0x80, 0x0, 0x4, 0xFA, 0x2, 0x2, 0x18, 0x7, 0x0, 0x1, 0x6
	.byte 0xFE, 0x30, 0x0, 0x0, 0x0, 0x6, 0xFE, 0x24, 0x0, 0x0, 0x0
	.byte 0x4, 0xFA, 0x2, 0x2, 0xE, 0x1, 0x0, 0x1, 0xC6, 0xFE, 0x64
	.byte 0xFF, 0x0, 0x0, 0xD2, 0xFE, 0x64, 0xFF, 0x0, 0x0, 0x4, 0xFA
	.byte 0x2, 0x2, 0x1C, 0x7, 0x0, 0x1, 0x9C, 0xFF, 0x1C, 0x0, 0x0
	.byte 0x0, 0x9C, 0xFF, 0x10, 0x0, 0x0, 0x0, 0x4, 0xFA, 0x2, 0x2
	.byte 0x26, 0x1, 0x0, 0x1, 0x4C, 0xFF, 0x78, 0xFF, 0xC0, 0xFF, 0x54
	.byte 0xFF, 0x78, 0xFF, 0xC0, 0xFF, 0x4, 0xDA, 0x2, 0x2, 0x0, 0x0
	.byte 0x1B, 0x1, 0xF8, 0xFF, 0x8, 0x0, 0x0, 0x0, 0xF8, 0xFF, 0x8
	.byte 0x0, 0x0, 0x0, 0x4, 0xFA, 0x2, 0x2, 0xA, 0x1, 0x0, 0x1
	.byte 0x4, 0x0, 0x24, 0x0, 0x0, 0x0, 0x10, 0x0, 0x24, 0x0, 0x0
	.byte 0x0
byte_80990B8: .byte 0x3F, 0x0, 0x6, 0x29, 0xFF, 0x31, 0x17, 0xC, 0x7, 0x1C, 0x6
	.byte 0xFF
	.word byte_80990CF
	.byte 0x2, 0xFF, 0x14, 0x3A, 0x6, 0x4, 0x88
byte_80990CF: .byte 0x2, 0xFF, 0x1E, 0x4B, 0x3D, 0x91, 0x9, 0x8, 0x3F, 0x4, 0x0
	.byte 0x0, 0x0
byte_80990DC: .byte 0x3F, 0x0, 0x6, 0x29, 0xFF, 0x31, 0x17, 0x2, 0xFF, 0x1, 0x4B
	.byte 0x65, 0x91, 0x9, 0x8, 0x2, 0xFF, 0x1E, 0x4E, 0xFF, 0xFF, 0x27
	.byte 0xFF, 0x8, 0x8, 0x7, 0x1C, 0x6, 0xFF, 0x14, 0x91, 0x9, 0x8
	.byte 0x2, 0xFF, 0x1E, 0x3A, 0x6, 0x4, 0x88, 0x1C, 0x8, 0x1, 0x14
	.byte 0x91, 0x9, 0x8, 0x3D
	.word dword_8099114
	.word byte_809911F
dword_8099114: .word 0x4B14FF02
	.word byte_809913D
	.byte 0x3F, 0x4, 0x0
byte_809911F: .byte 0x2, 0xFF, 0x14, 0x27, 0xFF, 0xC, 0x8, 0x7, 0x4B
	.word byte_80991E1
	.byte 0x2A, 0xFF, 0x15, 0x17, 0x2, 0xFF, 0x3C, 0x27, 0xFF
	.byte 0x8, 0x8, 0x7, 0x3F, 0x4, 0x0, 0x0, 0x0
byte_809913D: .byte 0xB5, 0xA8, 0x88, 0x71, 0xF7, 0xED, 0xFA, 0x1, 0x21
	.byte 0x6C, 0xF7, 0x3F, 0xFD, 0xA8, 0x88, 0x9C, 0xF7, 0x6F
	.byte 0xF8, 0xE8, 0x79, 0x0, 0x42, 0x3, 0xD0, 0x2C, 0x20
	.byte 0x10, 0x21, 0x6D, 0xF7, 0x89, 0xF8, 0x0, 0x20, 0x0
	.byte 0xBD, 0x0, 0x0, 0xF0, 0xB5, 0xA8, 0x79, 0x1C, 0x4F
	.byte 0x14, 0x21, 0x41, 0x43, 0x7F, 0x18, 0x38, 0x68, 0x0
	.byte 0x42, 0x2, 0xD0, 0x9E, 0xF7, 0xAB, 0xFC, 0x28, 0x63
	.byte 0x38, 0x79, 0xA8, 0x71, 0xF8, 0x79, 0x1, 0x21, 0x8
	.byte 0x42, 0x24, 0xD0, 0x78, 0x79, 0x5, 0xF0, 0x90, 0xF8
	.byte 0xB8, 0x79, 0x79, 0x79, 0x40, 0x18, 0x4, 0xF0, 0xD2
	.byte 0xFF, 0x8, 0x20, 0xA, 0x21, 0xC, 0x22, 0x38, 0x5E
	.byte 0x79, 0x5E, 0xBA, 0x5E, 0x0, 0x4, 0x9, 0x4, 0x12
	.byte 0x4, 0x4, 0xF0, 0xFB, 0xFF, 0x0, 0x20, 0x96, 0xF7
	.byte 0xFF, 0xFF, 0xE, 0x20, 0x10, 0x21, 0x12, 0x22, 0x38
	.byte 0x5E, 0x79, 0x5E, 0xBA, 0x5E, 0x0, 0x4, 0x9, 0x4
	.byte 0x12, 0x4, 0x97, 0xF7, 0x9, 0xF8, 0x17, 0x20, 0x15
	.byte 0x21, 0x95, 0xF7, 0xAD, 0xFF, 0xF8, 0x79, 0xC0, 0x9
	.byte 0x28, 0x72, 0x0, 0x20, 0xF0, 0xBD
	.word byte_8098E9C
	.byte 0xF0
byte_80991E1: .byte 0xB5, 0x1, 0x20, 0x51, 0x46, 0xC9, 0x6B, 0x89, 0x69
	.byte 0x1C, 0x31, 0x96, 0xF7, 0xE1, 0xFF, 0x0, 0x20, 0xF0
	.byte 0xBD
CutsceneScript_80991F4: .byte 0x3F, 0x0, 0x6, 0x29, 0xFF, 0x31, 0x17, 0x47, 0x0, 0xFF
	.byte 0x4, 0x4B
	.word RunLMessageTextScript+1
	.word 0x554B8004
	.word 0x400803FD
	.word 0x4704FF04
	.word 0x3F04FF00
	.word 0x4
	thumb_func_end sub_8098BE8

	thumb_local_start
RunLMessageTextScript:
	push {r4-r7,lr}
	bl GetCurPETNavi // () -> u8
	cmp r0, #0
	bne loc_8099282
	mov r0, r10
	ldr r0, [r0,#oToolkit_GameStatePtr]
	ldrb r0, [r0,#oGameState_MapGroup]
	cmp r0, #0x80
	bge loc_809924A
	movflag EVENT_COPYBOT_ACTIVE
	bl TestEventFlagFromImmediate
	bne loc_8099282
	movflag EVENT_PET_NAVI_ACTIVE
	bl TestEventFlagFromImmediate
	beq loc_8099282
	movflag EVENT_172A
	bl TestEventFlagFromImmediate
	bne loc_8099282
loc_809924A:
	bl GetCurPETNavi // () -> u8
	mov r1, #0x25 
	bl GetNaviStatsByte
	cmp r0, #1
	bne loc_8099266
	ldr r0, dword_8099294 // =0x88738b24 
	bl uncomp_8037AEC
	mov r1, #0
	bl chatbox_runScript // (void *scripts, u8 scriptOffIdx) -> void
	b loc_8099290
loc_8099266:
	bl GetCurPETNavi // () -> u8
	mov r1, #0x5f 
	bl GetNaviStatsByte
	cmp r0, #1
	bne loc_8099282
	ldr r0, dword_8099298 // =0x8873a528 
	bl uncomp_8037AEC
	mov r1, #0
	bl chatbox_runScript // (void *scripts, u8 scriptOffIdx) -> void
	b loc_8099290
loc_8099282:
	bl chatbox_uncomp_803FD3C
	mov r0, r10
	ldr r0, [r0,#oToolkit_GameStatePtr]
	ldrb r0, [r0,#oGameState_Unk_15]
	bl chatbox_runTrainScript // (u8 scriptOffIdx) -> void
loc_8099290:
	mov r0, #0
	pop {r4-r7,pc}
dword_8099294: .word 0x88738B24
dword_8099298: .word 0x8873A528
byte_809929C: .byte 0x0, 0x0, 0x0, 0x0, 0x34, 0x1, 0xFF, 0x1, 0x76, 0x0, 0x44, 0x0, 0x0
	.byte 0x0, 0x82, 0x0, 0x44, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x36, 0x1
	.byte 0xFF, 0x1, 0x76, 0x0, 0x44, 0x0, 0x0, 0x0, 0x82, 0x0, 0x44, 0x0, 0x0
	.byte 0x0, 0x4, 0x34, 0x3, 0x2, 0x6, 0x5, 0xFF, 0x1, 0xD8, 0xFE, 0x64, 0x1
	.byte 0x0, 0x0, 0xC4, 0xFE, 0x64, 0x1, 0x0, 0x0, 0x4, 0xDA, 0x2, 0x2, 0xD
	.byte 0x7, 0xFF, 0x1, 0xE2, 0x0, 0x76, 0xFF, 0x80, 0x0, 0xE2, 0x0, 0x6A, 0xFF
	.byte 0x80, 0x0, 0x4, 0xDA, 0x2, 0x2, 0x13, 0x1, 0xFF, 0x1, 0xE8, 0xFF, 0xBE
	.byte 0x0, 0x0, 0x0, 0xF4, 0xFF, 0xBE, 0x0, 0x0, 0x0, 0x4, 0xDA, 0x2, 0x2
	.byte 0xD, 0x5, 0xFF, 0x1, 0xC0, 0xFF, 0x34, 0xFF, 0x40, 0x0, 0xB4, 0xFF, 0x34
	.byte 0xFF, 0x40, 0x0, 0x4, 0xDA, 0x2, 0x2, 0x13, 0x3, 0xFF, 0x1, 0x8A, 0xFE
	.byte 0x1A, 0xFF, 0x20, 0x0, 0x8A, 0xFE, 0x26, 0xFF, 0x20, 0x0, 0x4, 0xFA, 0x2
	.byte 0x2, 0xD, 0x7, 0xFF, 0x1, 0xC6, 0xFF, 0xF0, 0xFE, 0x80, 0x0, 0xC6, 0xFF
	.byte 0xE4, 0xFE, 0x80, 0x0, 0x4, 0xFA, 0x2, 0x2, 0x17, 0x7, 0xFF, 0x1, 0x6
	.byte 0xFE, 0x30, 0x0, 0x0, 0x0, 0x6, 0xFE, 0x24, 0x0, 0x0, 0x0, 0x4, 0xFA
	.byte 0x2, 0x2, 0x34, 0x1, 0xFF, 0x1, 0xD6, 0x0, 0xF2, 0xFF, 0x0, 0x0, 0xE2
	.byte 0x0, 0xF2, 0xFF, 0x0, 0x0, 0x4, 0xFA, 0x2, 0x2, 0x35, 0x1, 0xFF, 0x1
	.byte 0xD6, 0x0, 0xF2, 0xFF, 0x0, 0x0, 0xE2, 0x0, 0xF2, 0xFF, 0x0, 0x0, 0x4
	.byte 0xFA, 0x2, 0x2, 0x7, 0x1, 0xFF, 0x1, 0xD0, 0x0, 0xB6, 0x0, 0x0, 0x0
	.byte 0xDC, 0x0, 0xB6, 0x0, 0x0, 0x0, 0x4, 0xFA, 0x2, 0x2, 0x1, 0x1, 0xFF
	.byte 0x1, 0x56, 0x0, 0xF2, 0xFF, 0x0, 0x0, 0x62, 0x0, 0xF2, 0xFF, 0x0, 0x0
	.byte 0x4, 0xFA, 0x2, 0x2, 0xB, 0x1, 0xFF, 0x1, 0x56, 0x0, 0xF2, 0xFF, 0x0
	.byte 0x0, 0x56, 0x0, 0xF2, 0xFF, 0x0, 0x0, 0x4, 0xFA, 0x2, 0x2, 0xB, 0x1
	.byte 0xFF, 0x1, 0x56, 0x0, 0xF2, 0xFF, 0x0, 0x0, 0x56, 0x0, 0xF2, 0xFF, 0x0
	.byte 0x0, 0x4, 0xFA, 0x2, 0x2, 0xB, 0x1, 0xFF, 0x1, 0x56, 0x0, 0xF2, 0xFF
	.byte 0x0, 0x0, 0x56, 0x0, 0xF2, 0xFF, 0x0, 0x0, 0x4, 0xFA, 0x2, 0x2, 0xC
	.byte 0x1, 0xFF, 0x1, 0x56, 0x0, 0xF2, 0xFF, 0x0, 0x0, 0x56, 0x0, 0xF2, 0xFF
	.byte 0x0, 0x0, 0x4, 0xFA, 0x2, 0x2, 0x1, 0x1, 0xFF, 0x1, 0x56, 0x0, 0xF2
	.byte 0xFF, 0x0, 0x0, 0x56, 0x0, 0xF2, 0xFF, 0x0, 0x0, 0x4, 0xFA, 0x2, 0x2
	.byte 0x3E, 0x7, 0xFF, 0x1, 0xCC, 0xFE, 0xC6, 0x0, 0x0, 0x0, 0xCC, 0xFE, 0xBA
	.byte 0x0, 0x0, 0x0, 0x4, 0xFA, 0x2, 0x2, 0xC, 0x7, 0xFF, 0x1, 0xC4, 0x0
	.byte 0xC0, 0xFF, 0x0, 0x0, 0xC4, 0x0, 0xB4, 0xFF, 0x0, 0x0, 0x4, 0xFA, 0x2
	.byte 0x2, 0x21, 0x7, 0xFF, 0x1, 0xE2, 0x0, 0x7A, 0xFF, 0x80, 0x0, 0xE2, 0x0
	.byte 0x6E, 0xFF, 0x80, 0x0, 0x4, 0xFA, 0x2, 0x2, 0x10, 0x7, 0xFF, 0x1, 0x7C
	.byte 0x0, 0xAC, 0xFF, 0x0, 0x0, 0x7C, 0x0, 0xA0, 0xFF, 0x0, 0x0, 0x4, 0xFA
	.byte 0x2, 0x2, 0x11, 0x7, 0xFF, 0x1, 0x7C, 0x0, 0xAC, 0xFF, 0x0, 0x0, 0x7C
	.byte 0x0, 0xA0, 0xFF, 0x0, 0x0, 0x4, 0xFA, 0x2, 0x2, 0x47, 0x1, 0xFF, 0x1
	.byte 0x50, 0x1, 0xA8, 0xFF, 0x40, 0x0, 0x50, 0x1, 0xA8, 0xFF, 0x40, 0x0, 0x4
	.byte 0xFA, 0x2, 0x2, 0x8, 0x7, 0xFF, 0x1, 0xCE, 0xFF, 0x6A, 0xFF, 0x0, 0x0
	.byte 0xCE, 0xFF, 0x5E, 0xFF, 0x0, 0x0, 0x4, 0xFA, 0x2, 0x2, 0x9, 0x7, 0xFF
	.byte 0x1, 0xCE, 0xFF, 0x6A, 0xFF, 0x0, 0x0, 0xCE, 0xFF, 0x5E, 0xFF, 0x0, 0x0
	.byte 0x4, 0xFA, 0x2, 0x2, 0xC, 0x7, 0xFF, 0x1, 0xEE, 0xFF, 0x6A, 0xFF, 0x0
	.byte 0x0, 0xEE, 0xFF, 0x5E, 0xFF, 0x0, 0x0, 0x4, 0xFA, 0x2, 0x2, 0xD, 0x7
	.byte 0xFF, 0x1, 0xEE, 0xFF, 0x6A, 0xFF, 0x0, 0x0, 0xEE, 0xFF, 0x5E, 0xFF, 0x0
	.byte 0x0, 0x4, 0xFA, 0x2, 0x2, 0x10, 0x7, 0xFF, 0x1, 0xC, 0x0, 0x6A, 0xFF
	.byte 0x0, 0x0, 0xC, 0x0, 0x5E, 0xFF, 0x0, 0x0, 0x4, 0xFA, 0x2, 0x2, 0x11
	.byte 0x7, 0xFF, 0x1, 0xC, 0x0, 0x6A, 0xFF, 0x0, 0x0, 0xC, 0x0, 0x5E, 0xFF
	.byte 0x0, 0x0, 0x4, 0xFA, 0x2, 0x2, 0x14, 0x7, 0xFF, 0x1, 0x2E, 0x0, 0x6A
	.byte 0xFF, 0x0, 0x0, 0x2E, 0x0, 0x5E, 0xFF, 0x0, 0x0, 0x4, 0xFA, 0x2, 0x2
	.byte 0x15, 0x7, 0xFF, 0x1, 0x2E, 0x0, 0x6A, 0xFF, 0x0, 0x0, 0x2E, 0x0, 0x5E
	.byte 0xFF, 0x0, 0x0, 0x4, 0xFA, 0x2, 0x2, 0x18, 0x7, 0xFF, 0x1, 0x50, 0x0
	.byte 0x6A, 0xFF, 0x0, 0x0, 0x50, 0x0, 0x5E, 0xFF, 0x0, 0x0, 0x4, 0xFA, 0x2
	.byte 0x2, 0x19, 0x7, 0xFF, 0x1, 0x50, 0x0, 0x6A, 0xFF, 0x0, 0x0, 0x50, 0x0
	.byte 0x5E, 0xFF, 0x0, 0x0, 0x4, 0xFA, 0x2, 0x2, 0x7, 0x3, 0xFF, 0x1, 0xE
	.byte 0x0, 0x7A, 0x0, 0x0, 0x0, 0xE, 0x0, 0x86, 0x0, 0x0, 0x0, 0x4, 0xFA
	.byte 0x2, 0x2, 0x3D, 0x7, 0xFF, 0x1, 0x6A, 0x0, 0x40, 0x1, 0x40, 0x0, 0x6A
	.byte 0x0, 0x34, 0x1, 0x40, 0x0, 0x4, 0xFA, 0x2, 0x2, 0x35, 0x1, 0xFF, 0x1
	.byte 0x1A, 0x0, 0x98, 0x0, 0x0, 0x0, 0x26, 0x0, 0x98, 0x0, 0x0, 0x0, 0x4
	.byte 0xFA, 0x2, 0x2, 0xD, 0x1, 0xFF, 0x1, 0x7E, 0x0, 0xB0, 0x0, 0x50, 0x0
	.byte 0x86, 0x0, 0xB0, 0x0, 0x50, 0x0, 0x4, 0xFA, 0x2, 0x2, 0xD, 0x7, 0xFF
	.byte 0x1, 0xAE, 0x0, 0xDA, 0xFE, 0x10, 0x0, 0xAE, 0x0, 0xCE, 0xFE, 0x10, 0x0
	.byte 0x4, 0xFA, 0x2, 0x2, 0x3, 0x1, 0xFF, 0x1, 0xD4, 0x0, 0xF4, 0xFF, 0x0
	.byte 0x0, 0xE0, 0x0, 0xF4, 0xFF, 0x0, 0x0, 0x4, 0xFA, 0x2, 0x2, 0xD, 0x1
	.byte 0xFF, 0x1, 0x1A, 0x1, 0xA2, 0x0, 0x0, 0x0, 0x26, 0x1, 0xA2, 0x0, 0x0
	.byte 0x0, 0x4, 0xFA, 0x2, 0x2, 0x18, 0x1, 0xFF, 0x1, 0x76, 0x0, 0xF2, 0xFF
	.byte 0x0, 0x0, 0x76, 0x0, 0xF2, 0xFF, 0x0, 0x0, 0x4, 0xFA, 0x2, 0x2, 0x18
	.byte 0x1, 0xFF, 0x1, 0x54, 0x0, 0x52, 0xFF, 0x0, 0x0, 0x54, 0x0, 0x52, 0xFF
	.byte 0x0, 0x0, 0x4, 0xFA, 0x2, 0x2, 0x18, 0x1, 0xFF, 0x1, 0x36, 0x0, 0x92
	.byte 0x0, 0x0, 0x0, 0x36, 0x0, 0x92, 0x0, 0x0, 0x0, 0x4, 0xFA, 0x2, 0x2
	.byte 0x18, 0x1, 0xFF, 0x1, 0x14, 0x0, 0xF4, 0x0, 0x0, 0x0, 0x14, 0x0, 0xF4
	.byte 0x0, 0x0, 0x0, 0x4, 0xFA, 0x2, 0x2, 0x3, 0x7, 0xFF, 0x1, 0xC, 0x0
	.byte 0x2C, 0xFF, 0x0, 0x0, 0xC, 0x0, 0x2C, 0xFF, 0x0, 0x0, 0x4, 0xFA, 0x2
	.byte 0x2, 0x3, 0x5, 0xFF, 0x1, 0xA6, 0xFF, 0xF2, 0xFF, 0x0, 0x0, 0xA6, 0xFF
	.byte 0xF2, 0xFF, 0x0, 0x0, 0x4, 0xFA, 0x2, 0x2, 0x3, 0x3, 0xFF, 0x1, 0xEC
	.byte 0xFF, 0xDA, 0x0, 0x0, 0x0, 0xEC, 0xFF, 0xDA, 0x0, 0x0, 0x0, 0x4, 0xFA
	.byte 0x2, 0x2, 0x38, 0x7, 0xFF, 0x1, 0x2C, 0x0, 0xF6, 0xFF, 0x20, 0x0, 0x2C
	.byte 0x0, 0xF6, 0xFF, 0x20, 0x0, 0x4, 0xFA, 0x2, 0x2, 0x38, 0x7, 0xFF, 0x1
	.byte 0xAA, 0xFF, 0xB8, 0xFF, 0x20, 0x0, 0xAA, 0xFF, 0xB8, 0xFF, 0x20, 0x0, 0x4
	.byte 0xFA, 0x2, 0x2, 0x38, 0x3, 0xFF, 0x1, 0x6A, 0xFF, 0x54, 0x0, 0x20, 0x0
	.byte 0x6A, 0xFF, 0x54, 0x0, 0x20, 0x0, 0x4, 0xFA, 0x2, 0x2, 0x38, 0x1, 0xFF
	.byte 0x1, 0xAA, 0xFF, 0x52, 0x0, 0x20, 0x0, 0xAA, 0xFF, 0x52, 0x0, 0x20, 0x0
	.byte 0x4, 0xFA, 0x2, 0x2, 0x38, 0x7, 0xFF, 0x1, 0x6A, 0xFF, 0xB8, 0xFF, 0x20
	.byte 0x0, 0x6A, 0xFF, 0xB8, 0xFF, 0x20, 0x0, 0x4, 0xFA, 0x2, 0x2, 0x6F, 0x7
	.byte 0xFF, 0x1, 0xD2, 0x0, 0x46, 0xFF, 0x0, 0x0, 0xD2, 0x0, 0x3A, 0xFF, 0x0
	.byte 0x0, 0x4, 0xFA, 0x2, 0x2, 0x74, 0x1, 0xFF, 0x1, 0x3C, 0x0, 0xC, 0x1
	.byte 0x0, 0x0, 0x48, 0x0, 0xC, 0x1, 0x0, 0x0, 0x4, 0xFA, 0x2, 0x2, 0x2E
	.byte 0x1, 0xFF, 0x1, 0x18, 0x0, 0x74, 0x0, 0x0, 0x0, 0x24, 0x0, 0x74, 0x0
	.byte 0x0, 0x0, 0x4, 0xFA, 0x2, 0x2, 0x10, 0x7, 0xFF, 0x1, 0x98, 0x0, 0x42
	.byte 0xFF, 0x0, 0x0, 0x98, 0x0, 0x36, 0xFF, 0x0, 0x0, 0x4, 0xFA, 0x2, 0x2
	.byte 0x13, 0x1, 0xFF, 0x1, 0x60, 0xFF, 0xA6, 0xFF, 0x0, 0x0, 0x6C, 0xFF, 0xA6
	.byte 0xFF, 0x0, 0x0, 0x4, 0xFA, 0x2, 0x2, 0xB, 0x1, 0xFF, 0x1, 0x7C, 0x0
	.byte 0xA, 0x0, 0x0, 0x0, 0x88, 0x0, 0xA, 0x0, 0x0, 0x0, 0x4, 0xFA, 0x2
	.byte 0x2, 0x54, 0x7, 0xFF, 0x1, 0xE4, 0xFF, 0x3A, 0xFF, 0x0, 0x0, 0xE4, 0xFF
	.byte 0x2E, 0xFF, 0x0, 0x0, 0x4, 0xFA, 0x2, 0x2, 0x53, 0x7, 0xFF, 0x1, 0xE4
	.byte 0xFF, 0x3A, 0xFF, 0x0, 0x0, 0xE4, 0xFF, 0x2E, 0xFF, 0x0, 0x0, 0x4, 0xFA
	.byte 0x2, 0x2, 0x43, 0x1, 0xFF, 0x1, 0x4, 0x0, 0x24, 0x0, 0x0, 0x0, 0x10
	.byte 0x0, 0x24, 0x0, 0x0, 0x0, 0x4, 0xFA, 0x2, 0x2, 0x45, 0x1, 0xFF, 0x1
	.byte 0x4, 0x0, 0x24, 0x0, 0x0, 0x0, 0x10, 0x0, 0x24, 0x0, 0x0, 0x0, 0x4
	.byte 0xFA, 0x2, 0x2, 0x43, 0x7, 0xFF, 0x1, 0x9C, 0xFF, 0x1C, 0x0, 0x0, 0x0
	.byte 0x9C, 0xFF, 0x10, 0x0, 0x0, 0x0, 0x4, 0xFA, 0x2, 0x2, 0x45, 0x7, 0xFF
	.byte 0x1, 0x9C, 0xFF, 0x1C, 0x0, 0x0, 0x0, 0x9C, 0xFF, 0x10, 0x0, 0x0, 0x0
	.byte 0x4, 0xFA, 0x2, 0x2, 0x43, 0x7, 0xFF, 0x1, 0xFA, 0xFF, 0xE, 0x0, 0x10
	.byte 0x0, 0xFA, 0xFF, 0x2, 0x0, 0x10, 0x0, 0x4, 0xFA, 0x2, 0x2, 0x45, 0x7
	.byte 0xFF, 0x1, 0xFA, 0xFF, 0xE, 0x0, 0x10, 0x0, 0xFA, 0xFF, 0x2, 0x0, 0x10
	.byte 0x0, 0x4, 0xFA, 0x2, 0x2, 0x43, 0x7, 0xFF, 0x1, 0x5C, 0xFF, 0x24, 0x0
	.byte 0x0, 0x0, 0x5C, 0xFF, 0x18, 0x0, 0x0, 0x0, 0x4, 0xFA, 0x2, 0x2, 0x45
	.byte 0x7, 0xFF, 0x1, 0x5C, 0xFF, 0x24, 0x0, 0x0, 0x0, 0x5C, 0xFF, 0x18, 0x0
	.byte 0x0, 0x0, 0x4, 0xFA, 0x2, 0x2, 0x43, 0x1, 0xFF, 0x1, 0x4C, 0xFF, 0x78
	.byte 0xFF, 0xC0, 0xFF, 0x54, 0xFF, 0x78, 0xFF, 0xC0, 0xFF, 0x4, 0xFA, 0x2, 0x2
	.byte 0x45, 0x1, 0xFF, 0x1, 0x4C, 0xFF, 0x78, 0xFF, 0xC0, 0xFF, 0x54, 0xFF, 0x78
	.byte 0xFF, 0xC0, 0xFF, 0x4, 0xFA, 0x2, 0x2, 0x25, 0x7, 0xFF, 0x1, 0x8E, 0x0
	.byte 0x50, 0x0, 0x0, 0x0, 0x8E, 0x0, 0x44, 0x0, 0x0, 0x0, 0x4, 0xFA, 0x2
	.byte 0x2, 0x27, 0x7, 0xFF, 0x1, 0x8E, 0x0, 0x50, 0x0, 0x0, 0x0, 0x8E, 0x0
	.byte 0x44, 0x0, 0x0, 0x0, 0x4, 0xFA, 0x2, 0x2, 0xC, 0x1, 0xFF, 0x1, 0x4
	.byte 0x0, 0x24, 0x0, 0x0, 0x0, 0x10, 0x0, 0x24, 0x0, 0x0, 0x0, 0x4, 0x34
	.byte 0x3, 0x2, 0x14, 0x5, 0xFF, 0x1, 0x2, 0xFF, 0xBC, 0x1, 0x0, 0x0, 0xF2
	.byte 0xFE, 0xBC, 0x1, 0x0, 0x0, 0x4, 0x34, 0x3, 0x2, 0x16, 0x5, 0xFF, 0x1
	.byte 0xA2, 0xFE, 0x1C, 0x1, 0x0, 0x0, 0x92, 0xFE, 0x1C, 0x1, 0x0, 0x0, 0x4
	.byte 0x34, 0x3, 0x2, 0x18, 0x7, 0xFF, 0x1, 0x4, 0xFF, 0x3A, 0xFF, 0x40, 0x0
	.byte 0x4, 0xFF, 0x2A, 0xFF, 0x40, 0x0, 0x4, 0x34, 0x3, 0x2, 0x1A, 0x3, 0xFF
	.byte 0x1, 0x86, 0x0, 0x5E, 0xFF, 0x40, 0x0, 0x86, 0x0, 0x6E, 0xFF, 0x40, 0x0
	.byte 0x4, 0x34, 0x3, 0x2, 0x1C, 0x1, 0xFF, 0x1, 0x86, 0x0, 0xDA, 0xFF, 0x0
	.byte 0x0, 0x96, 0x0, 0xDA, 0xFF, 0x0, 0x0, 0x4, 0x34, 0x3, 0x2, 0x1E, 0x3
	.byte 0xFF, 0x1, 0x86, 0x0, 0x5C, 0x1, 0x0, 0x0, 0x86, 0x0, 0x6C, 0x1, 0x0
	.byte 0x0, 0x4, 0xFA, 0x2, 0x2, 0x34, 0x7, 0xFF, 0x1, 0xC, 0x0, 0xEA, 0xFE
	.byte 0x0, 0x0, 0xC, 0x0, 0xDE, 0xFE, 0x0, 0x0, 0x4, 0xFA, 0x2, 0x2, 0x35
	.byte 0x7, 0xFF, 0x1, 0xC, 0x0, 0xEA, 0xFE, 0x0, 0x0, 0xC, 0x0, 0xDE, 0xFE
	.byte 0x0, 0x0, 0x4, 0xFA, 0x2, 0x2, 0xC, 0x5, 0xFF, 0x1, 0x46, 0xFF, 0xF0
	.byte 0xFF, 0x0, 0x0, 0x3A, 0xFF, 0xF0, 0xFF, 0x0, 0x0, 0x4, 0xFA, 0x2, 0x2
	.byte 0xD, 0x5, 0xFF, 0x1, 0x46, 0xFF, 0xF0, 0xFF, 0x0, 0x0, 0x3A, 0xFF, 0xF0
	.byte 0xFF, 0x0, 0x0, 0x4, 0xFA, 0x2, 0x2, 0xC, 0x3, 0xFF, 0x1, 0xE, 0x0
	.byte 0xF8, 0x0, 0x0, 0x0, 0xE, 0x0, 0x4, 0x1, 0x0, 0x0, 0x4, 0xFA, 0x2
	.byte 0x2, 0xD, 0x3, 0xFF, 0x1, 0xE, 0x0, 0xF8, 0x0, 0x0, 0x0, 0xE, 0x0
	.byte 0x4, 0x1, 0x0, 0x0, 0x4, 0xFA, 0x2, 0x2, 0x34, 0x7, 0xFF, 0x1, 0x90
	.byte 0xFF, 0x8, 0xFF, 0x0, 0x0, 0x90, 0xFF, 0xFC, 0xFE, 0x0, 0x0, 0x4, 0xFA
	.byte 0x2, 0x2, 0x35, 0x7, 0xFF, 0x1, 0x90, 0xFF, 0x8, 0xFF, 0x0, 0x0, 0x90
	.byte 0xFF, 0xFC, 0xFE, 0x0, 0x0, 0x4, 0xDA, 0x2, 0x2, 0x1A, 0x7, 0xFF, 0x1
	.byte 0x54, 0x0, 0xDC, 0xFF, 0x0, 0x0, 0x54, 0x0, 0xD0, 0xFF, 0x0, 0x0, 0x4
	.byte 0xDA, 0x2, 0x2, 0x1B, 0x1, 0xFF, 0x1, 0x9C, 0xFF, 0x0, 0x0, 0x0, 0x0
	.byte 0xA8, 0xFF, 0x0, 0x0, 0x0, 0x0
	.word eTextScript202DA04
	.byte 0x1C, 0x3, 0xFF, 0x1, 0x50, 0xFF, 0xCE, 0x0, 0x0, 0x0, 0x50
	.byte 0xFF, 0xDA, 0x0, 0x0, 0x0, 0x4, 0xDA, 0x2, 0x2, 0x1D, 0x7
	.byte 0xFF, 0x1, 0xD4, 0xFF, 0x70, 0xFF, 0x0, 0x0, 0xD4, 0xFF, 0x64
	.byte 0xFF, 0x0, 0x0, 0x4, 0xDA, 0x2, 0x2, 0x1E, 0x1, 0xFF, 0x1
	.byte 0x76, 0x0, 0x42, 0x0, 0x0, 0x0, 0x82, 0x0, 0x42, 0x0, 0x0
	.byte 0x0, 0x4, 0xDA, 0x2, 0x2, 0xB, 0x7, 0xFF, 0x1, 0x72, 0xFF
	.byte 0x42, 0x0, 0x0, 0x0, 0x72, 0xFF, 0x36, 0x0, 0x0, 0x0, 0x4
	.byte 0xDA, 0x2, 0x2, 0xB, 0x1, 0xFF, 0x1, 0xBE, 0xFF, 0x72, 0x0
	.byte 0x0, 0x0, 0xCA, 0xFF, 0x72, 0x0, 0x0, 0x0, 0x4, 0xDA, 0x2
	.byte 0x2, 0x1, 0x1, 0xFF, 0x1, 0xB6, 0xFF, 0x42, 0x0, 0x0, 0x0
	.byte 0xC2, 0xFF, 0x42, 0x0, 0x0, 0x0, 0x4, 0xDA, 0x2, 0x2, 0xB
	.byte 0x1, 0xFF, 0x1, 0xC4, 0xFF, 0x54, 0x0, 0x0, 0x0, 0xD0, 0xFF
	.byte 0x54, 0x0, 0x0, 0x0, 0x4, 0xDA, 0x2, 0x2, 0xC, 0x7, 0xFF
	.byte 0x1, 0x44, 0x0, 0xF4, 0xFF, 0x0, 0x0, 0x44, 0x0, 0xE8, 0xFF
	.byte 0x0, 0x0, 0x4, 0xDA, 0x2, 0x2, 0x10, 0x7, 0xFF, 0x1, 0xC
	.byte 0x0, 0xAC, 0xFF, 0x0, 0x0, 0xC, 0x0, 0xA0, 0xFF, 0x0, 0x0
	.byte 0x4, 0xDA, 0x2, 0x2, 0x11, 0x3, 0xFF, 0x1, 0x92, 0x0, 0x92
	.byte 0x0, 0xE0, 0xFF, 0x92, 0x0, 0x9E, 0x0, 0xE0, 0xFF, 0x4, 0xDA
	.byte 0x2, 0x2, 0x10, 0x5, 0xFF, 0x1, 0x8C, 0xFF, 0xFA, 0xFF, 0x0
	.byte 0x0, 0x80, 0xFF, 0xFA, 0xFF, 0x0, 0x0, 0x4, 0xDA, 0x2, 0x2
	.byte 0x10, 0x5, 0xFF, 0x1, 0xA8, 0xFE, 0xB6, 0x0, 0x28, 0x0, 0x9C
	.byte 0xFE, 0xB6, 0x0, 0x28, 0x0, 0x4, 0xDA, 0x2, 0x2, 0x10, 0x7
	.byte 0xFF, 0x1, 0x5A, 0xFF, 0x3E, 0x0, 0x0, 0x0, 0x5A, 0xFF, 0x32
	.byte 0x0, 0x0, 0x0, 0x4, 0xDA, 0x2, 0x2, 0x10, 0x1, 0xFF, 0x1
	.byte 0xF6, 0xFF, 0xA2, 0x0, 0x0, 0x0, 0x2, 0x0, 0xA2, 0x0, 0x0
	.byte 0x0, 0x4, 0xDA, 0x2, 0x2, 0x10, 0x1, 0xFF, 0x1, 0x9C, 0x0
	.byte 0x4C, 0x0, 0x60, 0x0, 0xA8, 0x0, 0x4C, 0x0, 0x60, 0x0, 0x4
	.byte 0xDA, 0x2, 0x2, 0x11, 0x1, 0xFF, 0x1, 0x58, 0x1, 0x58, 0xFF
	.byte 0x0, 0x0, 0x64, 0x1, 0x58, 0xFF, 0x0, 0x0, 0x4, 0xDA, 0x2
	.byte 0x2, 0x12, 0x7, 0xFF, 0x1, 0x24, 0x0, 0x32, 0xFF, 0xA0, 0x0
	.byte 0x24, 0x0, 0x26, 0xFF, 0xA0, 0x0, 0x4, 0xDA, 0x2, 0x2, 0x10
	.byte 0x3, 0xFF, 0x1, 0xE0, 0xFF, 0xD0, 0xFF, 0x10, 0x0, 0xE0, 0xFF
	.byte 0xDC, 0xFF, 0x10, 0x0, 0x4, 0xDA, 0x2, 0x2, 0x1A, 0x1, 0xFF
	.byte 0x1, 0xEA, 0xFF, 0xE4, 0x0, 0x0, 0x0, 0xF6, 0xFF, 0xE4, 0x0
	.byte 0x0, 0x0, 0x4, 0xDA, 0x2, 0x2, 0x1B, 0x7, 0xFF, 0x1, 0x90
	.byte 0xFF, 0x60, 0x0, 0x0, 0x0, 0x90, 0xFF, 0x54, 0x0, 0x0, 0x0
	.byte 0x4, 0xDA, 0x2, 0x2, 0x1C, 0x7, 0xFF, 0x1, 0xCC, 0xFE, 0xC2
	.byte 0xFF, 0x0, 0x0, 0xCC, 0xFE, 0xB6, 0xFF, 0x0, 0x0, 0x4, 0xDA
	.byte 0x2, 0x2, 0x1D, 0x1, 0xFF, 0x1, 0x4C, 0x0, 0xA0, 0xFF, 0x0
	.byte 0x0, 0x58, 0x0, 0xA0, 0xFF, 0x0, 0x0, 0x4, 0xDA, 0x2, 0x2
	.byte 0xB, 0x5, 0xFF, 0x1, 0x98, 0xFF, 0x10, 0x0, 0x0, 0x0, 0x8C
	.byte 0xFF, 0x10, 0x0, 0x0, 0x0, 0x4, 0xDA, 0x2, 0x2, 0xB, 0x1
	.byte 0xFF, 0x1, 0xC2, 0xFF, 0x3C, 0x0, 0x0, 0x0, 0xCE, 0xFF, 0x3C
	.byte 0x0, 0x0, 0x0, 0x4, 0xDA, 0x2, 0x2, 0xB, 0x1, 0xFF, 0x1
	.byte 0x52, 0xFF, 0x96, 0x0, 0x0, 0x0, 0x5E, 0xFF, 0x96, 0x0, 0x0
	.byte 0x0, 0x4, 0xDA, 0x2, 0x2, 0xFF, 0x4, 0xFF, 0x0, 0x0, 0x0
	.byte 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	.word eTextScript202DA04
	.byte 0xFF, 0x4, 0xFF, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	.byte 0x0
	.word eTextScript202DA04
	.byte 0xFF, 0x4, 0xFF, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	.byte 0x0
	.word eTextScript202DA04
	.byte 0xFF, 0x4, 0xFF, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	.byte 0x0
	.word eTextScript202DA04
	.byte 0xFF, 0x4, 0xFF, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	.byte 0x0
	.word eTextScript202DA04
	.byte 0xFF, 0x4, 0xFF, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	.byte 0x0
	.word eTextScript202DA04
	.byte 0xFF, 0x4, 0xFF, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	.byte 0x0
	.word eTextScript202DA04
	.byte 0xFF, 0x4, 0xFF, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	.byte 0x0
	.word eTextScript202DA04
	.byte 0xFF, 0x4, 0xFF, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	.byte 0x0
	.word byte_202FA04
	.byte 0x1B, 0x3, 0xFF, 0x1, 0x54, 0x0, 0xC, 0x1, 0x0, 0x0, 0x54, 0x0, 0x18
	.byte 0x1, 0x0, 0x0, 0x4, 0xFA, 0x2, 0x2, 0xC, 0x7, 0xFF, 0x1, 0x50, 0x0
	.byte 0x3E, 0x0, 0x0, 0x0, 0x50, 0x0, 0x32, 0x0, 0x0, 0x0, 0x4, 0xFA, 0x2
	.byte 0x2, 0xD, 0x7, 0xFF, 0x1, 0x50, 0x0, 0x3E, 0x0, 0x0, 0x0, 0x50, 0x0
	.byte 0x32, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xFF, 0x4, 0xFF, 0x0, 0x0
	.byte 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	.byte 0x0, 0x0, 0xFF, 0x4, 0xFF, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	.byte 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xFF, 0x4, 0xFF, 0x0
	.byte 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	.byte 0x0, 0x0, 0x0, 0xFF, 0x4, 0xFF, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	.byte 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xFF, 0x4, 0xFF
	.byte 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
byte_8099CEC: .byte 0x3F, 0x0, 0x6, 0x29, 0xFF, 0x31, 0x17, 0x29, 0xFF, 0xC
	.byte 0x1, 0x2, 0xFF, 0x1, 0x4B, 0x45, 0x9D, 0x9, 0x8, 0x47
	.byte 0x1, 0xFF, 0x0, 0x3F, 0x1C, 0x1C, 0x5, 0xFF
	.word byte_8099D23
	.byte 0x2, 0xFF, 0x1E, 0x27, 0xFF, 0x8, 0x8, 0x7, 0x2, 0xFF, 0x1E
	.byte 0x3A, 0x5, 0x4, 0x80, 0x2, 0xFF, 0x1E, 0x27, 0xFF, 0xC, 0x8
	.byte 0x7
byte_8099D23: .byte 0x4B
	.word sub_8099DAC+1
	.byte 0x2A, 0xFF, 0x15, 0x17, 0x2A, 0xFF, 0xC, 0x1, 0x4A, 0x5
	.byte 0x4A, 0x3, 0x2, 0xFF, 0x3C, 0x27, 0xFF, 0x8, 0x8, 0x7
	.byte 0x3F, 0x18, 0x3F, 0x4, 0x0, 0x0, 0x0, 0x0
	thumb_func_end RunLMessageTextScript

	thumb_local_start
sub_8099D44:
	push {r4-r7,lr}
	ldrb r0, [r5,#4]
	ldr r7, off_8099DA8 // =byte_809929C
	mov r1, #0x14
	mul r1, r0
	add r7, r7, r1
	ldr r0, [r7]
	tst r0, r0
	beq loc_8099D58
	str r0, [r5,#0x30]
loc_8099D58:
	ldrb r0, [r7,#4]
	strb r0, [r5,#5]
	ldrb r0, [r7,#7]
	tst r0, r0
	beq loc_8099DA2
	ldrb r0, [r7,#5]
	bl SetOWPlayerFacingDirection
	mov r0, #8
	mov r1, #0xa
	mov r2, #0xc
	ldrsh r0, [r7,r0]
	ldrsh r1, [r7,r1]
	ldrsh r2, [r7,r2]
	lsl r0, r0, #0x10
	lsl r1, r1, #0x10
	lsl r2, r2, #0x10
	bl owPlayer_indirectlySetPlayerCoordsMaybe_809e1a4
	mov r0, #0
	bl camera_80301B2
	mov r0, #0xe
	mov r1, #0x10
	mov r2, #0x12
	ldrsh r0, [r7,r0]
	ldrsh r1, [r7,r1]
	ldrsh r2, [r7,r2]
	lsl r0, r0, #0x10
	lsl r1, r1, #0x10
	lsl r2, r2, #0x10
	bl sub_80301DC
	movflag EVENT_EVENT_CUR_DIR_LOCKED
	bl ClearEventFlagFromImmediate
loc_8099DA2:
	mov r0, #0
	pop {r4-r7,pc}
	.balign 4, 0x00
off_8099DA8: .word byte_809929C
	thumb_func_end sub_8099D44

	thumb_local_start
sub_8099DAC:
	push {r4-r7,lr}
	mov r0, #1
	mov r1, r10
	ldr r1, [r1,#oToolkit_GameStatePtr]
	ldr r1, [r1,#oGameState_OverworldPlayerObjectPtr]
	add r1, #0x1c
	bl camera_80301B2
	mov r0, #0
	pop {r4-r7,pc}
byte_8099DC0: .byte 0x3F, 0x0, 0x6, 0x29, 0xFF, 0x31, 0x17, 0x3E, 0xE0, 0xB9
	.byte 0x73, 0x8, 0x3A, 0x4, 0x4, 0x80, 0x3F, 0x4, 0x0, 0x3F
	.byte 0x0, 0x6, 0x29, 0xFF, 0x31, 0x17, 0x3E, 0x4, 0xFA, 0x2
	.byte 0x2, 0x3A, 0x4, 0x4, 0x80, 0x3F, 0x4, 0x0, 0x3F, 0x0
	.byte 0x6, 0x29, 0xFF, 0x31, 0x17, 0x40, 0x4, 0xFF, 0x4, 0x47
	.byte 0x0, 0xFF, 0x4, 0x3E, 0x4, 0xFA, 0x2, 0x2, 0x3A, 0x4
	.byte 0x4, 0x80, 0x3F, 0x4, 0x0, 0x0, 0x0, 0x0
byte_8099E04: .byte 0x3F, 0x0, 0x6, 0x29, 0xFF, 0x31, 0x17, 0x4B
	.word byte_8099E2D
	.byte 0x27, 0xFF, 0x8, 0xC, 0x7, 0x3E, 0x8, 0xD1, 0x73, 0x8, 0x4B
	.byte 0x3D, 0x9E, 0x9, 0x8, 0x3A, 0x4, 0x4, 0x80, 0x2A, 0xFF, 0x8
	.byte 0x17, 0x3F, 0x4, 0x0, 0x0, 0x0, 0xF0
byte_8099E2D: .byte 0xB5, 0x4, 0xF0, 0x43, 0xFA, 0x0, 0x30, 0x4, 0xF0, 0x82
	.byte 0xF9, 0x0, 0x20, 0xF0, 0xBD, 0xF0, 0xB5, 0x5, 0xF0, 0xBE
	.byte 0xFD, 0x90, 0x22, 0xB8, 0x58, 0x56, 0x46, 0xF6, 0x6A, 0xF0
	.byte 0x64, 0x5, 0xF0, 0x23, 0xFF, 0x70, 0x65, 0xB1, 0x65, 0x2A
	.byte 0x71, 0x0, 0x20, 0xF0, 0xBD, 0x0, 0x0
byte_8099E5C: .byte 0xA0, 0xE2, 0xA2, 0xE2, 0xA4, 0xE2, 0xA6, 0xE2, 0xA8
	.byte 0xE2, 0xAA, 0xE2, 0xAC, 0xE2, 0xA1, 0xE2, 0xA3, 0xE2
	.byte 0xA5, 0xE2, 0xA7, 0xE2, 0xA9, 0xE2, 0xAB, 0xE2, 0xAD
	.byte 0xE2
tileIds8099E78: .byte 0xA0, 0xE2, 0xA2, 0xE2, 0xA4, 0xE2, 0xA6, 0xE2, 0xA8
	.byte 0xE2, 0xAA, 0xE2, 0xA1, 0xE2, 0xA3, 0xE2, 0xA5, 0xE2
	.byte 0xA7, 0xE2, 0xA9, 0xE2, 0xAB, 0xE2
byte_8099E90: .byte 0x16, 0x0, 0x0, 0x5, 0x16, 0x1, 0x1, 0x5, 0x16, 0x2, 0x2, 0x5, 0xFF
	.byte 0xFF, 0xFF, 0xFF
byte_8099EA0: .byte 0x4B, 0xFD, 0x9F, 0x9, 0x8, 0x3F, 0x0, 0x6, 0x29, 0xFF, 0x31
	.byte 0x17, 0x2, 0xFF, 0x1, 0x47, 0x1, 0xFF, 0x0, 0x3E, 0xC, 0x58
	.byte 0x6C, 0x8, 0x1B, 0x0, 0x58, 0x1C, 0x1, 0x2, 0xDF, 0x9E, 0x9
	.byte 0x8, 0xC, 0x1B, 0x0, 0x58, 0x1C, 0x1, 0x2, 0x44, 0x9F, 0x9
	.byte 0x8, 0x32, 0x3A, 0x4, 0x4, 0x80, 0x4B, 0x61, 0xA2, 0x9, 0x8
	.byte 0x3F, 0x4, 0x4B, 0x55, 0xFD, 0x3, 0x8, 0x0, 0x4B
	.word sub_809A02C+1
	.byte 0x4B, 0x3D, 0xA0, 0x9, 0x8, 0x4B, 0x5D, 0xA0, 0x9, 0x8, 0x4B
	.byte 0x79, 0xA0, 0x9, 0x8, 0x1B, 0x0, 0x59, 0x1C, 0x1, 0x2, 0x14
	.byte 0x9F, 0x9, 0x8, 0x1, 0x4B, 0x5, 0xA1, 0x9, 0x8, 0x2, 0xFF
	.byte 0x1, 0x4B, 0x61, 0xA2, 0x9, 0x8, 0x3B, 0x3F, 0x4, 0x4B, 0x55
	.byte 0xFD, 0x3, 0x8, 0x0, 0x4B, 0x39, 0xA1, 0x9, 0x8, 0x4B, 0xB5
	.byte 0xA1, 0x9, 0x8, 0x4B, 0xFD, 0xA1, 0x9, 0x8, 0x1B, 0x0, 0x59
	.byte 0x1C, 0x1, 0x2, 0xEE, 0x9E, 0x9, 0x8, 0x1, 0x4B, 0x5, 0xA1
	.byte 0x9, 0x8, 0x2, 0xFF, 0x1, 0x4B, 0x61, 0xA2, 0x9, 0x8, 0x3B
	.byte 0x3F, 0x4, 0x4B, 0x55, 0xFD, 0x3, 0x8, 0x0, 0x4B, 0xBD, 0xA3
	.byte 0x9, 0x8, 0x4B, 0xCD, 0xA3, 0x9, 0x8, 0x4B, 0xED, 0xA3, 0x9
	.byte 0x8, 0x4B
	.word sub_809A404+1
	.byte 0x1C, 0x9, 0x1, 0x75, 0x9F, 0x9, 0x8, 0x4B
	.word sub_809A4B8+1
	.word 0x4B01FF02
	.word sub_809A4EC+1
	.byte 0x3B, 0x3F, 0x4, 0x4B, 0x55, 0xFD, 0x3, 0x8, 0x0
byte_8099F75: .byte 0x2, 0xFF, 0x1, 0x4, 0x8, 0x4B, 0x4D, 0xA4, 0x9, 0x8, 0x1C, 0x9
	.byte 0x1, 0x5F, 0x9F, 0x9, 0x8, 0x4B, 0x21, 0xA5, 0x9, 0x8, 0x1C, 0x9
	.byte 0x0, 0x7A, 0x9F, 0x9, 0x8, 0x1C, 0x9, 0x1, 0xAF, 0x9F, 0x9, 0x8
	.byte 0x4B, 0x85, 0xA7, 0x9, 0x8, 0x2, 0xFF, 0x1, 0x4B, 0xED, 0xA4, 0x9
	.byte 0x8, 0x3B, 0x3F, 0x4, 0x4B, 0x55, 0xFD, 0x3, 0x8, 0x0, 0x4, 0x88
	.byte 0x4B, 0x5D, 0xA7, 0x9, 0x8, 0x1C, 0x9, 0x1, 0xD0, 0x9F, 0x9, 0x8
	.byte 0x4B, 0xB1, 0xA7, 0x9, 0x8, 0x1C, 0x9, 0x1, 0x99, 0x9F, 0x9, 0x8
	.byte 0x1C, 0x9, 0x0
	.word byte_8099F75
	.byte 0x4B, 0x31, 0xA6, 0x9, 0x8, 0x4B, 0xA5, 0xA6, 0x9, 0x8, 0x4B
	.byte 0xED, 0xA6, 0x9, 0x8, 0x1C, 0x9, 0x1, 0x75, 0x9F, 0x9, 0x8
	.byte 0x4B, 0xB9, 0xA4, 0x9, 0x8, 0x2, 0xFF, 0x1, 0x4B, 0xED, 0xA4
	.byte 0x9, 0x8, 0x3B, 0x3F, 0x4, 0x4B, 0x55, 0xFD, 0x3, 0x8, 0x0
	thumb_func_end sub_8099DAC

	thumb_local_start
sub_8099FFC:
	push {r4-r7,lr}
	mov r0, #0
	bl sub_8033FC0
	bl byte_809A284
	strb r1, [r5,#8]
	strb r1, [r5,#4]
	ldrb r0, [r5,#8]
	cmp r0, #0x32
	bne loc_809A018
	bl sub_802D15E
	b loc_809A01C
loc_809A018:
	bl sub_803D0F4
loc_809A01C:
	str r0, [r5,#0x70]
	bl sub_8003984
	bl sub_8003AD4
	mov r0, #0
	pop {r4-r7,pc}
	.balign 4, 0x00
	thumb_func_end sub_8099FFC

	thumb_local_start
sub_809A02C:
	push {r4-r7,lr}
	bl sub_809A2DC
	mov r0, #0x20
	str r0, [r5,#0x74]
	mov r0, #0
	pop {r4-r7,pc}
	.balign 4, 0x00
	thumb_func_end sub_809A02C

	thumb_local_start
sub_809A03C:
	push {r4-r7,lr}
	ldr r0, [r5,#0x74]
	sub r0, #2
	str r0, [r5,#0x74]
	cmp r0, #0x15
	bgt loc_809A054
	mov r0, #0x15
	str r0, [r5,#0x74]
	bl sub_809A360
	mov r0, #0
	pop {r4-r7,pc}
loc_809A054:
	bl sub_809A360
	mov r0, #1
	pop {r4-r7,pc}
	thumb_func_end sub_809A03C

	thumb_local_start
sub_809A05C:
	push {r4-r7,lr}
	ldr r0, off_809A074 // =TextScriptChipTrader86C580C
	ldr r1, [r5,#8]
	bl chatbox_runScript // (void *scripts, u8 scriptOffIdx) -> void
	ldr r0, [r5,#0x74]
	bl sub_809A360
	mov r0, #0
	strb r0, [r5,#9]
	mov r0, #0
	pop {r4-r7,pc}
off_809A074: .word TextScriptChipTrader86C580C
	thumb_func_end sub_809A05C

	thumb_local_start
sub_809A078:
	push {r4-r7,lr}
	mov r0, #0x80
	bl chatbox_check_eFlags2009F38
	beq loc_809A0F2
	mov r0, #8
	bl chatbox_check_eFlags2009F38
	beq loc_809A0E8
	bl chatbox_8045F4C
	cmp r0, #0
	bne loc_809A0F2
	bl sub_804A2E8
	ldr r7, off_809A0FC // =eS200AC80
	bl sub_804BD00
	strh r0, [r7,#0x4] // (word_200AC84 - 0x200ac80)
	strh r1, [r7,#0x6] // (word_200AC86 - 0x200ac80)
	mov r2, #1
	bl sub_8021AEE
	mov r0, #0xa
	bl sub_803D0C8
	mov r3, r10
	ldr r3, [r3,#0x3c]
	ldrh r0, [r3,#4]
	strh r0, [r3,#0xc]
	bl sub_803F798
	mov r6, r10
	ldr r6, [r6,#0x2c]
	ldrh r2, [r7,#0x4] // (word_200AC84 - 0x200ac80)
	str r2, [r6,#0x4c]
	str r2, [r5,#0x7c]
	ldrh r2, [r7,#0x6] // (word_200AC86 - 0x200ac80)
	str r2, [r6,#0x50]
	mov r0, #0x80
	str r2, [r5,r0]
	ldr r0, off_809A100 // =TextScriptChipTrader86C580C
	mov r1, #0xf
	bl chatbox_runScript // (void *scripts, u8 scriptOffIdx) -> void
	mov r2, #0
	strh r2, [r7,#0x30] // (dword_200ACB0 - 0x200ac80)
	strh r2, [r7,#0x4] // (word_200AC84 - 0x200ac80)
	strh r2, [r7,#0x6] // (word_200AC86 - 0x200ac80)
	strh r2, [r5,#6]
	strb r2, [r5,#5]
	mov r0, #0x28
	str r0, [r5,#0xc]
	mov r0, #1
	strb r0, [r5,#9]
	b loc_809A0F2
loc_809A0E8:
	ldr r0, [r5,#0x74]
	bl sub_809A360
	mov r0, #1
	pop {r4-r7,pc}
loc_809A0F2:
	ldr r0, [r5,#0x74]
	bl sub_809A360
	mov r0, #0
	pop {r4-r7,pc}
off_809A0FC: .word eS200AC80
off_809A100: .word TextScriptChipTrader86C580C
	thumb_func_end sub_809A078

	thumb_local_start
sub_809A104:
	push {r4-r7,lr}
	mov r0, #8
	bl chatbox_check_eFlags2009F38
	bne loc_809A116
	mov r0, #0x80
	bl chatbox_check_eFlags2009F38
	bne loc_809A12E
loc_809A116:
	ldr r0, [r5,#0x74]
	add r0, #2
	str r0, [r5,#0x74]
	cmp r0, #0x20
	blt loc_809A12E
	mov r0, #0x20
	str r0, [r5,#0x74]
	ldr r0, [r5,#0x74]
	bl sub_809A360
	mov r0, #0
	pop {r4-r7,pc}
loc_809A12E:
	ldr r0, [r5,#0x74]
	bl sub_809A360
	mov r0, #1
	pop {r4-r7,pc}
	thumb_func_end sub_809A104

	thumb_local_start
sub_809A138:
	push {r4-r7,lr}
	movflag EVENT_F6
	bl TestEventFlagFromImmediate
	beq loc_809A1A4
	ldr r0, [r5,#0xc]
	sub r0, #1
	blt loc_809A15C
	str r0, [r5,#0xc]
	mov r1, #4
	svc 6
	tst r1, r1
	bne loc_809A1A4
	ldr r0, [r5,#0x70]
	sub r0, #1
	str r0, [r5,#0x70]
	b loc_809A1A4
loc_809A15C:
	bl sub_803D0F4
	str r0, [r5,#0x70]
	movflag EVENT_F5
	bl TestEventFlagFromImmediate
	beq loc_809A1A4
	mov r0, #0x20
	strb r0, [r5,#4]
	bl sub_809A308
	bl sub_8046664 // () -> void
	// a1
	ldr r0, off_809A1B0 // =byte_8099E90
	bl sub_80465A0 // (void *a1) -> void
	mov r0, #0x7c
	ldr r0, [r5,r0]
	mov r1, #0x80
	ldr r1, [r5,r1]
	mov r2, #0
	mov r3, #0
	bl sub_811980C
	ldr r0, dword_809A25C // =0xffffffd0
	mov r1, #0x58
	mov r2, #0
	bl sub_8119854
	movflag EVENT_F6
	bl ClearEventFlagFromImmediate
	mov r0, #0
	pop {r4-r7,pc}
loc_809A1A4:
	ldr r0, [r5,#0x74]
	bl sub_809A360
	mov r0, #1
	pop {r4-r7,pc}
	.balign 4, 0x00
off_809A1B0: .word byte_8099E90
	thumb_func_end sub_809A138

	thumb_local_start
sub_809A1B4:
	push {r4-r7,lr}
	ldrb r0, [r5,#4]
	add r0, #0x10
	cmp r0, #0x60
	ble loc_809A1CC
	mov r6, r10
	ldr r6, [r6,#0x2c]
	ldr r2, [r6,#0x4c]
	strh r2, [r5,#6]
	ldr r2, [r6,#0x50]
	strb r2, [r5,#5]
	mov r0, #0x60
loc_809A1CC:
	strb r0, [r5,#4]
	ldr r1, dword_809A25C // =0xffffffd0
	add r0, r0, r1
	mov r1, #0x58
	mov r2, #0
	bl sub_8119854
	bl sub_80465BC
	bl sub_80465F8 // () -> void
	ldr r0, [r5,#0x74]
	bl sub_809A360
	movflag EVENT_F5
	bl TestEventFlagFromImmediate
	bne loc_809A1F6
	mov r0, #0
	pop {r4-r7,pc}
loc_809A1F6:
	mov r0, #1
	pop {r4-r7,pc}
	.balign 4, 0x00
	thumb_func_end sub_809A1B4

	thumb_local_start
sub_809A1FC:
	push {r4-r7,lr}
	ldrb r0, [r5,#4]
	sub r0, #0x10
	cmp r0, #0
	bge loc_809A208
	mov r0, #0
loc_809A208:
	strb r0, [r5,#4]
	ldr r1, dword_809A25C // =0xffffffd0
	add r0, r0, r1
	mov r1, #0x58
	mov r2, #0
	bl sub_8119854
	bl sub_80465BC
	bl sub_80465F8 // () -> void
	mov r0, #8
	bl chatbox_check_eFlags2009F38
	beq loc_809A252
	bl sub_803D0F4
	mov r7, r0
	cmp r7, #0xa
	blt loc_809A238
	bl chatbox_8045F4C
	cmp r0, #0
	beq loc_809A244
loc_809A238:
	mov r0, #0
	strb r0, [r5,#9]
	ldr r0, [r5,#0x74]
	bl sub_809A360
	b loc_809A24E
loc_809A244:
	mov r0, #1
	strb r0, [r5,#9]
	ldr r0, [r5,#0x74]
	bl sub_809A360
loc_809A24E:
	mov r0, #0
	pop {r4-r7,pc}
loc_809A252:
	ldr r0, [r5,#0x74]
	bl sub_809A360
	mov r0, #1
	pop {r4-r7,pc}
dword_809A25C: .word 0xFFFFFFD0
	thumb_func_end sub_809A1FC

	thumb_local_start
sub_809A260:
	push {r4-r7,lr}
	mov r0, #1
	bl sub_8033FC0
	bl copyMemory_8001850
	bl sub_8033978
	bl sub_8003962
	bl zeroFill_8003AB2
	bl sub_800399A
	bl sub_8003AEA
	mov r0, #0
	pop {r4-r7,pc}
byte_809A284: .byte 0x53, 0x46, 0xDB, 0x6B, 0x19, 0x79, 0x5A, 0x79, 0x9
	.byte 0x2, 0x11, 0x43, 0x5, 0x4A, 0x0, 0x24, 0x10, 0x68
	.byte 0x88, 0x42, 0x1, 0xD1, 0x11, 0x79, 0x3, 0xE0, 0x8
	.byte 0x32, 0x8, 0x34, 0x30, 0x2C, 0xF6, 0xDB, 0xF7, 0x46
	.word byte_809A2AC
byte_809A2AC: .byte 0x4, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x5, 0x0, 0x0, 0x6, 0x0, 0x0, 0x0, 0x0
	.byte 0x0, 0x0, 0x0, 0x6, 0x0, 0x0, 0x0, 0x0, 0x4, 0x0, 0x0, 0x6, 0x0, 0x0, 0x0, 0x0, 0x91
	.byte 0x0, 0x0, 0x32, 0x0, 0x0, 0x0, 0x1, 0x93, 0x0, 0x0, 0xC, 0x0, 0x0, 0x0
	thumb_func_end sub_809A260

	thumb_local_start
sub_809A2DC:
	push {r4-r7,lr}
	// initRefs
	ldr r0, off_809A2E8 // =byte_809A2EC
	bl decompAndCopyData // (u32 *initRefs) -> void
	pop {r4-r7,pc}
	.balign 4, 0x00
off_809A2E8: .word byte_809A2EC
byte_809A2EC: .byte 0x30, 0x55, 0x6C, 0x8, 0x20, 0x1B, 0x0, 0x3, 0x20, 0x0, 0x0
	.byte 0x0, 0xB4, 0x52, 0x6C, 0x8, 0x0, 0xD0, 0x0, 0x6, 0x20, 0x2
	.byte 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	thumb_func_end sub_809A2DC

	thumb_local_start
sub_809A308:
	push {lr}
	// initRefs
	ldr r0, off_809A314 // =initRefs_809A318 
	bl decompAndCopyData // (u32 *initRefs) -> void
	pop {pc}
	.balign 4, 0x00
off_809A314: .word initRefs_809A318
initRefs_809A318: .word comp_86C7980 + 1<<31
	.word unk_2034E00
	.word unk_2033700
	.word comp_86C73D8 + 1<<31
	.word unk_2036500
	.word unk_2033700
	.word 0x0
	thumb_func_end sub_809A308

	thumb_local_start
sub_809A334:
	push {r4-r7,lr}
	// initRefs
	ldr r0, off_809A340 // =initRefs_809A344 
	bl decompAndCopyData // (u32 *initRefs) -> void
	pop {r4-r7,pc}
	.byte 0, 0
off_809A340: .word initRefs_809A344
initRefs_809A344: .word dword_86C57EC
	.word unk_3001B20
	.word 0x20
	.word byte_86C5550
	.word 0x600D000
	.word 0x220
	.word 0x0
	thumb_func_end sub_809A334

	thumb_local_start
sub_809A360:
	push {r4-r7,lr}
	mov r7, r0
	mov r0, r10
	ldr r0, [r0,#oToolkit_Unk200a220_Ptr]
	ldr r1, [r5,#0x70]
	str r1, [r0,#8]
	// j
	mov r0, r7
	// i
	mov r1, #0
	// tileBlock32x32
	mov r2, #0
	// tileIds
	ldr r3, off_809A3A4 // =byte_86C54D4 
	mov r4, #9
	mov r5, #5
	bl CopyBackgroundTiles
	// j
	add r0, r7, #1
	// i
	mov r1, #2
	// tileBlock32x32
	mov r2, #0
	// tileIds
	ldr r3, off_809A3A8 // =byte_8099E5C
	mov r4, #7
	mov r5, #2
	bl CopyBackgroundTiles
	ldr r0, off_809A3AC // =TextScriptChipTrader86C580C
	mov r1, #0x40 
	ldr r2, off_809A3B0 // =unk_200EF40 
	ldr r3, dword_809A3B4 // =0x600d400 
	mov r4, #7
	mov r5, #1
	ldr r6, off_809A3B8 // =dword_86A5D60 
	mov r7, #4
	bl renderTextGfx_8045F8C
	pop {r4-r7,pc}
	.balign 4, 0x00
off_809A3A4: .word byte_86C54D4
off_809A3A8: .word byte_8099E5C
off_809A3AC: .word TextScriptChipTrader86C580C
off_809A3B0: .word unk_200EF40
dword_809A3B4: .word 0x600D400
off_809A3B8: .word dword_86A5D60
	thumb_func_end sub_809A360

	thumb_local_start
sub_809A3BC:
	push {r4-r7,lr}
	bl sub_809A334
	mov r0, #0x20 
	str r0, [r5,#0x74]
	mov r0, #0
	pop {r4-r7,pc}
	.balign 4, 0x00
	thumb_func_end sub_809A3BC

	thumb_local_start
sub_809A3CC:
	push {r4-r7,lr}
	ldr r0, [r5,#0x74]
	sub r0, #2
	str r0, [r5,#0x74]
	cmp r0, #0x15
	bgt loc_809A3E4
	mov r0, #0x15
	str r0, [r5,#0x74]
	bl sub_809A80C
	mov r0, #0
	pop {r4-r7,pc}
loc_809A3E4:
	bl sub_809A80C
	mov r0, #1
	pop {r4-r7,pc}
	thumb_func_end sub_809A3CC

	thumb_local_start
sub_809A3EC:
	push {r4-r7,lr}
	ldr r0, off_809A400 // =TextScriptChipTrader86C580C
	ldr r1, [r5,#8]
	bl chatbox_runScript // (void *scripts, u8 scriptOffIdx) -> void
	ldr r0, [r5,#0x74]
	bl sub_809A80C
	mov r0, #0
	pop {r4-r7,pc}
off_809A400: .word TextScriptChipTrader86C580C
	thumb_func_end sub_809A3EC

	thumb_local_start
sub_809A404:
	push {r4-r7,lr}
	ldr r0, [r5,#0x74]
	bl sub_809A80C
	mov r0, #8
	bl chatbox_check_eFlags2009F38
	beq loc_809A442
	bl chatbox_8045F4C
	cmp r0, #0
	bne loc_809A43A
	ldr r0, off_809A448 // =TextScriptChipTrader86C580C
	mov r1, #0x33 
	bl chatbox_runScript // (void *scripts, u8 scriptOffIdx) -> void
	movflag EVENT_1725
	bl ClearEventFlagFromImmediate
	mov r0, #8
	mov r1, #0x84
	str r0, [r5,r1]
	mov r0, #1
	strb r0, [r5,#9]
	mov r0, #0
	pop {r4-r7,pc}
loc_809A43A:
	mov r0, #0
	strb r0, [r5,#9]
	mov r0, #0
	pop {r4-r7,pc}
loc_809A442:
	mov r0, #1
	pop {r4-r7,pc}
	.balign 4, 0x00
off_809A448: .word TextScriptChipTrader86C580C
	thumb_func_end sub_809A404

	thumb_local_start
sub_809A44C:
	push {r4-r7,lr}
	ldr r0, [r5,#0x74]
	bl sub_809A80C
	movflag EVENT_1725
	bl TestEventFlagFromImmediate
	beq loc_809A488
	mov r0, #0x84
	ldr r0, [r5,r0]
	tst r0, r0
	beq loc_809A46C
	sub r0, #1
	mov r1, #0x84
	str r0, [r5,r1]
loc_809A46C:
	mov r0, r10
	ldr r0, [r0,#oToolkit_JoypadPtr]
	ldrb r0, [r0,#2]
	mov r1, #2
	and r1, r0
	beq loc_809A488
	mov r0, #1
	strb r0, [r5,#9]
	mov r0, #SOUND_UNSELECT_68
	bl PlaySoundEffect
	bl chatbox_8040818
	b loc_809A4AA
loc_809A488:
	mov r0, #8
	bl chatbox_check_eFlags2009F38
	beq loc_809A4AE
	mov r0, r10
	ldr r0, [r0,#oToolkit_ChatboxPtr]
	ldr r0, [r0,#0x4c]
	mov r1, #0x88
	str r0, [r5,r1]
	bl sub_809A868
	ldr r0, off_809A894 // =TextScriptChipTrader86C580C
	mov r1, #0x35 
	bl chatbox_runScript // (void *scripts, u8 scriptOffIdx) -> void
	mov r0, #0
	strb r0, [r5,#9]
loc_809A4AA:
	mov r0, #0
	pop {r4-r7,pc}
loc_809A4AE:
	mov r0, #1
	pop {r4-r7,pc}
	.balign 4, 0x00
	.word eS200AC80
	thumb_func_end sub_809A44C

	thumb_local_start
sub_809A4B8:
	push {r4-r7,lr}
	mov r0, #8
	bl chatbox_check_eFlags2009F38
	bne loc_809A4CA
	mov r0, #0x80
	bl chatbox_check_eFlags2009F38
	bne loc_809A4E2
loc_809A4CA:
	ldr r0, [r5,#0x74]
	add r0, #2
	str r0, [r5,#0x74]
	cmp r0, #0x20 
	blt loc_809A4E2
	mov r0, #0x20 
	str r0, [r5,#0x74]
	ldr r0, [r5,#0x74]
	bl sub_809A80C
	mov r0, #0
	pop {r4-r7,pc}
loc_809A4E2:
	ldr r0, [r5,#0x74]
	bl sub_809A80C
	mov r0, #1
	pop {r4-r7,pc}
	thumb_func_end sub_809A4B8

	thumb_local_start
sub_809A4EC:
	push {r4-r7,lr}
	movflag EVENT_F5
	bl ClearEventFlagFromImmediate
	movflag EVENT_1725
	bl ClearEventFlagFromImmediate
	mov r0, #1
	bl sub_8033FC0
	bl copyMemory_8001850
	bl sub_8033978
	bl sub_8003962
	bl zeroFill_8003AB2
	bl sub_800399A
	bl sub_8003AEA
	mov r0, #0
	pop {r4-r7,pc}
	thumb_func_end sub_809A4EC

	thumb_local_start
sub_809A520:
	push {r4-r7,lr}
	ldr r0, [r5,#0x74]
	bl sub_809A80C
	mov r0, #0x80
	bl chatbox_check_eFlags2009F38
	beq loc_809A610
	mov r0, #0x20 
	bl chatbox_check_eFlags2009F38
	beq loc_809A610
	bl chatbox_8045F4C
	cmp r0, #0
	bne loc_809A5FA
	mov r0, #0x88
	ldr r0, [r5,r0]
	bl sub_813D48C
	tst r0, r0
	beq loc_809A5EC
	cmp r0, #2
	beq loc_809A5EC
	cmp r1, #1
	beq loc_809A578
	cmp r1, #2
	beq loc_809A5A6
	str r2, [r5,#0x7c]
	mov r0, #0x80
	str r3, [r5,r0]
	mov r0, r10
	ldr r0, [r0,#oToolkit_ChatboxPtr]
	str r2, [r0,#0x4c]
	str r3, [r0,#0x50]
	mov r0, r2
	mov r1, r3
	mov r2, #1
	bl sub_8021AEE
	mov r0, #0x37 
	mov r1, #0x8c
	str r0, [r5,r1]
	b loc_809A5B8
loc_809A578:
	mov r0, r10
	ldr r0, [r0,#oToolkit_ChatboxPtr]
	str r2, [r0,#0x4c]
	cmp r2, #0x86
	bne loc_809A596
	ldr r4, off_809A614 // =byte_809A628
	mov r6, #0
loc_809A586:
	ldrb r0, [r4,r6]
	cmp r0, #0xff
	beq loc_809A59E
	mov r1, #1
	bl sub_803CD98
	add r6, #1
	b loc_809A586
loc_809A596:
	mov r0, r2
	mov r1, #1
	bl sub_803CD98
loc_809A59E:
	mov r0, #0x38 
	mov r1, #0x8c
	str r0, [r5,r1]
	b loc_809A5B8
loc_809A5A6:
	mov r1, r10
	ldr r1, [r1,#oToolkit_ChatboxPtr]
	str r2, [r1,#0x4c]
	mov r0, r2
	bl sub_803D080
	mov r0, #0x39 
	mov r1, #0x8c
	str r0, [r5,r1]
loc_809A5B8:
	mov r3, r10
	ldr r3, [r3,#oToolkit_GameStatePtr]
	ldrh r0, [r3,#oGameState_MapGroup]
	strh r0, [r3,#oGameState_LastMapGroup]
	bl sub_803F798
	bl sub_803F9E4
	mov r0, #1
	strb r0, [r5,#9]
	mov r0, #SOUND_UNK_8A
	bl PlaySoundEffect
	bl sub_809A880
	strh r0, [r5,#0x1a]
	mov r2, #0x88
	ldr r2, [r5,r2]
	ldr r1, off_809A618 // =off_809A624
	ldrb r1, [r1,r2]
	strh r1, [r5,#0xe]
	mov r1, #0xa
	strh r1, [r5,#0xc]
	svc 6
	strb r0, [r5,#0xf]
	b loc_809A60C
loc_809A5EC:
	ldr r0, off_809A894 // =TextScriptChipTrader86C580C
	mov r1, #0x36 
	bl chatbox_runScript // (void *scripts, u8 scriptOffIdx) -> void
	mov r0, #2
	strb r0, [r5,#9]
	b loc_809A60C
loc_809A5FA:
	ldr r0, off_809A894 // =TextScriptChipTrader86C580C
	mov r1, #0x33 
	bl chatbox_runScript // (void *scripts, u8 scriptOffIdx) -> void
	mov r0, #8
	mov r1, #0x84
	str r0, [r5,r1]
	mov r0, #0
	strb r0, [r5,#9]
loc_809A60C:
	mov r0, #0
	pop {r4-r7,pc}
loc_809A610:
	mov r0, #1
	pop {r4-r7,pc}
off_809A614: .word byte_809A628
off_809A618: .word off_809A624
	.word eS200AC80
	.word TextScriptChipTrader86C580C
off_809A624: .word unk_2020204
byte_809A628: .byte 0x80, 0x81, 0x82, 0x83, 0x84, 0x85, 0xFF, 0x0
	thumb_func_end sub_809A520

	thumb_local_start
sub_809A630:
	push {r4-r7,lr}
	movflag EVENT_F6
	bl TestEventFlagFromImmediate
	beq loc_809A694
	ldrh r0, [r5,#0xc]
	sub r0, #1
	blt loc_809A64E
	strh r0, [r5,#0xc]
	ldr r0, [r5,#0x70]
	ldrb r1, [r5,#0xf]
	sub r0, r0, r1
	str r0, [r5,#0x70]
	b loc_809A694
loc_809A64E:
	bl sub_802D15E
	str r0, [r5,#0x70]
	movflag EVENT_F5
	bl TestEventFlagFromImmediate
	beq loc_809A694
	mov r0, #0x20 
	strb r0, [r5,#4]
	bl sub_809A308
	bl sub_8046664 // () -> void
	// a1
	ldr r0, off_809A6A0 // =byte_8099E90
	bl sub_80465A0 // (void *a1) -> void
	ldr r0, [r5,#0x7c]
	mov r1, #0x80
	ldr r1, [r5,r1]
	mov r2, #0
	mov r3, #0
	bl sub_811980C
	ldr r0, dword_809A758 // =0xffffffd0 
	mov r1, #0x58 
	mov r2, #0
	bl sub_8119854
	movflag EVENT_F6
	bl ClearEventFlagFromImmediate
	mov r0, #0
	pop {r4-r7,pc}
loc_809A694:
	ldr r0, [r5,#0x74]
	bl sub_809A80C
	mov r0, #1
	pop {r4-r7,pc}
	.balign 4, 0x00
off_809A6A0: .word byte_8099E90
	thumb_func_end sub_809A630

	thumb_local_start
sub_809A6A4:
	push {r4-r7,lr}
	ldrb r0, [r5,#4]
	add r0, #0x10
	cmp r0, #0x60 
	ble loc_809A6BC
	mov r6, r10
	ldr r6, [r6,#oToolkit_ChatboxPtr]
	ldr r2, [r6,#0x4c]
	strh r2, [r5,#6]
	ldr r2, [r6,#0x50]
	strb r2, [r5,#5]
	mov r0, #0x60 
loc_809A6BC:
	strb r0, [r5,#4]
	ldr r1, dword_809A758 // =0xffffffd0 
	add r0, r0, r1
	mov r1, #0x58 
	mov r2, #0
	bl sub_8119854
	bl sub_80465BC
	bl sub_80465F8 // () -> void
	ldr r0, [r5,#0x74]
	bl sub_809A80C
	movflag EVENT_F5
	bl TestEventFlagFromImmediate
	bne loc_809A6E6
	mov r0, #0
	pop {r4-r7,pc}
loc_809A6E6:
	mov r0, #1
	pop {r4-r7,pc}
	.balign 4, 0x00
	thumb_func_end sub_809A6A4

	thumb_local_start
sub_809A6EC:
	push {r4-r7,lr}
	ldrb r0, [r5,#4]
	sub r0, #0x10
	cmp r0, #0
	bge loc_809A6F8
	mov r0, #0
loc_809A6F8:
	strb r0, [r5,#4]
	ldr r1, dword_809A758 // =0xffffffd0 
	add r0, r0, r1
	mov r1, #0x58 
	mov r2, #0
	bl sub_8119854
	bl sub_80465BC
	bl sub_80465F8 // () -> void
	mov r0, #8
	bl chatbox_check_eFlags2009F38
	beq loc_809A74E
	bl chatbox_8045F4C
	cmp r0, #0
	beq loc_809A72A
	mov r0, #0
	strb r0, [r5,#9]
	ldr r0, [r5,#0x74]
	bl sub_809A80C
	b loc_809A74A
loc_809A72A:
	ldr r0, off_809A894 // =TextScriptChipTrader86C580C
	mov r1, #0x33 
	bl chatbox_runScript // (void *scripts, u8 scriptOffIdx) -> void
	movflag EVENT_1725
	bl ClearEventFlagFromImmediate
	mov r0, #8
	mov r1, #0x84
	str r0, [r5,r1]
	mov r0, #1
	strb r0, [r5,#9]
	ldr r0, [r5,#0x74]
	bl sub_809A80C
loc_809A74A:
	mov r0, #0
	pop {r4-r7,pc}
loc_809A74E:
	ldr r0, [r5,#0x74]
	bl sub_809A80C
	mov r0, #1
	pop {r4-r7,pc}
dword_809A758: .word 0xFFFFFFD0
	thumb_func_end sub_809A6EC

	thumb_local_start
sub_809A75C:
	push {r4-r7,lr}
	ldr r0, [r5,#0x74]
	bl sub_809A80C
	ldr r0, off_809A780 // =TextScriptChipTrader86C580C
	mov r1, #0x8c
	ldr r1, [r5,r1]
	bl chatbox_runScript // (void *scripts, u8 scriptOffIdx) -> void
	mov r1, #1
	mov r2, #0x8c
	ldr r0, [r5,r2]
	cmp r0, #0x37 
	beq loc_809A77A
	mov r1, #0
loc_809A77A:
	strb r1, [r5,#9]
	mov r0, #0
	pop {r4-r7,pc}
off_809A780: .word TextScriptChipTrader86C580C
	thumb_func_end sub_809A75C

	thumb_local_start
sub_809A784:
	push {r4-r7,lr}
	mov r0, #0x80
	bl chatbox_check_eFlags2009F38
	bne loc_809A7A6
	ldr r0, [r5,#0x74]
	add r0, #2
	str r0, [r5,#0x74]
	cmp r0, #0x20 
	blt loc_809A7A6
	mov r0, #0x20 
	str r0, [r5,#0x74]
	ldr r0, [r5,#0x74]
	bl sub_809A80C
	mov r0, #0
	pop {r4-r7,pc}
loc_809A7A6:
	ldr r0, [r5,#0x74]
	bl sub_809A80C
	mov r0, #1
	pop {r4-r7,pc}
	thumb_func_end sub_809A784

	thumb_local_start
sub_809A7B0:
	push {r4-r7,lr}
	ldrh r0, [r5,#0xc]
	sub r0, #1
	blt loc_809A7C4
	strh r0, [r5,#0xc]
	ldr r0, [r5,#0x70]
	ldrb r1, [r5,#0xf]
	sub r0, r0, r1
	str r0, [r5,#0x70]
	b loc_809A802
loc_809A7C4:
	mov r0, #0x20 
	bl chatbox_check_eFlags2009F38
	beq loc_809A802
	bl chatbox_8045F4C
	cmp r0, #0
	bne loc_809A7F6
	ldr r0, [r5,#0x74]
	bl sub_809A80C
	mov r1, #0
	strb r1, [r5,#9]
	ldr r0, off_809A894 // =TextScriptChipTrader86C580C
	mov r1, #0x33 
	bl chatbox_runScript // (void *scripts, u8 scriptOffIdx) -> void
	movflag EVENT_1725
	bl ClearEventFlagFromImmediate
	mov r0, #8
	mov r1, #0x84
	str r0, [r5,r1]
	b loc_809A7FE
loc_809A7F6:
	bl chatbox_8040818
	mov r1, #1
	strb r1, [r5,#9]
loc_809A7FE:
	mov r0, #0
	pop {r4-r7,pc}
loc_809A802:
	ldr r0, [r5,#0x74]
	bl sub_809A80C
	mov r0, #1
	pop {r4-r7,pc}
	thumb_func_end sub_809A7B0

	thumb_local_start
sub_809A80C:
	push {r4-r7,lr}
	mov r7, r0
	mov r0, r10
	ldr r0, [r0,#oToolkit_Unk200a220_Ptr]
	ldr r1, [r5,#0x70]
	str r1, [r0,#8]
	// j
	mov r0, r7
	// i
	mov r1, #0
	// tileBlock32x32
	mov r2, #0
	// tileIds
	ldr r3, off_809A850 // =tileIds86C5790
	mov r4, #9
	mov r5, #5
	bl CopyBackgroundTiles
	// j
	add r0, r7, #2
	// i
	mov r1, #2
	// tileBlock32x32
	mov r2, #0
	// tileIds
	ldr r3, off_809A854 // =tileIds8099E78
	mov r4, #6
	mov r5, #2
	bl CopyBackgroundTiles
	ldr r0, off_809A858 // =eTextScript2033404
	mov r1, #6
	ldr r2, off_809A85C // =unk_200EF40 
	ldr r3, dword_809A860 // =0x600d400 
	mov r4, #6
	mov r5, #1
	ldr r6, off_809A864 // =dword_86A5D60 
	mov r7, #4
	bl renderTextGfx_8045F8C
	pop {r4-r7,pc}
	.balign 4, 0x00
off_809A850: .word tileIds86C5790
off_809A854: .word tileIds8099E78
off_809A858: .word eTextScript2033404
off_809A85C: .word unk_200EF40
dword_809A860: .word 0x600D400
off_809A864: .word dword_86A5D60
	thumb_func_end sub_809A80C

	thumb_local_start
sub_809A868:
	push {r4,lr}
	mov r4, r10
	ldr r4, [r4,#oToolkit_ChatboxPtr]
	ldr r0, off_809A88C // =dword_809A890 
	mov r1, #0x88
	ldr r1, [r5,r1]
	ldrb r0, [r0,r1]
	str r0, [r4,#0x4c]
	mov r0, #0
	str r0, [r4,#0x50]
	pop {r4,pc}
	.balign 4, 0x00
	thumb_func_end sub_809A868

	thumb_local_start
sub_809A880:
	push {lr}
	ldr r0, off_809A88C // =dword_809A890 
	mov r1, #0x88
	ldr r1, [r5,r1]
	ldrb r0, [r0,r1]
	pop {pc}
off_809A88C: .word dword_809A890
dword_809A890: .word 0x321E140A
off_809A894: .word TextScriptChipTrader86C580C
byte_809A898: .byte 0x16, 0x0, 0x0, 0x5, 0x16, 0x1, 0x1, 0x5, 0x16, 0x2, 0x2, 0x5, 0xFF
	.byte 0xFF, 0xFF, 0xFF
byte_809A8A8: .byte 0x3F, 0x0, 0x6, 0x29, 0xFF, 0x31, 0x17, 0x47, 0x1, 0xFF
	.byte 0x0, 0x4B
	.word sub_809A8E4+1
	.byte 0x27, 0xFF, 0x8, 0xC, 0x7, 0x3E, 0xC, 0x58, 0x6C, 0x8, 0x3A
	.byte 0x4, 0x4B, 0x51, 0xA9, 0x9, 0x8, 0x4B, 0x8D, 0xA9, 0x9, 0x8
	.byte 0x2, 0xFF, 0x1, 0x4B, 0xCD, 0xA9, 0x9, 0x8, 0x3B, 0x4B
	.word sub_809AA04+1
	.byte 0x3F, 0x4, 0x4B, 0x55, 0xFD, 0x3, 0x8, 0x0
	thumb_func_end sub_809A880

	thumb_local_start
sub_809A8E4:
	push {r4-r7,lr}
	mov r0, #0
	bl sub_8033FC0
	ldr r7, off_809AA20 // =eS200AC80
	mov r6, r10
	ldr r6, [r6,#oToolkit_ChatboxPtr]
	ldrh r2, [r7,#0x4] // (word_200AC84 - 0x200ac80)
	str r2, [r6,#0x4c]
	str r2, [r5,#0x7c]
	ldrh r2, [r7,#0x6] // (word_200AC86 - 0x200ac80)
	str r2, [r6,#0x50]
	mov r0, #0x80
	str r2, [r5,r0]
	ldrh r0, [r7,#0x30] // (dword_200ACB0 - 0x200ac80)
	mov r1, #3
	cmp r0, #3
	beq loc_809A90A
	mov r1, #9
loc_809A90A:
	strb r1, [r5,#4]
	mov r2, #0
	strh r2, [r7,#0x30] // (dword_200ACB0 - 0x200ac80)
	strh r2, [r7,#0x4] // (word_200AC84 - 0x200ac80)
	strh r2, [r7,#0x6] // (word_200AC86 - 0x200ac80)
	strh r2, [r5,#6]
	strb r2, [r5,#5]
	bl sub_8003984
	bl sub_8003AD4
	bl sub_8046664 // () -> void
	// initRefs
	ldr r0, off_809A930 // =byte_809A934
	bl decompAndCopyData // (u32 *initRefs) -> void
	mov r0, #0
	pop {r4-r7,pc}
	.balign 4, 0x00
off_809A930: .word byte_809A934
byte_809A934: .byte 0x80, 0x79, 0x6C, 0x88, 0x0, 0x4E, 0x3, 0x2, 0x0, 0x37, 0x3
	.byte 0x2, 0xD8, 0x73, 0x6C, 0x88, 0x0, 0x65, 0x3, 0x2, 0x0, 0x37
	.byte 0x3, 0x2, 0x0, 0x0, 0x0, 0x0
	thumb_func_end sub_809A8E4

	thumb_local_start
sub_809A950:
	push {r4-r7,lr}
	movflag EVENT_F5
	bl TestEventFlagFromImmediate
	beq loc_809A982
	mov r0, #0
	strb r0, [r5,#4]
	// a1
	ldr r0, off_809A988 // =byte_809A898
	bl sub_80465A0 // (void *a1) -> void
	ldr r0, [r5,#0x7c]
	mov r1, #0x80
	ldr r1, [r5,r1]
	mov r2, #0
	mov r3, #0
	bl sub_811980C
	ldr r0, dword_809AA00 // =0xffffffd0 
	mov r1, #0x58 
	mov r2, #0
	bl sub_8119854
	mov r0, #0
	pop {r4-r7,pc}
loc_809A982:
	mov r0, #1
	pop {r4-r7,pc}
	.balign 4, 0x00
off_809A988: .word byte_809A898
	thumb_func_end sub_809A950

	thumb_local_start
sub_809A98C:
	push {r4-r7,lr}
	ldrb r0, [r5,#4]
	add r0, #0x10
	cmp r0, #0x60 
	ble loc_809A9A4
	mov r6, r10
	ldr r6, [r6,#oToolkit_ChatboxPtr]
	ldr r2, [r6,#0x4c]
	strh r2, [r5,#6]
	ldr r2, [r6,#0x50]
	strb r2, [r5,#5]
	mov r0, #0x60 
loc_809A9A4:
	strb r0, [r5,#4]
	ldr r1, dword_809AA00 // =0xffffffd0 
	add r0, r0, r1
	mov r1, #0x58 
	mov r2, #0
	bl sub_8119854
	bl sub_80465BC
	bl sub_80465F8 // () -> void
	movflag EVENT_F5
	bl TestEventFlagFromImmediate
	bne loc_809A9C8
	mov r0, #0
	pop {r4-r7,pc}
loc_809A9C8:
	mov r0, #1
	pop {r4-r7,pc}
	thumb_func_end sub_809A98C

	thumb_local_start
sub_809A9CC:
	push {r4-r7,lr}
	ldrb r0, [r5,#4]
	sub r0, #0x10
	cmp r0, #0
	bge loc_809A9D8
	mov r0, #0
loc_809A9D8:
	strb r0, [r5,#4]
	ldr r1, dword_809AA00 // =0xffffffd0 
	add r0, r0, r1
	mov r1, #0x58 
	mov r2, #0
	bl sub_8119854
	bl sub_80465BC
	bl sub_80465F8 // () -> void
	mov r0, #0x80
	bl chatbox_check_eFlags2009F38
	bne loc_809A9FA
	mov r0, #0
	pop {r4-r7,pc}
loc_809A9FA:
	mov r0, #1
	pop {r4-r7,pc}
	.balign 4, 0x00
dword_809AA00: .word 0xFFFFFFD0
	thumb_func_end sub_809A9CC

	thumb_local_start
sub_809AA04:
	push {r4-r7,lr}
	bl sub_8003962
	bl zeroFill_8003AB2
	bl sub_800399A
	bl sub_8003AEA
	mov r0, #1
	bl sub_8033FC0
	mov r0, #0
	pop {r4-r7,pc}
off_809AA20: .word eS200AC80
byte_809AA24: .byte 0x16, 0x0, 0x0, 0x5, 0x16, 0x1, 0x1, 0x5, 0x16, 0x2, 0x2, 0x5, 0xFF
	.byte 0xFF, 0xFF, 0xFF
byte_809AA34: .byte 0x3F, 0x0, 0x6, 0x29, 0xFF, 0x31, 0x17, 0x47, 0x1, 0xFF
	.byte 0x0, 0x4B
	.word sub_809AAB8+1
	.byte 0x4B, 0xDD, 0xAA, 0x9, 0x8, 0x1C, 0x8, 0x1
	.word byte_809AA5F
	.byte 0x4, 0x80, 0x4B, 0x4D, 0xAD, 0x9, 0x8, 0x3F, 0x4, 0x4B, 0x55
	.byte 0xFD, 0x3, 0x8, 0x0
byte_809AA5F: .byte 0x4, 0x8, 0x4B, 0x21, 0xAB, 0x9, 0x8, 0x1C, 0x8, 0x1, 0x44, 0xAA
	.byte 0x9, 0x8, 0x1C, 0x8, 0x3
	.word byte_809AA87
	.byte 0x1C, 0x8, 0x4, 0x50, 0xAA, 0x9, 0x8, 0x4, 0x8, 0x4B, 0x71, 0xAC
	.byte 0x9, 0x8, 0x15, 0x50, 0xAA, 0x9, 0x8
byte_809AA87: .byte 0x4, 0x88, 0x4B, 0x89, 0xAC, 0x9, 0x8, 0x1C, 0x8, 0x0, 0x50
	.byte 0xAA, 0x9, 0x8, 0x4B, 0xA5, 0xAC, 0x9, 0x8, 0x4B, 0xD1, 0xAC
	.byte 0x9, 0x8, 0x2, 0xFF, 0x1, 0x4B, 0xD, 0xAD, 0x9, 0x8, 0x3B
	.byte 0x4B, 0x4D, 0xAD, 0x9, 0x8, 0x3F, 0x4, 0x4B, 0x55, 0xFD, 0x3
	.byte 0x8, 0x0, 0x0, 0x0, 0x0
	thumb_func_end sub_809AA04

	thumb_local_start
sub_809AAB8:
	push {r4-r7,lr}
	mov r0, #0
	bl sub_8033FC0
	bl sub_8003984
	bl sub_8003AD4
	ldr r0, off_809AD78 // =eTextScript2033404
	mov r1, #0xa
	bl chatbox_runScript // (void *scripts, u8 scriptOffIdx) -> void
	bl sub_8046664 // () -> void
	mov r0, #0
	strb r0, [r5,#8]
	pop {r4-r7,pc}
	.balign 4, 0x00
	thumb_func_end sub_809AAB8

	thumb_local_start
sub_809AADC:
	push {r4-r7,lr}
	mov r0, #8
	bl chatbox_check_eFlags2009F38
	beq loc_809AB1A
	bl chatbox_8045F4C
	cmp r0, #0
	bne loc_809AB0C
	ldr r0, off_809AD78 // =eTextScript2033404
	mov r1, #0xc
	bl chatbox_runScript // (void *scripts, u8 scriptOffIdx) -> void
	mov r0, #1
	strb r0, [r5,#8]
	movflag EVENT_1725
	bl ClearEventFlagFromImmediate
	mov r0, #8
	mov r1, #0x84
	str r0, [r5,r1]
	mov r0, #0
	pop {r4-r7,pc}
loc_809AB0C:
	ldr r0, off_809AD78 // =eTextScript2033404
	mov r1, #0xb
	bl chatbox_runScript // (void *scripts, u8 scriptOffIdx) -> void
	mov r0, #0
	strb r0, [r5,#8]
	pop {r4-r7,pc}
loc_809AB1A:
	mov r0, #1
	pop {r4-r7,pc}
	.byte 0, 0
	thumb_func_end sub_809AADC

	thumb_local_start
sub_809AB20:
	push {r4-r7,lr}
	movflag EVENT_1725
	bl TestEventFlagFromImmediate
	beq loc_809AB5A
	mov r0, #0x84
	ldr r0, [r5,r0]
	tst r0, r0
	beq loc_809AB3A
	sub r0, #1
	mov r1, #0x84
	str r0, [r5,r1]
loc_809AB3A:
	mov r0, r10
	ldr r0, [r0,#oToolkit_JoypadPtr]
	ldrb r0, [r0,#2]
	mov r1, #2
	and r1, r0
	beq loc_809AB5A
	mov r0, #4
	strb r0, [r5,#8]
	mov r0, #SOUND_UNSELECT_68
	bl PlaySoundEffect
	ldr r0, off_809AD78 // =eTextScript2033404
	mov r1, #0xb
	bl chatbox_runScript // (void *scripts, u8 scriptOffIdx) -> void
	b loc_809AC20
loc_809AB5A:
	mov r0, #8
	bl chatbox_check_eFlags2009F38
	beq loc_809AC24
	sub sp, sp, #8
	mov r0, r10
	ldr r0, [r0,#oToolkit_ChatboxPtr]
	add r0, #0x4c 
	mov r1, sp
	mov r2, #8
	bl CopyWords // (u32 *src, u32 *dest, int size) -> void
	mov r0, sp
	bl sub_813D41C
	str r4, [r5,#0x78]
	add sp, sp, #8
	cmp r0, #1
	beq loc_809AB92
	cmp r0, #2
	beq loc_809AC14
	ldr r0, off_809AD78 // =eTextScript2033404
	mov r1, #0xd
	bl chatbox_runScript // (void *scripts, u8 scriptOffIdx) -> void
	mov r0, #1
	strb r0, [r5,#8]
	b loc_809AC20
loc_809AB92:
	mov r4, r10
	ldr r4, [r4,#oToolkit_ChatboxPtr]
	str r2, [r4,#0x4c] // ChatBoxPropreties.unk_4C
	str r3, [r4,#0x50] // ChatBoxPropreties.unk_50
	cmp r1, #1
	beq loc_809ABC8
	cmp r1, #2
	beq loc_809ABDC
	cmp r1, #3
	beq loc_809ABF4
	str r2, [r5,#0x7c]
	mov r0, #0x80
	str r3, [r5,r0]
	mov r0, #0
	strh r0, [r5,#6]
	strb r0, [r5,#5]
	mov r0, r2
	mov r1, r3
	mov r2, #1
	bl sub_8021AEE
	// initRefs
	ldr r0, off_809AC28 // =dword_809AC2C 
	bl decompAndCopyData // (u32 *initRefs) -> void
	mov r0, #0xf
	mov r1, #3
	b loc_809AC06
loc_809ABC8:
	push {r2}
	mov r0, r2
	mov r1, #1
	bl sub_803CD98
	pop {r0}
	bl sub_809AC48
	mov r1, #3
	b loc_809AC06
loc_809ABDC:
	mov r0, r2
	mov r1, #1
	bl sub_803CD98
	tst r0, r0
	bne loc_809ABEE
	mov r0, #0x11
	mov r1, #3
	b loc_809AC06
loc_809ABEE:
	mov r0, #0x12
	mov r1, #0
	b loc_809AC06
loc_809ABF4:
	mov r0, r2
	str r0, [r4,#0x4c]
	mov r0, r2
	mov r1, r3
	mov r2, #1
	bl sub_803D108
	mov r0, #0x13
	mov r1, #3
loc_809AC06:
	str r0, [r5,#0x74]
	strb r1, [r5,#8]
	ldr r0, off_809AD7C // =TextScriptLottery86C67E4
	mov r1, #0xe
	bl chatbox_runScript // (void *scripts, u8 scriptOffIdx) -> void
	b loc_809AC20
loc_809AC14:
	ldr r0, off_809AD78 // =eTextScript2033404
	mov r1, #0x14
	bl chatbox_runScript // (void *scripts, u8 scriptOffIdx) -> void
	mov r0, #1
	strb r0, [r5,#8]
loc_809AC20:
	mov r0, #0
	pop {r4-r7,pc}
loc_809AC24:
	mov r0, #1
	pop {r4-r7,pc}
off_809AC28: .word dword_809AC2C
dword_809AC2C: .word 0x886C7980
	.word unk_2034E00
	.word unk_2033700
	.word comp_86C73D8 + 1<<31
	.word unk_2036500
	.word unk_2033700
	.word 0x0
	thumb_func_end sub_809AB20

	thumb_local_start
sub_809AC48:
	push {r1-r7,lr}
	ldr r1, off_809AC64 // =byte_809AC68 
loc_809AC4C:
	ldrb r2, [r1]
	ldrb r3, [r1,#1]
	add r1, #2
	cmp r2, #0xff
	beq loc_809AC5E
	cmp r0, r2
	bne loc_809AC4C
	mov r0, r3
	pop {r1-r7,pc}
loc_809AC5E:
	mov r0, #0x1a
	pop {r1-r7,pc}
	.balign 4, 0x00
off_809AC64: .word byte_809AC68
byte_809AC68: .byte 0x53
byte_809AC69: .byte 0x15, 0x51, 0x16, 0x55, 0x17, 0xFF, 0xFF
	thumb_func_end sub_809AC48

	thumb_local_start
sub_809AC70:
	push {r4-r7,lr}
	ldr r0, [r5,#0x78]
	mov r0, r0
	bl ClearEventFlag // (u16 entryFlagBitfield) -> void
	ldr r0, off_809AD7C // =TextScriptLottery86C67E4
	ldr r1, [r5,#0x74]
	bl chatbox_runScript // (void *scripts, u8 scriptOffIdx) -> void
	mov r0, #0
	pop {r4-r7,pc}
	.balign 4, 0x00
	thumb_func_end sub_809AC70

	thumb_local_start
sub_809AC88:
	push {r4-r7,lr}
	ldr r0, off_809AD7C // =TextScriptLottery86C67E4
	ldr r1, [r5,#0x74]
	bl chatbox_runScript // (void *scripts, u8 scriptOffIdx) -> void
	mov r1, #0x1c
	ldr r0, [r5,#0x74]
	cmp r0, #0xf
	beq loc_809AC9C
	mov r1, #0
loc_809AC9C:
	strb r1, [r5,#8]
	mov r0, #0
	pop {r4-r7,pc}
	.balign 4, 0x00
	thumb_func_end sub_809AC88

	thumb_local_start
sub_809ACA4:
	push {r4-r7,lr}
	mov r0, #0
	strb r0, [r5,#4]
	// a1
	ldr r0, off_809ACCC // =byte_809AA24
	bl sub_80465A0 // (void *a1) -> void
	ldr r0, [r5,#0x7c]
	mov r1, #0x80
	ldr r1, [r5,r1]
	mov r2, #0
	mov r3, #0
	bl sub_811980C
	ldr r0, dword_809AD48 // =0xffffffd0
	mov r1, #0x58
	mov r2, #0
	bl sub_8119854
	mov r0, #0
	pop {r4-r7,pc}
off_809ACCC: .word byte_809AA24
	thumb_func_end sub_809ACA4

	thumb_local_start
sub_809ACD0:
	push {r4-r7,lr}
	ldrb r0, [r5,#4]
	add r0, #0x10
	cmp r0, #0x60
	ble loc_809ACE8
	mov r6, r10
	ldr r6, [r6,#0x2c]
	ldr r2, [r6,#0x4c]
	strh r2, [r5,#6]
	ldr r2, [r6,#0x50]
	strb r2, [r5,#5]
	b loc_809ACFA
loc_809ACE8:
	strb r0, [r5,#4]
	ldr r1, dword_809AD48 // =0xffffffd0
	add r0, r0, r1
	mov r1, #0x58
	mov r2, #0
	bl sub_8119854
	mov r7, #1
	b loc_809AD00
loc_809ACFA:
	mov r0, #0x60
	strb r0, [r5,#4]
	mov r7, #0
loc_809AD00:
	bl sub_80465BC
	bl sub_80465F8 // () -> void
	mov r0, r7
	pop {r4-r7,pc}
	thumb_func_end sub_809ACD0

	thumb_local_start
sub_809AD0C:
	push {r4-r7,lr}
	movflag EVENT_F5
	bl TestEventFlagFromImmediate
	beq loc_809AD30
	ldrb r0, [r5,#4]
	sub r0, #0x10
	cmp r0, #0
	bge loc_809AD22
	mov r0, #0
loc_809AD22:
	strb r0, [r5,#4]
	ldr r1, dword_809AD48 // =0xffffffd0
	add r0, r0, r1
	mov r1, #0x58
	mov r2, #0
	bl sub_8119854
loc_809AD30:
	bl sub_80465BC
	bl sub_80465F8 // () -> void
	mov r7, #1
	mov r0, #0x80
	bl chatbox_check_eFlags2009F38
	bne loc_809AD44
	mov r7, #0
loc_809AD44:
	mov r0, r7
	pop {r4-r7,pc}
dword_809AD48: .word 0xFFFFFFD0
	thumb_func_end sub_809AD0C

	thumb_local_start
sub_809AD4C:
	push {r4-r7,lr}
	movflag EVENT_F5
	bl ClearEventFlagFromImmediate
	movflag EVENT_1725
	bl ClearEventFlagFromImmediate
	mov r0, #1
	bl sub_8033FC0
	bl sub_8003962
	bl zeroFill_8003AB2
	bl sub_800399A
	bl sub_8003AEA
	mov r0, #0
	pop {r4-r7,pc}
off_809AD78: .word eTextScript2033404
off_809AD7C: .word TextScriptLottery86C67E4
	.byte 0x3F, 0x0, 0x6, 0x29, 0xFF, 0x31, 0x17, 0x7, 0x2, 0xFF, 0x14
	.byte 0x3E, 0xE0, 0xB9, 0x73, 0x8, 0x3A, 0xFF, 0xF, 0x4, 0x80, 0x2
	.byte 0xFF, 0x1E, 0x27, 0xFF, 0xC, 0x8, 0x7, 0x2, 0xFF, 0x1E, 0x4B
	.byte 0xA9, 0xAD, 0x9, 0x8, 0x3F, 0x4, 0x0
	thumb_func_end sub_809AD4C

	thumb_local_start
sub_809ADA8:
	push {r4-r7,lr}
	bl sub_8136D8C
	mov r0, #0
	pop {r4-r7,pc}
	.balign 4, 0x00
byte_809ADB4: .byte 0x2, 0x0, 0x0, 0x3, 0x0, 0x0, 0x22, 0x0, 0x0, 0x0, 0x2A, 0x0, 0x0, 0x0, 0x0
	.byte 0x0, 0x2, 0x0, 0x0, 0x7, 0x0, 0x0, 0x22, 0x0, 0x0, 0x0, 0x40, 0x0, 0x0, 0x0
	.byte 0x0, 0x0, 0x9A, 0x4, 0x0, 0x0, 0x0, 0x0, 0x22, 0x0, 0x0, 0x0, 0x2A, 0x0, 0x3
	.byte 0x0, 0x0, 0x0, 0x0, 0x0, 0x22, 0x0, 0x0, 0x0, 0x40, 0x0, 0x7, 0x0, 0x0, 0x0
	.byte 0x3, 0x0, 0x0, 0x7, 0x0, 0x0, 0x46, 0xFF, 0x0, 0x0, 0x64, 0xFF, 0x0, 0x0, 0x0
	.byte 0x0, 0x3, 0x0, 0x0, 0x3, 0x0, 0x0, 0x46, 0xFF, 0x0, 0x0, 0x64, 0xFF, 0x0, 0x0
	.byte 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46, 0xFF, 0x0, 0x0, 0x64, 0xFF, 0x7
	.byte 0x0, 0x0, 0x0, 0x0, 0x0, 0x46, 0xFF, 0x0, 0x0, 0x4E, 0xFF, 0x3, 0x0, 0x0, 0x0
	.byte 0x5, 0x2, 0x0, 0x7, 0x0, 0x0, 0x4A, 0xFF, 0x0, 0x0, 0xBA, 0xFF, 0x0, 0x0, 0x0
	.byte 0x0, 0x5, 0x2, 0x0, 0x3, 0x0, 0x0, 0x4A, 0xFF, 0x0, 0x0, 0xBA, 0xFF, 0x0, 0x0
	.byte 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x4A, 0xFF, 0x0, 0x0, 0xBA, 0xFF, 0x7
	.byte 0x0, 0x0, 0x0, 0x0, 0x0, 0x4A, 0xFF, 0x0, 0x0, 0xA4, 0xFF, 0x3, 0x0, 0x0, 0x0
byte_809AE68: .byte 0x3F, 0x0, 0x6, 0x3E, 0xE0, 0xB9, 0x73, 0x8, 0x2, 0xFF, 0x1E
	.byte 0x27, 0xFF, 0xC, 0x8, 0x7, 0x4A, 0x5, 0x4A, 0x3, 0x4B, 0x1
	.byte 0xAF, 0x9, 0x8, 0x3F, 0x1C, 0x2, 0xFF, 0x1E, 0x27, 0xFF, 0x8
	.byte 0x8, 0x7, 0x2, 0xFF, 0x82, 0x53, 0xFF, 0x4, 0x17, 0xFF, 0x29
	.byte 0x17, 0xB6, 0xAE, 0x9, 0x8, 0x14, 0x0, 0x0, 0x0, 0x0, 0x4D
	.byte 0x8D, 0x0, 0x27, 0xFF, 0x24, 0xFF, 0x7, 0x53, 0xFF, 0x5, 0x2
	.byte 0xFF, 0x1E, 0x27, 0xFF, 0x20, 0x8, 0x7, 0x15, 0xBC, 0xAE, 0x9
	.byte 0x8, 0x4D, 0x8E, 0x0, 0x2, 0xFF, 0xF, 0x2, 0xFF, 0x1E, 0x3A
	.byte 0x4, 0x4, 0x80, 0x2, 0xFF, 0x1E, 0x14, 0x0, 0x0, 0x0, 0x0
	.byte 0x27, 0xFF, 0xC, 0x8, 0x7, 0x4A, 0x3, 0x54, 0x1, 0x3B, 0x4B
	.byte 0x7D, 0xAF, 0x9, 0x8, 0x3F, 0x3C, 0x53, 0xFF, 0x0, 0x2A, 0xFF
	.byte 0x1A, 0x17, 0x2A, 0xFF, 0x15, 0x17, 0x2, 0xFF, 0x1E, 0x4C, 0x80
	.byte 0x0, 0x0, 0x0, 0x0, 0x0, 0x3F, 0x18, 0x3F, 0x4, 0x0, 0x3C
	.byte 0x0, 0x40, 0x15, 0xC6, 0xAE, 0x9, 0x8, 0x0, 0x0
	thumb_func_end sub_809ADA8

	thumb_local_start
sub_809AF00:
	push {r4-r7,lr}
	ldr r7, off_809AFBC // =byte_809ADB4
	mov r1, r10
	ldr r1, [r1,#0x3c]
	ldrb r1, [r1,#0x12]
	mov r2, #0x3c
	mul r2, r1
	add r7, r7, r2
	ldr r0, [r7,#0x24]
	ldr r1, [r7,#0x28]
	mov r2, #0
	bl owPlayer_indirectlySetPlayerCoordsMaybe_809e1a4
	ldr r0, [r7,#0x2c]
	bl SetOWPlayerFacingDirection
	ldr r0, [r7,#0x2c]
	bl owPlayer_setS200ace0_fixedAnimationSelect_809e13c
	bl ZeroOWPlayerNaviPaletteIndex
	bl sub_809E4F8
	push {r4-r7}
	mov r0, #0x2e
	ldr r1, [r7,#0x30]
	ldr r2, [r7,#0x34]
	mov r3, #0
	ldr r4, [r7,#0x38]
	bl SpawnOverworldMapObject
	pop {r4-r7}
	ldr r0, [r7,#0x20]
	tst r0, r0
	beq loc_809AF4C
	mov r0, r0
	bl SetEventFlag
loc_809AF4C:
	mov r4, #0x2d
	movflag EVENT_COPYBOT_ACTIVE
	bl TestEventFlagFromImmediate
	beq loc_809AF5A
	mov r4, #0x2e
loc_809AF5A:
	strb r4, [r5,#4]
	mov r0, #0
	bl camera_80301B2
	ldr r0, [r7,#0x24]
	ldr r1, [r7,#0x28]
	ldr r3, [r7,#0x30]
	ldr r4, [r7,#0x34]
	add r0, r0, r3
	add r1, r1, r4
	asr r0, r0, #1
	asr r1, r1, #1
	mov r2, #0
	bl sub_80301DC
	mov r0, #0
	pop {r4-r7,pc}
	thumb_func_end sub_809AF00

	thumb_local_start
sub_809AF7C:
	push {r4-r7,lr}
	ldr r7, off_809AFBC // =byte_809ADB4
	mov r1, r10
	ldr r1, [r1,#0x3c]
	ldrb r1, [r1,#0x12]
	mov r2, #0x3c
	mul r2, r1
	add r7, r7, r2
	mov r6, #0
	movflag EVENT_COPYBOT_ACTIVE
	bl TestEventFlagFromImmediate
	bne loc_809AF9A
	mov r6, #0x10
loc_809AF9A:
	add r7, r7, r6
	str r7, [r5,#0x34]
	ldr r0, [r7,#4]
	ldr r1, [r7,#8]
	ldr r2, [r7,#0xc]
	bl owPlayer_indirectlySetPlayerCoordsMaybe_809e1a4
	ldrb r0, [r7,#3]
	bl SetOWPlayerFacingDirection
	ldrb r0, [r7,#3]
	bl owPlayer_setS200ace0_fixedAnimationSelect_809e13c
	bl ZeroOWPlayerNaviPaletteIndex
	mov r0, #0
	pop {r4-r7,pc}
off_809AFBC: .word byte_809ADB4
byte_809AFC0: .byte 0x3F, 0x0, 0x6, 0x3F, 0x1C, 0x4B, 0xD, 0xB0, 0x9, 0x8, 0x12
	.byte 0x20
	.word byte_809AFEC
	.byte 0x12, 0x24, 0xFE, 0xAF, 0x9, 0x8, 0x12, 0x28
	.word byte_809B004
	.byte 0xA, 0x20, 0x13, 0x20, 0x13, 0x24, 0x13, 0x28, 0x2, 0xFF
	.byte 0xA, 0x3F, 0x18, 0x3F, 0x4, 0x0
byte_809AFEC: .byte 0x40, 0x4, 0x4, 0xFF, 0x47, 0x1, 0xFF, 0x10, 0x42, 0x5, 0xFF
	.byte 0x20, 0x0, 0x47, 0x1, 0xFF, 0x0, 0x11, 0x4B, 0x55, 0xB0, 0x9
	.byte 0x8, 0x11
byte_809B004: .byte 0x4B, 0xD9, 0xB0, 0x9, 0x8, 0x11, 0x0, 0x0
	thumb_func_end sub_809AF7C

	thumb_local_start
sub_809B00C:
	push {r4-r7,lr}
	mov r7, r10
	ldr r7, [r7,#oToolkit_GameStatePtr]
	ldr r0, [r7,#oGameState_OverworldPlayerObjectPtr]
	add r0, #0x1c
	bl sub_8031A7A
	sub r0, #0xc0
	ldr r1, off_809B04C // =dword_809B050
	ldrb r0, [r1,r0]
	strb r0, [r5,#4]
	mov r0, #0x1a
	strb r0, [r5,#5]
	mov r0, #2
	ldr r1, [r7,#oGameState_OverworldPlayerObjectPtr]
	ldr r1, [r1,#0x24]
	asr r1, r1, #0x10
	cmp r1, #0x3c
	bge loc_809B034
	mov r0, #3
loc_809B034:
	strb r0, [r5,#6]
	cmp r0, #2
	beq loc_809B03E
	mov r0, #0x18
	b loc_809B040
loc_809B03E:
	mov r0, #0
loc_809B040:
	strh r0, [r5,#0x1a]
	mov r0, #0
	mvn r0, r0
	strh r0, [r5,#0x18]
	mov r0, #0
	pop {r4-r7,pc}
off_809B04C: .word dword_809B050
dword_809B050: .word 0x105
	thumb_func_end sub_809B00C

	thumb_local_start
sub_809B054:
	push {r4-r7,lr}
	mov r7, r10
	ldr r7, [r7,#0x3c]
	mov r0, #2
	ldr r1, [r7,#0x18]
	ldr r1, [r1,#0x24]
	asr r1, r1, #0x10
	cmp r1, #0x3c
	bge loc_809B068
	mov r0, #3
loc_809B068:
	strb r0, [r5,#7]
	ldrb r1, [r5,#6]
	cmp r1, #2
	beq loc_809B098
	cmp r0, r1
	bne loc_809B078
	mov r0, #1
	pop {r4-r7,pc}
loc_809B078:
	ldr r3, [r7,#0x18]
	mov r0, #0xb
	ldrh r1, [r3,#0x1e]
	sub r1, #0x40
	ldrh r2, [r3,#0x22]
	add r2, #0x40
	ldrh r3, [r3,#0x26]
	add r3, #0x40
	push {r0-r3}
	mov r0, #0xe1
	bl PlaySoundEffect
	bl ZeroOWPlayerNaviPaletteIndex
	pop {r0-r3}
	b loc_809B0C4
loc_809B098:
	ldrb r0, [r5,#0x10]
	tst r0, r0
	beq loc_809B0A2
	mov r0, #1
	pop {r4-r7,pc}
loc_809B0A2:
	ldr r3, [r7,#0x18]
	mov r0, #0xb
	ldrh r1, [r3,#0x1e]
	sub r1, #0x40
	ldrh r2, [r3,#0x22]
	add r2, #0x40
	ldrh r3, [r3,#0x26]
	add r3, #0x50
	push {r0-r3}
	mov r0, #0xe2
	bl PlaySoundEffect
	mov r0, #4
	bl SetOWPlayerNaviPaletteIndex
	pop {r0-r3}
	b loc_809B0C4
loc_809B0C4:
	lsl r1, r1, #0x10
	lsl r2, r2, #0x10
	lsl r3, r3, #0x10
	ldr r4, dword_809B0D4 // =0x48020000
	bl SpawnOverworldMapObject
	mov r0, #0
	pop {r4-r7,pc}
dword_809B0D4: .word 0x48020000
	thumb_func_end sub_809B054

	thumb_local_start
sub_809B0D8:
	push {r4-r7,lr}
	ldrb r0, [r5,#6]
	cmp r0, #2
	bne loc_809B0EC
	mov r0, #0x1a
	ldrsh r0, [r5,r0]
	sub r0, #1
	strh r0, [r5,#0x1a]
	bgt loc_809B128
	b loc_809B100
loc_809B0EC:
	mov r0, #0x1a
	ldrsh r0, [r5,r0]
	sub r0, #1
	strh r0, [r5,#0x1a]
	ble loc_809B128
	ldrb r0, [r5,#7]
	cmp r0, #2
	beq loc_809B100
	mov r0, #1
	pop {r4-r7,pc}
loc_809B100:
	mov r0, #0x18
	ldrh r0, [r5,r0]
	add r0, #1
	strh r0, [r5,#0x18]
	mov r1, #7
	tst r0, r1
	bne loc_809B128
	mov r7, r10
	ldr r7, [r7,#0x3c]
	ldr r3, [r7,#0x18]
	ldrb r0, [r5,#7]
	lsl r0, r0, #0x10
	ldr r4, dword_809B12C // =0x48000001
	orr r4, r0
	mov r0, #0xb
	ldr r1, [r3,#0x1c]
	ldr r2, [r3,#0x20]
	ldr r3, [r3,#0x24]
	bl SpawnOverworldMapObject
loc_809B128:
	mov r0, #1
	pop {r4-r7,pc}
dword_809B12C: .word 0x48000001
	thumb_func_end sub_809B0D8

	thumb_local_start
sub_809B130:
	push {r4-r7,lr}
	mov r7, r10
	ldr r7, [r7,#0x3c]
	ldr r0, [r7,#0x18]
	add r0, #0x1c
	bl sub_8031A7A
	sub r0, #0xc0
	blt loc_809B162
	cmp r0, #0xf
	bgt loc_809B162
	movflag EVENT_COPYBOT_ACTIVE
	bl TestEventFlagFromImmediate
	bne loc_809B15A
	ldr r0, byte_809B16C // =0x84
	ldr r1, byte_809B16C+4 // =0x2
	bl init_s_02011C50_8036E90
	b loc_809B162
loc_809B15A:
	ldr r0, off_809B168 // =byte_809AFC0
	mov r1, #0
	bl init_s_02011C50_8036E90
loc_809B162:
	mov r0, #0
	pop {r4-r7,pc}
	.balign 4, 0x00
off_809B168: .word byte_809AFC0
byte_809B16C: .byte 0x84, 0x83, 0x9, 0x8, 0x2, 0x0, 0x1, 0x8
byte_809B174: .byte 0x3, 0x0, 0x0, 0x5, 0x0, 0x0, 0x46, 0x1, 0x0, 0x0, 0x1C, 0x0, 0x0, 0x0, 0x40
	.byte 0x0, 0x8A, 0x0, 0xE6, 0xFF, 0x50, 0x0, 0x3, 0x0, 0x32, 0x0, 0x5E, 0x0, 0x82, 0x0
	.byte 0x78, 0x0, 0x0, 0x0, 0x8A, 0x0, 0x86, 0x0, 0x50, 0x0, 0x3, 0x0, 0x28, 0x0, 0x50
	.byte 0x0, 0x78, 0x0, 0xA0, 0x0, 0x38, 0x0, 0x4, 0x0, 0x0, 0x3, 0x0, 0x0, 0x4C, 0xFF
	.byte 0x0, 0x0, 0xD6, 0xFE, 0x0, 0x0, 0x20, 0x0, 0x8A, 0x0, 0x26, 0x1, 0x50, 0x0, 0x7
	.byte 0x0, 0x32, 0x0, 0x5E, 0x0, 0x96, 0x0, 0x8C, 0x0, 0x38, 0x0, 0x8A, 0x0, 0x86, 0x0
	.byte 0x50, 0x0, 0x7, 0x0, 0x28, 0x0, 0x50, 0x0, 0x78, 0x0, 0xA0, 0x0, 0x0, 0x0, 0x5
	.byte 0x0, 0x0, 0x3, 0x0, 0x0, 0x64, 0xFF, 0x0, 0x0, 0x38, 0xFF, 0x0, 0x0, 0x60, 0x0
	.byte 0xEA, 0xFF, 0x86, 0x0, 0x50, 0x0, 0x1, 0x0, 0x32, 0x0, 0x5E, 0x0, 0x96, 0x0, 0x8C
	.byte 0x0, 0x39, 0x0, 0x8A, 0x0, 0x86, 0x0, 0x50, 0x0, 0x5, 0x0, 0x28, 0x0, 0x50, 0x0
	.byte 0x78, 0x0, 0xA0, 0x0, 0x39, 0x0, 0x0, 0x0, 0x0, 0x5, 0x0, 0x0, 0xE2, 0xFF, 0x0
	.byte 0x0, 0x94, 0xFF, 0x0, 0x0, 0x0, 0x0, 0x8A, 0x0, 0x26, 0x1, 0x50, 0x0, 0x7, 0x0
	.byte 0x32, 0x0, 0x5E, 0x0, 0x96, 0x0, 0x8C, 0x0, 0x38, 0x0, 0x8A, 0x0, 0x86, 0x0, 0x50
	.byte 0x0, 0x5, 0x0, 0x28, 0x0, 0x50, 0x0, 0x78, 0x0, 0xA0, 0x0, 0x39, 0x0, 0x1, 0x0
	.byte 0x0, 0x5, 0x0, 0x0, 0x90, 0x0, 0x0, 0x0, 0x74, 0x0, 0x0, 0x0, 0x0, 0x0, 0x6A
	.byte 0x1, 0x76, 0xFF, 0x90, 0x0, 0x3, 0x0, 0x32, 0x0, 0x5E, 0x0, 0x82, 0x0, 0x78, 0x0
	.byte 0x0, 0x0, 0x6A, 0x1, 0x16, 0x0, 0x90, 0x0, 0x7, 0x0, 0x28, 0x0, 0x50, 0x0, 0x78
	.byte 0x0, 0xA0, 0x0, 0x0, 0x0, 0x4, 0x0, 0x0, 0x3, 0x0, 0x0, 0x4C, 0xFF, 0x0, 0x0
	.byte 0xD6, 0xFE, 0x0, 0x0, 0x20, 0x0, 0x6A, 0x1, 0x76, 0xFF, 0x90, 0x0, 0x3, 0x0, 0x32
	.byte 0x0, 0x5E, 0x0, 0x82, 0x0, 0x78, 0x0, 0x0, 0x0, 0x6A, 0x1, 0x16, 0x0, 0x90, 0x0
	.byte 0x7, 0x0, 0x28, 0x0, 0x50, 0x0, 0x78, 0x0, 0xA0, 0x0, 0x0, 0x0, 0x5, 0x0, 0x0
	.byte 0x3, 0x0, 0x0, 0x64, 0xFF, 0x0, 0x0, 0x38, 0xFF, 0x0, 0x0, 0x60, 0x0, 0x6A, 0x1
	.byte 0x76, 0xFF, 0x90, 0x0, 0x3, 0x0, 0x32, 0x0, 0x5E, 0x0, 0x82, 0x0, 0x78, 0x0, 0x0
	.byte 0x0, 0x6A, 0x1, 0x16, 0x0, 0x90, 0x0, 0x7, 0x0, 0x28, 0x0, 0x50, 0x0, 0x78, 0x0
	.byte 0xA0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x5, 0x0, 0x0, 0xE2, 0xFF, 0x0, 0x0, 0x94
	.byte 0xFF, 0x0, 0x0, 0x0, 0x0, 0x6A, 0x1, 0x76, 0xFF, 0x90, 0x0, 0x3, 0x0, 0x32, 0x0
	.byte 0x5E, 0x0, 0x82, 0x0, 0x78, 0x0, 0x0, 0x0, 0x6A, 0x1, 0x16, 0x0, 0x90, 0x0, 0x7
	.byte 0x0, 0x28, 0x0, 0x50, 0x0, 0x78, 0x0, 0xA0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x5
	.byte 0x0, 0x0, 0x90, 0x0, 0x0, 0x0, 0x74, 0x0, 0x0, 0x0, 0x0, 0x0, 0xBA, 0xFF, 0xF6
	.byte 0xFE, 0x50, 0x0, 0x7, 0x0, 0x32, 0x0, 0x5E, 0x0, 0x96, 0x0, 0x8C, 0x0, 0x0, 0x0
	.byte 0xBA, 0xFF, 0x56, 0xFE, 0x50, 0x0, 0x3, 0x0, 0x28, 0x0, 0x50, 0x0, 0x78, 0x0, 0xA0
	.byte 0x0, 0x0, 0x0, 0x3, 0x0, 0x0, 0x5, 0x0, 0x0, 0x46, 0x1, 0x0, 0x0, 0x1C, 0x0
	.byte 0x0, 0x0, 0x40, 0x0, 0xBA, 0xFF, 0xF6, 0xFE, 0x50, 0x0, 0x7, 0x0, 0x32, 0x0, 0x5E
	.byte 0x0, 0x96, 0x0, 0x8C, 0x0, 0x0, 0x0, 0xBA, 0xFF, 0x56, 0xFE, 0x50, 0x0, 0x3, 0x0
	.byte 0x28, 0x0, 0x50, 0x0, 0x78, 0x0, 0xA0, 0x0, 0x0, 0x0, 0x5, 0x0, 0x0, 0x3, 0x0
	.byte 0x0, 0x64, 0xFF, 0x0, 0x0, 0x38, 0xFF, 0x0, 0x0, 0x60, 0x0, 0xBA, 0xFF, 0xF6, 0xFE
	.byte 0x50, 0x0, 0x7, 0x0, 0x32, 0x0, 0x5E, 0x0, 0x96, 0x0, 0x8C, 0x0, 0x0, 0x0, 0xBA
	.byte 0xFF, 0x56, 0xFE, 0x50, 0x0, 0x3, 0x0, 0x28, 0x0, 0x50, 0x0, 0x78, 0x0, 0xA0, 0x0
	.byte 0x0, 0x0, 0x0, 0x0, 0x0, 0x5, 0x0, 0x0, 0xE2, 0xFF, 0x0, 0x0, 0x94, 0xFF, 0x0
	.byte 0x0, 0x0, 0x0, 0xBA, 0xFF, 0xF6, 0xFE, 0x50, 0x0, 0x7, 0x0, 0x32, 0x0, 0x5E, 0x0
	.byte 0x96, 0x0, 0x8C, 0x0, 0x0, 0x0, 0xBA, 0xFF, 0x56, 0xFE, 0x50, 0x0, 0x3, 0x0, 0x28
	.byte 0x0, 0x50, 0x0, 0x78, 0x0, 0xA0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x5, 0x0, 0x0
	.byte 0x90, 0x0, 0x0, 0x0, 0x74, 0x0, 0x0, 0x0, 0x0, 0x0, 0xF2, 0xFF, 0x2E, 0xFF, 0xB0
	.byte 0x0, 0x5, 0x0, 0x32, 0x0, 0x5E, 0x0, 0x82, 0x0, 0x78, 0x0, 0x0, 0x0, 0x52, 0xFF
	.byte 0x2E, 0xFF, 0xB0, 0x0, 0x1, 0x0, 0x28, 0x0, 0x50, 0x0, 0x78, 0x0, 0x78, 0x0, 0x0
	.byte 0x0, 0x3, 0x0, 0x0, 0x5, 0x0, 0x0, 0x46, 0x1, 0x0, 0x0, 0x1C, 0x0, 0x0, 0x0
	.byte 0x40, 0x0, 0xF2, 0xFF, 0x2E, 0xFF, 0xB0, 0x0, 0x5, 0x0, 0x32, 0x0, 0x5E, 0x0, 0x82
	.byte 0x0, 0x78, 0x0, 0x0, 0x0, 0x52, 0xFF, 0x2E, 0xFF, 0xB0, 0x0, 0x1, 0x0, 0x28, 0x0
	.byte 0x50, 0x0, 0x78, 0x0, 0x78, 0x0, 0x0, 0x0, 0x4, 0x0, 0x0, 0x3, 0x0, 0x0, 0x4C
	.byte 0xFF, 0x0, 0x0, 0xD6, 0xFE, 0x0, 0x0, 0x20, 0x0, 0xF2, 0xFF, 0x2E, 0xFF, 0xB0, 0x0
	.byte 0x5, 0x0, 0x32, 0x0, 0x5E, 0x0, 0x82, 0x0, 0x78, 0x0, 0x0, 0x0, 0x52, 0xFF, 0x2E
	.byte 0xFF, 0xB0, 0x0, 0x1, 0x0, 0x28, 0x0, 0x50, 0x0, 0x78, 0x0, 0x78, 0x0, 0x0, 0x0
	.byte 0x0, 0x0, 0x0, 0x5, 0x0, 0x0, 0xE2, 0xFF, 0x0, 0x0, 0x94, 0xFF, 0x0, 0x0, 0x0
	.byte 0x0, 0xF2, 0xFF, 0x2E, 0xFF, 0xB0, 0x0, 0x5, 0x0, 0x32, 0x0, 0x5E, 0x0, 0x82, 0x0
	.byte 0x78, 0x0, 0x0, 0x0, 0x52, 0xFF, 0x2E, 0xFF, 0xB0, 0x0, 0x1, 0x0, 0x28, 0x0, 0x50
	.byte 0x0, 0x78, 0x0, 0x78, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x5, 0x0, 0x0, 0x90, 0x0
	.byte 0x0, 0x0, 0x74, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x4
	.byte 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	.byte 0x0, 0x0, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3
	.byte 0x0, 0x0, 0x5, 0x0, 0x0, 0x46, 0x1, 0x0, 0x0, 0x1C, 0x0, 0x0, 0x0, 0x40, 0x0
	.byte 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	.byte 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0
	.byte 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x4, 0x0, 0x0, 0x3, 0x0, 0x0, 0x4C, 0xFF, 0x0
	.byte 0x0, 0xD6, 0xFE, 0x0, 0x0, 0x20, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x4, 0x0
	.byte 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	.byte 0x0, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x5, 0x0
	.byte 0x0, 0x3, 0x0, 0x0, 0x64, 0xFF, 0x0, 0x0, 0x38, 0xFF, 0x0, 0x0, 0x60, 0x0, 0x0
	.byte 0x0, 0x0, 0x0, 0x0, 0x0, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	.byte 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	.byte 0x0, 0x0, 0x0, 0x0, 0x0, 0x18, 0x8A, 0x0, 0x86, 0x0, 0x50, 0x0, 0x20, 0x0, 0x8
	.byte 0x18, 0x6A, 0x1, 0x16, 0x0, 0x90, 0x0, 0x20, 0x0, 0x8
byte_809B598: .byte 0x18, 0xBA, 0xFF, 0x56, 0xFE, 0x50, 0x0, 0x20, 0x0, 0x8
	.byte 0x18, 0x52, 0xFF, 0x2E, 0xFF, 0xB0, 0x0, 0x20, 0x0, 0x8
	.byte 0x8
byte_809B5AD: .byte 0x3F, 0x0, 0x6, 0x3F, 0x1C, 0x3F, 0x14, 0x3E, 0xD8, 0xC0
	.byte 0x73, 0x88, 0x4B, 0xA5, 0xB7, 0x9, 0x8, 0x3A, 0x4, 0x4
	.byte 0x80, 0x1C, 0x8, 0xFF, 0x5A, 0xB6, 0x9, 0x8, 0x1C, 0x8
	.byte 0x0
	.word byte_809B669
	.byte 0x1C, 0x8, 0x1, 0x69, 0xB6, 0x9, 0x8, 0x1C, 0x8, 0x2, 0x69, 0xB6
	.byte 0x9, 0x8, 0x1C, 0x8, 0x3, 0x69, 0xB6, 0x9, 0x8, 0x1C, 0x8, 0x4
	.word byte_809B688
	.byte 0x1C, 0x8, 0x5, 0x88, 0xB6, 0x9, 0x8, 0x1C, 0x8, 0x6, 0x88, 0xB6
	.byte 0x9, 0x8, 0x1C, 0x8, 0x7, 0x88, 0xB6, 0x9, 0x8, 0x1C, 0x8, 0x8
	.word byte_809B6A7
	.byte 0x1C, 0x8, 0x9, 0xA7, 0xB6, 0x9, 0x8, 0x1C, 0x8, 0xA, 0xA7, 0xB6
	.byte 0x9, 0x8, 0x1C, 0x8, 0xB, 0xA7, 0xB6, 0x9, 0x8, 0x1C, 0x8, 0xC
	.word byte_809B6C6
	.byte 0x1C, 0x8, 0xD, 0xC6, 0xB6, 0x9, 0x8, 0x1C, 0x8, 0xE, 0xC6
	.byte 0xB6, 0x9, 0x8, 0x1C, 0x8, 0xF, 0xC6, 0xB6, 0x9, 0x8, 0x1C
	.byte 0x8, 0x10
	.word byte_809B6E5
	.byte 0x1C, 0x8, 0x11, 0xE5, 0xB6, 0x9, 0x8, 0x1C, 0x8, 0x12, 0xE5
	.byte 0xB6, 0x9, 0x8, 0x1C, 0x8, 0x13, 0xE5, 0xB6, 0x9, 0x8, 0x15
	.byte 0x5A, 0xB6, 0x9, 0x8, 0x12, 0x20
	.word byte_809B752
	.byte 0xA, 0x20, 0x3F, 0x18, 0x3F, 0x10, 0x3F, 0x4, 0x0
byte_809B669: .byte 0x12, 0x20, 0x64, 0xB7, 0x9, 0x8, 0x12, 0x24, 0x7B, 0xB7
	.byte 0x9, 0x8, 0xA, 0x20, 0xA, 0x24, 0x2, 0xFF, 0x1E, 0x54
	.byte 0x0, 0x84, 0xB5, 0x9, 0x8, 0x8, 0x15
	.word byte_809B70A
byte_809B688: .byte 0x12, 0x20, 0x64, 0xB7, 0x9, 0x8, 0x12, 0x24
	.word byte_809B77B
	.byte 0xA, 0x20, 0xA, 0x24, 0x2, 0xFF, 0x1E, 0x54, 0x0, 0x8E
	.byte 0xB5, 0x9, 0x8, 0x8, 0x15, 0xA, 0xB7, 0x9, 0x8
byte_809B6A7: .byte 0x12, 0x20, 0x64, 0xB7, 0x9, 0x8, 0x12, 0x24, 0x7B, 0xB7
	.byte 0x9, 0x8, 0xA, 0x20, 0xA, 0x24, 0x2, 0xFF, 0x1E, 0x54
	.byte 0x0
	.word byte_809B598
	.byte 0x8, 0x15, 0xA, 0xB7, 0x9, 0x8
byte_809B6C6: .byte 0x12, 0x20
	.word byte_809B764
	.byte 0x12, 0x24, 0x7B, 0xB7, 0x9, 0x8, 0xA, 0x20, 0xA, 0x24
	.byte 0x2, 0xFF, 0x1E, 0x54, 0x0, 0xA2, 0xB5, 0x9, 0x8, 0x8
	.byte 0x15, 0xA, 0xB7, 0x9, 0x8
byte_809B6E5: .byte 0x12, 0x20, 0x64, 0xB7, 0x9, 0x8, 0x12, 0x24, 0x7B, 0xB7
	.byte 0x9, 0x8, 0xA, 0x20, 0xA, 0x24, 0x2, 0xFF, 0x1E, 0x3A
	.byte 0xFF, 0x1, 0x4, 0x80, 0x2, 0xFF, 0x1E, 0x4B, 0x69, 0xB8
	.byte 0x9, 0x8, 0x15, 0x2B, 0xB7, 0x9, 0x8
byte_809B70A: .byte 0x2, 0xFF, 0x1E, 0x3A, 0xFF, 0x0, 0x4, 0x80, 0x2, 0xFF, 0x1E
	.byte 0x4B, 0x1, 0xB8, 0x9, 0x8, 0x4B, 0x91, 0xB8, 0x9, 0x8, 0x2
	.byte 0xFF, 0x5A, 0x12, 0x20
	.word byte_809B747
	.byte 0x9, 0x9, 0x1, 0x27, 0xFF, 0xC, 0x8, 0x7, 0x2, 0xFF, 0x3C, 0x29
	.byte 0xFF, 0x3A, 0x0, 0x28, 0xFF, 0xFF, 0x4C, 0x80, 0x0, 0x0, 0x0, 0x0
	.byte 0x0, 0x3B, 0x3F, 0x18, 0x3F, 0x4, 0x0
byte_809B747: .byte 0x4B
	.word sub_809B910+1
	.byte 0x4B, 0x75, 0xB9, 0x9, 0x8, 0x11
byte_809B752: .byte 0x40, 0x4, 0x5, 0xFF, 0x47, 0x1, 0xFF, 0x10, 0x42, 0xFF
	.byte 0x8, 0x10, 0x0, 0x47, 0x1, 0xFF, 0x0, 0x11
byte_809B764: .byte 0x4B, 0xED, 0xB7, 0x9, 0x8, 0x40, 0x4, 0x5, 0xFF, 0x47, 0x1
	.byte 0xFF, 0x10, 0x42, 0xFF, 0x8, 0x10, 0x0, 0x47, 0x1, 0xFF, 0x0
	.byte 0x11
byte_809B77B: .byte 0x40, 0xC, 0xFF, 0x10, 0x2, 0xFF, 0x2, 0x40, 0xC, 0xFF
	.byte 0xC, 0x2, 0xFF, 0x2, 0x40, 0xC, 0xFF, 0x8, 0x2, 0xFF
	.byte 0x2, 0x40, 0xC, 0xFF, 0x4, 0x2, 0xFF, 0x2, 0x40, 0xC
	.byte 0xFF, 0x0, 0x2, 0xFF, 0x2, 0x3F, 0x34, 0x3F, 0x38, 0x11
	.byte 0x0
	thumb_func_end sub_809B130

	thumb_local_start
sub_809B7A4:
	push {r4-r7,lr}
	ldr r4, off_809B7D0 // =byte_809B7D4
	mov r0, r10
	ldr r0, [r0,#0x3c]
	ldrb r0, [r0,#4]
	lsl r0, r0, #2
	add r4, r4, r0
	ldrb r0, [r4]
	strb r0, [r5,#4]
	ldrb r0, [r4,#1]
	strb r0, [r5,#5]
	bl SetOWPlayerFacingDirection
	ldrb r0, [r4,#2]
	bl owPlayer_setS200ace0_fixedAnimationSelect_809e13c
	mov r4, r10
	ldr r4, [r4,#0x14]
	mov r0, #0
	strb r0, [r4,#0x10]
	mov r0, #0
	pop {r4-r7,pc}
off_809B7D0: .word byte_809B7D4
byte_809B7D4: .byte 0x32, 0x5, 0x1, 0xFF, 0xA, 0x5, 0x1, 0xFF, 0xFF, 0xFF, 0xFF
	.byte 0xFF, 0x14, 0x5, 0x1, 0xFF, 0x1E, 0x3, 0x7, 0xFF, 0x28, 0x3
	.byte 0x7, 0xFF
	thumb_func_end sub_809B7A4

	thumb_local_start
sub_809B7EC:
	push {r4-r7,lr}
	bl GetOWPlayerFacingDirection
	add r0, #4
	mov r1, #7
	and r0, r1
	strb r0, [r5,#5]
	mov r0, #0
	pop {r4-r7,pc}
	.balign 4, 0x00
	thumb_func_end sub_809B7EC

	thumb_local_start
sub_809B800:
	push {r4-r7,lr}
	ldrb r0, [r5,#8]
	ldr r7, off_809B88C // =byte_809B174
	mov r1, #0x34
	mul r1, r0
	add r7, r7, r1
	str r7, [r5,#0x34]
	mov r0, #0x70
	add r6, r5, r0
	push {r5}
	mov r0, #0xc
	mov r1, #0x10
	ldrsh r1, [r7,r1]
	lsl r1, r1, #0x10
	str r1, [r6]
	mov r2, #0x12
	ldrsh r2, [r7,r2]
	lsl r2, r2, #0x10
	str r2, [r6,#4]
	mov r3, #0x14
	ldrsh r3, [r7,r3]
	lsl r3, r3, #0x10
	str r3, [r6,#8]
	ldrh r4, [r7,#0x16]
	lsr r4, r4, #1
	str r4, [r6,#0xc]
	bl SpawnOverworldMapObject
	mov r0, r5
	pop {r5}
	str r0, [r6,#0x10]
	ldrh r0, [r7,#0x1e]
	str r0, [r6,#0x14]
	mov r0, #0
	str r0, [r6,#0x1c]
	str r0, [r5,#0x14]
	mov r0, #0
	mov r1, #0x38
	bl SetEventFlagFromImmediate
	mov r0, #0
	mov r1, #0x39
	bl SetEventFlagFromImmediate
	ldrh r0, [r7,#0x20]
	tst r0, r0
	beq loc_809B864
	mov r0, r0
	bl ClearEventFlag // (u16 entryFlagBitfield) -> void
loc_809B864:
	mov r0, #0
	pop {r4-r7,pc}
	thumb_func_end sub_809B800

	thumb_local_start
sub_809B868:
	push {r4-r7,lr}
	ldrb r0, [r5,#8]
	ldr r7, off_809B88C // =byte_809B174
	mov r1, #0x34
	mul r1, r0
	add r7, r7, r1
	str r7, [r5,#0x34]
	mov r0, #0
	mov r1, #0x38
	bl SetEventFlagFromImmediate
	mov r0, #0
	mov r1, #0x39
	bl SetEventFlagFromImmediate
	mov r0, #0
	pop {r4-r7,pc}
	.balign 4, 0x00
off_809B88C: .word byte_809B174
	thumb_func_end sub_809B868

	thumb_local_start
sub_809B890:
	push {r4-r7,lr}
	ldr r7, [r5,#0x34]
	mov r0, #0x70
	add r6, r5, r0
	ldr r0, [r5,#0x14]
	add r0, #1
	str r0, [r5,#0x14]
	ldr r0, [r6,#0x14]
	sub r0, #1
	blt loc_809B8A6
	str r0, [r6,#0x14]
loc_809B8A6:
	ldr r3, [r5,#0x14]
	mov r4, #0
	ldrh r0, [r7,#0x18]
	cmp r3, r0
	blt loc_809B8C4
	mov r4, #1
	ldrh r0, [r7,#0x1a]
	cmp r3, r0
	blt loc_809B8C4
	mov r4, #2
	ldrh r0, [r7,#0x1c]
	cmp r3, r0
	blt loc_809B8C4
	mov r0, #0
	pop {r4-r7,pc}
loc_809B8C4:
	ldr r3, off_809B8EC // =byte_809B8F0
	bl sub_809B9EC
	ldr r0, [r6,#0x1c]
	tst r0, r0
	bne loc_809B8E8
	push {r4-r7}
	ldr r5, [r6,#0x10]
	bl sub_8002E04
	pop {r4-r7}
	beq loc_809B8E8
	mov r0, #1
	str r0, [r6,#0x1c]
	mov r0, #0x8d
	add r0, #0xff
	bl PlaySoundEffect
loc_809B8E8:
	mov r0, #1
	pop {r4-r7,pc}
off_809B8EC: .word byte_809B8F0
byte_809B8F0: .byte 0x8, 0x0, 0x4, 0x0, 0x2, 0x0, 0xFF, 0xFF, 0x0, 0x8, 0x0, 0x4, 0x0, 0x2, 0xFF
	.byte 0xFF, 0xF8, 0x0, 0xFC, 0x0, 0xFE, 0x0, 0xFF, 0xFF, 0x0, 0xF8, 0x0, 0xFC, 0x0, 0xFE
	.byte 0xFF, 0xFF
	thumb_func_end sub_809B890

	thumb_local_start
sub_809B910:
	push {r4-r7,lr}
	ldr r7, [r5,#0x34]
	mov r0, #0x70 
	add r6, r5, r0
	mov r1, #0x22 
	ldrsh r1, [r7,r1]
	lsl r1, r1, #0x10
	str r1, [r6]
	mov r2, #0x24 
	ldrsh r2, [r7,r2]
	lsl r2, r2, #0x10
	str r2, [r6,#4]
	mov r3, #0x26 
	ldrsh r3, [r7,r3]
	lsl r3, r3, #0x10
	str r3, [r6,#8]
	ldrh r4, [r7,#0x28]
	lsr r4, r4, #1
	str r4, [r6,#0xc]
	ldrh r0, [r7,#0x30]
	str r0, [r6,#0x18]
	mov r0, #0x10
	str r0, [r6,#0x14]
	mov r0, #0
	str r0, [r6,#0x1c]
	str r0, [r5,#0x14]
	mov r0, #0
	mov r1, #0x38
	bl SetEventFlagFromImmediate
	mov r0, #0
	mov r1, #0x39
	bl SetEventFlagFromImmediate
	ldrh r0, [r7,#0x32]
	tst r0, r0
	beq loc_809B960
	mov r0, r0
	bl ClearEventFlag // (u16 entryFlagBitfield) -> void
loc_809B960:
	mov r0, #0
	strb r0, [r5,#9]
	mov r0, #1
	mov r1, r6
	bl camera_80301B2
	mov r0, #0
	pop {r4-r7,pc}
	.word byte_809B174
	thumb_func_end sub_809B910

	thumb_local_start
sub_809B974:
	push {r4-r7,lr}
	ldr r7, [r5,#0x34]
	mov r0, #0x70
	add r6, r5, r0
	ldr r0, [r5,#0x14]
	add r0, #1
	str r0, [r5,#0x14]
	ldr r0, [r6,#0x18]
	sub r0, #1
	blt loc_809B98C
	str r0, [r6,#0x18]
	b loc_809B990
loc_809B98C:
	mov r0, #1
	strb r0, [r5,#9]
loc_809B990:
	ldr r3, [r5,#0x14]
	mov r4, #0
	ldrh r0, [r7,#0x2a]
	cmp r3, r0
	blt loc_809B9AC
	mov r4, #1
	ldrh r0, [r7,#0x2c]
	cmp r3, r0
	blt loc_809B9AC
	mov r4, #2
	ldrh r0, [r7,#0x2e]
	cmp r3, r0
	blt loc_809B9AC
	mov r4, #3
loc_809B9AC:
	ldr r3, off_809B9C8 // =byte_809B9CC
	bl sub_809B9EC
	ldr r0, [r6,#0x1c]
	tst r0, r0
	bne loc_809B9C4
	mov r0, #1
	str r0, [r6,#0x1c]
	mov r0, #0x8e
	add r0, #0xff
	bl PlaySoundEffect
loc_809B9C4:
	mov r0, #1
	pop {r4-r7,pc}
off_809B9C8: .word byte_809B9CC
byte_809B9CC: .byte 0x4, 0x0, 0x4, 0x0, 0x8, 0x0, 0xC, 0x0, 0x0, 0x4, 0x0, 0x4, 0x0, 0x8, 0x0, 0xC
	.byte 0xFC, 0x0, 0xFC, 0x0, 0xF8, 0x0, 0xF4, 0x0, 0x0, 0xFC, 0x0, 0xFC, 0x0, 0xF8, 0x0, 0xF4
	thumb_func_end sub_809B974

	thumb_local_start
sub_809B9EC:
	push {r4-r7,lr}
	ldr r0, [r6,#0xc]
	lsl r0, r0, #3
	add r3, r3, r0
	lsl r0, r4, #1
	add r3, r3, r0
	mov r0, #0
	ldrsb r0, [r3,r0]
	lsl r0, r0, #0xe
	mov r2, #1
	ldrsb r2, [r3,r2]
	lsl r2, r2, #0xe
	ldr r1, [r6]
	add r1, r1, r0
	str r1, [r6]
	ldr r3, [r6,#4]
	add r3, r3, r2
	str r3, [r6,#4]
	pop {r4-r7,pc}
	.balign 4, 0x00
	thumb_func_end sub_809B9EC

	thumb_func_start sub_809BA14
sub_809BA14:
	push {r5-r7,lr}
	mov r5, r10
	ldr r5, [r5,#oToolkit_CutsceneStatePtr]
	mov r0, #0x70 
	add r6, r5, r0
	ldr r0, [r6]
	ldr r1, [r6,#4]
	ldr r2, [r6,#8]
	ldr r3, [r6,#0xc]
	ldr r4, [r6,#0x14]
	cmp r4, #0x10
	ble locret_809BA2E
	mov r4, #0x10
locret_809BA2E:
	pop {r5-r7,pc}
byte_809BA30: .byte 0x8A, 0x0, 0x26, 0x1, 0x50, 0x0, 0x7, 0x0, 0x32, 0x0, 0x5E, 0x0
	.byte 0x96, 0x0, 0x8C, 0x0, 0x38, 0x0, 0xFF, 0xFF, 0x8A, 0x0, 0xE6, 0xFF
	.byte 0x50, 0x0, 0x3, 0x0, 0x32, 0x0, 0x5E, 0x0, 0x82, 0x0, 0x78, 0x0
	.byte 0x0, 0x0, 0xFF, 0xFF, 0xEA, 0xFF, 0x86, 0x0, 0x50, 0x0, 0x1, 0x0
	.byte 0x32, 0x0, 0x5E, 0x0, 0x96, 0x0, 0x8C, 0x0, 0x39, 0x0, 0xFF, 0xFF
	.byte 0xEA, 0xFF, 0x86, 0x0, 0x50, 0x0, 0x1, 0x0, 0x32, 0x0, 0x5E, 0x0
	.byte 0x96, 0x0, 0x8C, 0x0, 0x39, 0x0, 0xFF, 0xFF, 0x6A, 0x1, 0x76, 0xFF
	.byte 0x90, 0x0, 0x3, 0x0, 0x32, 0x0, 0x5E, 0x0, 0x82, 0x0, 0x78, 0x0
	.byte 0x0, 0x0, 0xFF, 0xFF, 0x6A, 0x1, 0x76, 0xFF, 0x90, 0x0, 0x3, 0x0
	.byte 0x32, 0x0, 0x5E, 0x0, 0x82, 0x0, 0x78, 0x0, 0x0, 0x0, 0xFF, 0xFF
	.byte 0x6A, 0x1, 0x76, 0xFF, 0x90, 0x0, 0x3, 0x0, 0x32, 0x0, 0x5E, 0x0
	.byte 0x82, 0x0, 0x78, 0x0, 0x0, 0x0, 0xFF, 0xFF, 0x6A, 0x1, 0x76, 0xFF
	.byte 0x90, 0x0, 0x3, 0x0, 0x32, 0x0, 0x5E, 0x0, 0x82, 0x0, 0x78, 0x0
	.byte 0x0, 0x0, 0xFF, 0xFF, 0xBA, 0xFF, 0xF6, 0xFE, 0x50, 0x0, 0x7, 0x0
	.byte 0x32, 0x0, 0x5E, 0x0, 0x96, 0x0, 0x8C, 0x0, 0x0, 0x0, 0xFF, 0xFF
	.byte 0xBA, 0xFF, 0xF6, 0xFE, 0x50, 0x0, 0x7, 0x0, 0x32, 0x0, 0x5E, 0x0
	.byte 0x96, 0x0, 0x8C, 0x0, 0x0, 0x0, 0xFF, 0xFF, 0xBA, 0xFF, 0xF6, 0xFE
	.byte 0x50, 0x0, 0x7, 0x0, 0x32, 0x0, 0x5E, 0x0, 0x96, 0x0, 0x8C, 0x0
	.byte 0x0, 0x0, 0xFF, 0xFF, 0xBA, 0xFF, 0xF6, 0xFE, 0x50, 0x0, 0x7, 0x0
	.byte 0x32, 0x0, 0x5E, 0x0, 0x96, 0x0, 0x8C, 0x0, 0x0, 0x0, 0xFF, 0xFF
	.byte 0xF2, 0xFF, 0x2E, 0xFF, 0xB0, 0x0, 0x5, 0x0, 0x32, 0x0, 0x5E, 0x0
	.byte 0x82, 0x0, 0x78, 0x0, 0x0, 0x0, 0xFF, 0xFF, 0xF2, 0xFF, 0x2E, 0xFF
	.byte 0xB0, 0x0, 0x5, 0x0, 0x32, 0x0, 0x5E, 0x0, 0x82, 0x0, 0x78, 0x0
	.byte 0x0, 0x0, 0xFF, 0xFF, 0xF2, 0xFF, 0x2E, 0xFF, 0xB0, 0x0, 0x5, 0x0
	.byte 0x32, 0x0, 0x5E, 0x0, 0x82, 0x0, 0x78, 0x0, 0x0, 0x0, 0xFF, 0xFF
	.byte 0xF2, 0xFF, 0x2E, 0xFF, 0xB0, 0x0, 0x5, 0x0, 0x32, 0x0, 0x5E, 0x0
	.byte 0x82, 0x0, 0x78, 0x0, 0x0, 0x0, 0xFF, 0xFF, 0x0, 0x0, 0x0, 0x0
	.byte 0x0, 0x0, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	.byte 0x0, 0x0, 0xFF, 0xFF, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x4, 0x0
	.byte 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xFF, 0xFF
	.byte 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0
	.byte 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xFF, 0xFF, 0x0, 0x0, 0x0, 0x0
	.byte 0x0, 0x0, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	.byte 0x0, 0x0, 0xFF, 0xFF, 0x18, 0x90, 0x0, 0x74, 0x0, 0x0, 0x0, 0x20
	.byte 0x0, 0x8
byte_809BBCA: .byte 0x18, 0x46, 0x1, 0x1C, 0x0, 0x40, 0x0, 0x20, 0x0, 0x8, 0x18
	.byte 0x4C, 0xFF, 0xD6, 0xFE, 0x20, 0x0, 0x20, 0x0, 0x8, 0x18, 0x64
	.byte 0xFF, 0x38, 0xFF, 0x60, 0x0, 0x20, 0x0, 0x8, 0x8, 0x3F, 0x0
	.byte 0x6, 0x3E, 0xD8, 0xC0, 0x73, 0x88, 0x2, 0xFF, 0x1, 0x3F, 0x34
	.byte 0x3F, 0x1C, 0x3F, 0x14, 0x4B, 0xB9, 0xBD, 0x9, 0x8, 0x1C, 0x8
	.byte 0x0, 0x8B, 0xBC, 0x9, 0x8, 0x1C, 0x8, 0x1, 0x8B, 0xBC, 0x9
	.byte 0x8, 0x1C, 0x8, 0x2
	.word byte_809BC8B
	.byte 0x1C, 0x8, 0x3, 0x8B, 0xBC, 0x9, 0x8, 0x1C, 0x8, 0x4, 0xBA, 0xBC
	.byte 0x9, 0x8, 0x1C, 0x8, 0x5, 0xBA, 0xBC, 0x9, 0x8, 0x1C, 0x8, 0x6
	.word byte_809BCBA
	.byte 0x1C, 0x8, 0x7, 0xBA, 0xBC, 0x9, 0x8, 0x1C, 0x8, 0x8, 0xE9, 0xBC
	.byte 0x9, 0x8, 0x1C, 0x8, 0x9, 0xE9, 0xBC, 0x9, 0x8, 0x1C, 0x8, 0xA
	.word byte_809BCE9
	.byte 0x1C, 0x8, 0xB, 0xE9, 0xBC, 0x9, 0x8, 0x1C, 0x8, 0xC, 0x18
	.byte 0xBD, 0x9, 0x8, 0x1C, 0x8, 0xD, 0x18, 0xBD, 0x9, 0x8, 0x1C
	.byte 0x8, 0xE
	.word byte_809BD18
	.byte 0x1C, 0x8, 0xF, 0x18, 0xBD, 0x9, 0x8, 0x1C, 0x8, 0x10, 0x47
	.byte 0xBD, 0x9, 0x8, 0x1C, 0x8, 0x11, 0x47, 0xBD, 0x9, 0x8, 0x1C
	.byte 0x8, 0x12
	.word byte_809BD47
	.byte 0x1C, 0x8, 0x13, 0x47, 0xBD, 0x9, 0x8
byte_809BC8B: .byte 0x12, 0x20, 0x73, 0xBD, 0x9, 0x8, 0x27, 0xFF, 0x8, 0x8, 0x7
	.byte 0xA, 0x20, 0x2, 0xFF, 0x1E, 0x54, 0x0, 0xC0, 0xBB, 0x9, 0x8
	.byte 0x8, 0x2, 0xFF, 0x1E, 0x12, 0x20, 0x7C, 0xBD, 0x9, 0x8, 0x12
	.byte 0x24, 0x8E, 0xBD, 0x9, 0x8, 0xA, 0x20, 0xA, 0x24, 0x15, 0x64
	.byte 0xBD, 0x9, 0x8
byte_809BCBA: .byte 0x12, 0x20
	.word byte_809BD73
	.byte 0x27, 0xFF, 0x8, 0x8, 0x7, 0xA, 0x20, 0x2, 0xFF, 0x1E, 0x54
	.byte 0x0
	.word byte_809BBCA
	.byte 0x8, 0x2, 0xFF, 0x1E, 0x12, 0x20, 0x7C, 0xBD, 0x9, 0x8, 0x12
	.byte 0x24
	.word byte_809BD8E
	.byte 0xA, 0x20, 0xA, 0x24, 0x15, 0x64, 0xBD, 0x9, 0x8
byte_809BCE9: .byte 0x12, 0x20, 0x73, 0xBD, 0x9, 0x8, 0x27, 0xFF, 0x8, 0x8, 0x7
	.byte 0xA, 0x20, 0x2, 0xFF, 0x1E, 0x54, 0x0, 0xD4, 0xBB, 0x9, 0x8
	.byte 0x8, 0x2, 0xFF, 0x1E, 0x12, 0x20, 0x7C, 0xBD, 0x9, 0x8, 0x12
	.byte 0x24, 0x8E, 0xBD, 0x9, 0x8, 0xA, 0x20, 0xA, 0x24, 0x15
	.word byte_809BD64
byte_809BD18: .byte 0x12, 0x20, 0x73, 0xBD, 0x9, 0x8, 0x27, 0xFF, 0x8, 0x8, 0x7
	.byte 0xA, 0x20, 0x2, 0xFF, 0x1E, 0x54, 0x0, 0xDE, 0xBB, 0x9, 0x8
	.byte 0x8, 0x2, 0xFF, 0x1E, 0x12, 0x20
	.word byte_809BD7C
	.byte 0x12, 0x24, 0x8E, 0xBD, 0x9, 0x8, 0xA, 0x20, 0xA, 0x24
	.byte 0x15, 0x64, 0xBD, 0x9, 0x8
byte_809BD47: .byte 0x27, 0xFF, 0x8, 0x8, 0x7, 0x2, 0xFF, 0x1E, 0x12, 0x20, 0x7C
	.byte 0xBD, 0x9, 0x8, 0x12, 0x24, 0x8E, 0xBD, 0x9, 0x8, 0xA, 0x20
	.byte 0xA, 0x24, 0x15
	.word byte_809BD64
byte_809BD64: .byte 0x2A, 0xFF, 0x3A, 0x0, 0x2A, 0xFF, 0x28, 0x1, 0x3F, 0x18
	.byte 0x3F, 0x10, 0x3F, 0x4, 0x0
byte_809BD73: .byte 0x4D, 0x8C, 0x1, 0x4B, 0xC1, 0xBE, 0x9, 0x8, 0x11
byte_809BD7C: .byte 0x54, 0x1, 0x3F, 0x30, 0x47, 0x1, 0xFF, 0x10, 0x42, 0xFF
	.byte 0x10, 0x10, 0x0, 0x47, 0x1, 0xFF, 0x0, 0x11
byte_809BD8E: .byte 0x40, 0xC, 0xFF, 0x0, 0x2, 0xFF, 0x2, 0x40, 0xC, 0xFF, 0x4
	.byte 0x2, 0xFF, 0x2, 0x40, 0xC, 0xFF, 0x8, 0x2, 0xFF, 0x2, 0x40
	.byte 0xC, 0xFF, 0xC, 0x2, 0xFF, 0x2, 0x40, 0xC, 0xFF, 0x10, 0x2
	.byte 0xFF, 0x2, 0x3F, 0x30, 0x3F, 0x38, 0x11, 0x0, 0x0
	thumb_func_end sub_809BA14

	thumb_local_start
sub_809BDB8:
	push {r4-r7,lr}
	mov r0, #1
	mov r1, #0x28
	bl TestEventFlagFromImmediate
	beq loc_809BDC8
	mov r0, #3
	b loc_809BDE6
loc_809BDC8:
	ldr r4, off_809BE68 // =byte_809BE6C
	mov r2, r10
	ldr r2, [r2,#0x3c]
	ldrh r3, [r2,#0xc]
	ldrh r2, [r2,#4]
	mov r0, #0
loc_809BDD4:
	ldrh r1, [r4,#2]
	cmp r1, r2
	bne loc_809BDE0
	ldrh r1, [r4]
	cmp r1, r3
	beq loc_809BDE6
loc_809BDE0:
	add r4, #4
	add r0, #1
	b loc_809BDD4
loc_809BDE6:
	strb r0, [r5,#8]
	cmp r0, #0x10
	bge loc_809BE52
	mov r1, #0x70
	add r6, r5, r1
	ldr r7, off_809BE64 // =byte_809BA30
	mov r1, #0x14
	mul r1, r0
	add r7, r7, r1
	str r7, [r6,#0x1c]
	push {r5}
	mov r0, #0xc
	mov r1, #0
	ldrsh r1, [r7,r1]
	lsl r1, r1, #0x10
	str r1, [r6]
	mov r2, #2
	ldrsh r2, [r7,r2]
	lsl r2, r2, #0x10
	str r2, [r6,#4]
	mov r3, #4
	ldrsh r3, [r7,r3]
	lsl r3, r3, #0x10
	str r3, [r6,#8]
	ldrh r4, [r7,#6]
	lsr r4, r4, #1
	str r4, [r6,#0xc]
	bl SpawnOverworldMapObject
	mov r0, r5
	pop {r5}
	str r0, [r6,#0x10]
	ldrh r0, [r7,#0xe]
	str r0, [r6,#0x14]
	mov r0, #0
	str r0, [r5,#0x14]
	mov r0, #0
	mov r1, #0x38
	bl SetEventFlagFromImmediate
	mov r0, #0
	mov r1, #0x39
	bl SetEventFlagFromImmediate
	ldrh r0, [r7,#0x10]
	tst r0, r0
	beq loc_809BE4A
	mov r0, r0
	bl ClearEventFlag // (u16 entryFlagBitfield) -> void
loc_809BE4A:
	mov r0, #1
	mov r1, r6
	bl camera_80301B2
loc_809BE52:
	mov r3, r10
	ldr r3, [r3,#0x3c]
	ldr r0, [r3,#0x24]
	ldr r1, [r3,#0x28]
	ldr r2, [r3,#0x2c]
	bl owPlayer_indirectlySetPlayerCoordsMaybe_809e1a4
	mov r0, #0
	pop {r4-r7,pc}
off_809BE64: .word byte_809BA30
off_809BE68: .word byte_809BE6C
byte_809BE6C: .byte 0x3, 0x0, 0x1, 0x0, 0x4, 0x0, 0x1, 0x0, 0x5, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1
	.byte 0x0, 0x3, 0x0, 0x4, 0x0, 0x3, 0x0, 0x5, 0x0, 0x3, 0x0, 0x0, 0x0, 0x3, 0x0, 0x1, 0x0
	.byte 0x4, 0x0, 0x3, 0x0, 0x4, 0x0, 0x5, 0x0, 0x4, 0x0, 0x0, 0x0, 0x4, 0x0, 0x1, 0x0, 0x5
	.byte 0x0, 0x3, 0x0, 0x5, 0x0, 0x4, 0x0, 0x5, 0x0, 0x0, 0x0, 0x5, 0x0, 0x1, 0x0, 0x0, 0x0
	.byte 0x3, 0x0, 0x0, 0x0, 0x4, 0x0, 0x0, 0x0, 0x5, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	thumb_func_end sub_809BDB8

	thumb_local_start
sub_809BEC0:
	push {r4-r7,lr}
	mov r0, #0x70 
	add r6, r5, r0
	ldr r7, [r6,#0x1c]
	ldr r0, [r5,#0x14]
	add r0, #1
	str r0, [r5,#0x14]
	ldr r0, [r6,#0x14]
	sub r0, #1
	blt loc_809BED6
	str r0, [r6,#0x14]
loc_809BED6:
	ldr r3, [r5,#0x14]
	mov r4, #0
	ldrh r0, [r7,#8]
	cmp r3, r0
	blt loc_809BEF4
	mov r4, #1
	ldrh r0, [r7,#0xa]
	cmp r3, r0
	blt loc_809BEF4
	mov r4, #2
	ldrh r0, [r7,#0xc]
	cmp r3, r0
	blt loc_809BEF4
	mov r0, #0
	pop {r4-r7,pc}
loc_809BEF4:
	ldr r3, off_809BF00 // =byte_809BF04
	bl sub_809B9EC
	mov r0, #1
	pop {r4-r7,pc}
	.byte 0, 0
off_809BF00: .word byte_809BF04
byte_809BF04: .byte 0x8, 0x0, 0x4, 0x0, 0x2, 0x0, 0xFF, 0xFF, 0x0, 0x8, 0x0, 0x4, 0x0, 0x2, 0xFF
	.byte 0xFF, 0xF8, 0x0, 0xFC, 0x0, 0xFE, 0x0, 0xFF, 0xFF, 0x0, 0xF8, 0x0, 0xFC, 0x0, 0xFE
	.byte 0xFF, 0xFF
byte_809BF24: .byte 0x8C, 0x1, 0x0, 0x1, 0x0, 0x0, 0x60, 0xFF, 0x0, 0x0, 0xF2, 0xFF
	.byte 0x0, 0x0, 0x0, 0x0, 0x4, 0x10, 0x0, 0xFF, 0x6, 0xFF, 0x7B, 0x6
	.byte 0x84, 0x6, 0xFF, 0x0, 0x8C, 0xA, 0x0, 0x1, 0x0, 0x0, 0x60, 0xFF
	.byte 0x0, 0x0, 0xF2, 0xFF, 0x0, 0x0, 0x0, 0x0, 0x4, 0x10, 0x0, 0xFF
	.byte 0x8, 0xFF, 0x56, 0x8, 0x61, 0x8, 0xFF, 0x0, 0x8C, 0xF, 0x0, 0x1
	.byte 0x0, 0x0, 0x60, 0xFF, 0x0, 0x0, 0xF2, 0xFF, 0x0, 0x0, 0x0, 0x0
	.byte 0x4, 0x10, 0x0, 0xFF, 0x7, 0xFF, 0x44, 0xA, 0xBC, 0xA, 0xFF, 0x0
	.byte 0x8D, 0x0, 0x0, 0x1, 0x0, 0x0, 0x60, 0xFF, 0x0, 0x0, 0xF2, 0xFF
	.byte 0x0, 0x0, 0x0, 0x0, 0x4, 0x10, 0x0, 0xFF, 0x9, 0xFF, 0x6D, 0xC
	.byte 0xDE, 0xC, 0xFF, 0x0, 0x8D, 0x1, 0x0, 0x1, 0x0, 0x0, 0x60, 0xFF
	.byte 0x0, 0x0, 0xF2, 0xFF, 0x0, 0x0, 0x0, 0x0, 0x4, 0x10, 0x0, 0xFF
	.byte 0xA, 0xFF, 0xA7, 0xC, 0xE2, 0xC, 0xFF, 0x0
byte_809BFB0: .byte 0x3F, 0x0, 0x6, 0x29, 0xFF, 0x31, 0x17, 0x4B
	.word sub_809BFE8+1
	.byte 0x1C, 0x5, 0xFF, 0xCA, 0xBF, 0x9, 0x8, 0x3A, 0x5, 0x4, 0x80
	.byte 0x2, 0xFF, 0x14, 0x27, 0x6, 0xFF, 0xFF, 0x7, 0x2, 0xFF, 0x1E
	.byte 0x4B, 0x1D, 0xC0, 0x9, 0x8, 0x4C, 0x80, 0x0, 0x0, 0x0, 0x0
	.byte 0x0, 0x15, 0xE3, 0xBF, 0x9, 0x8, 0x3F, 0x4, 0x0, 0x0, 0x0
	thumb_func_end sub_809BEC0

	thumb_local_start
sub_809BFE8:
	push {r4-r7,lr}
	ldrb r1, [r5,#4]
	ldr r0, off_809C018 // =byte_809BF24
	mov r2, #0x1c
	mul r2, r1
	add r0, r0, r2
	str r0, [r5,#0x34]
	ldrb r1, [r0,#0x13]
	strb r1, [r5,#5]
	ldrb r1, [r0,#0x10]
	strb r1, [r5,#6]
	ldrb r1, [r0,#0x11]
	strb r1, [r5,#7]
	mov r2, r10
	ldr r2, [r2,#oToolkit_GameStatePtr]
	ldrb r1, [r0,#0x12]
	cmp r1, #0xff
	beq loc_809C012
	strb r1, [r2,#oGameState_Unk_16]
	mov r1, #0x10
	strb r1, [r2,#oGameState_Unk_17]
loc_809C012:
	mov r0, #0
	pop {r4-r7,pc}
	.balign 4, 0x00
off_809C018: .word byte_809BF24
	thumb_func_end sub_809BFE8

	thumb_local_start
sub_809C01C:
	push {r4-r7,lr}
	ldr r7, [r5,#0x34]
	ldrh r0, [r7,#0x16]
	mov r0, r0
	bl TestEventFlag // (u16 entryFlagBitfield) -> zf
	beq loc_809C042
	mov r0, #1
	mov r1, #0x20
	bl TestEventFlagFromImmediate
	beq loc_809C042
	mov r0, #0
	bl sub_8035364
	mov r3, r10
	ldr r3, [r3,#oToolkit_GameStatePtr]
	mov r0, #0x80
	strb r0, [r3,#oGameState_GameProgress]
loc_809C042:
	ldr r7, [r5,#0x34]
	ldrh r0, [r7,#0x18]
	tst r0, r0
	beq loc_809C050
	mov r0, r0
	bl ClearEventFlag // (u16 entryFlagBitfield) -> void
loc_809C050:
	bl sub_80010C6
	ldrb r0, [r7,#0x14]
	bl SetCurPETNavi
	bl sub_8120DF0
	bl sub_8033FDC
	mov r0, #0
	pop {r4-r7,pc}
	.balign 4, 0x00
	.byte 0x3F, 0x0, 0x6, 0x29, 0xFF, 0x31, 0x17, 0x2, 0xFF, 0x1E
	.byte 0x47, 0x0, 0xFF, 0x4, 0x40, 0x4, 0xFF, 0x4, 0x3E, 0xE0
	.byte 0xB9, 0x73, 0x8, 0x7, 0x53, 0x5, 0xFF, 0x2, 0xFF, 0x3E
	.byte 0x53, 0xFF, 0x1, 0x4B, 0x9D, 0xC0, 0x9, 0x8, 0x3A, 0x4
	.byte 0x4, 0x80, 0x2A, 0xFF, 0x3C, 0x17, 0x3F, 0x4, 0x0, 0x0
	.byte 0x0, 0x0
	thumb_func_end sub_809C01C

	thumb_local_start
sub_809C09C:
	push {r4-r7,lr}
	bl reqBBS_8140974
	mov r2, r0
	ldr r0, dword_809C0E4 // =0x1ca0 
	ldrb r1, [r5,#6]
	add r0, r0, r1
	add r0, r0, r2
	bl sub_802F238
	ldrb r0, [r5,#7]
	tst r0, r0
	beq loc_809C0DE
	bl reqBBS_8140974
	mov r2, r0
	ldr r0, dword_809C0E8 // =0x1d20 
	ldrb r1, [r5,#6]
	add r0, r0, r1
	add r0, r0, r2
	mov r0, r0
	bl ClearEventFlag // (u16 entryFlagBitfield) -> void
	bl reqBBS_8140974
	mov r2, r0
	ldr r0, dword_809C0EC // =0x1da0 
	ldrb r1, [r5,#6]
	add r0, r0, r1
	add r0, r0, r2
	mov r0, r0
	bl SetEventFlag
loc_809C0DE:
	mov r0, #0
	pop {r4-r7,pc}
	.balign 4, 0x00
dword_809C0E4: .word 0x1CA0
dword_809C0E8: .word 0x1D20
dword_809C0EC: .word 0x1DA0
off_809C0F0: .word dword_809C108
	.word off_809C140
off_809C0F8: .word off_809C174
	.word 0x0
	.word off_809C1DC
	.word off_809C2A8
dword_809C108: .word 0x0
	.word byte_809C110
byte_809C110: .byte 0x0, 0x0, 0xA8, 0xFF, 0x0, 0x0, 0xF8, 0xFE, 0x0, 0x0, 0x0, 0x0, 0x1
	.byte 0x1, 0x0, 0x0, 0x2A, 0x1, 0x0, 0x0, 0x8E, 0x1, 0x0, 0x0, 0x0, 0x0
	.byte 0xA8, 0xFF, 0x0, 0x0, 0x58, 0xFF, 0x0, 0x0, 0x0, 0x0, 0x3, 0x1, 0x0
	.byte 0x0, 0x2A, 0x1, 0x0, 0x0, 0x8E, 0x1, 0x0, 0x0
off_809C140: .word byte_809C144
byte_809C144: .byte 0x0, 0x0, 0x8A, 0xFF, 0x0, 0x0, 0x26, 0x1, 0x0, 0x0, 0x40, 0x0, 0x1
	.byte 0x0, 0x0, 0x0, 0x2B, 0x1, 0x0, 0x0, 0x8F, 0x1, 0x0, 0x0, 0x0, 0x0
	.byte 0x8A, 0xFF, 0x0, 0x0, 0x66, 0x1, 0x0, 0x0, 0x40, 0x0, 0x3, 0x0, 0x0
	.byte 0x0, 0x2B, 0x1, 0x0, 0x0, 0x8F, 0x1, 0x0, 0x0
off_809C174: .word byte_809C17C
	.word byte_809C1AC
byte_809C17C: .byte 0x0, 0x0, 0x90, 0xFF, 0x0, 0x0, 0xF0, 0xFE, 0x0, 0x0, 0x20, 0x0
	.byte 0x0, 0x0, 0x0, 0x0, 0x2C, 0x1, 0x0, 0x0, 0x90, 0x1, 0x0, 0x0
	.byte 0x0, 0x0, 0xD0, 0xFF, 0x0, 0x0, 0xF0, 0xFE, 0x0, 0x0, 0x20, 0x0
	.byte 0x2, 0x0, 0x0, 0x0, 0x2C, 0x1, 0x0, 0x0, 0x90, 0x1, 0x0, 0x0
byte_809C1AC: .byte 0x0, 0x0, 0x6A, 0xFE, 0x0, 0x0, 0x56, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	.byte 0x0, 0x0, 0x2D, 0x1, 0x0, 0x0, 0x91, 0x1, 0x0, 0x0, 0x0, 0x0, 0xAA, 0xFE
	.byte 0x0, 0x0, 0x56, 0x1, 0x0, 0x0, 0x0, 0x0, 0x2, 0x0, 0x0, 0x0, 0x2D, 0x1
	.byte 0x0, 0x0, 0x91, 0x1, 0x0, 0x0
off_809C1DC: .word byte_809C1E8
	.word byte_809C248
	.word off_809C278
byte_809C1E8: .byte 0x0, 0x0, 0x1E, 0xFF, 0x0, 0x0, 0xE0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x2
	.byte 0x0, 0x0, 0x2E, 0x1, 0x0, 0x0, 0x92, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1E, 0xFF
	.byte 0x0, 0x0, 0x60, 0x1, 0x0, 0x0, 0x0, 0x0, 0x3, 0x2, 0x0, 0x0, 0x2E, 0x1
	.byte 0x0, 0x0, 0x92, 0x1, 0x0, 0x0, 0x0, 0x0, 0x22, 0xFE, 0x0, 0x0, 0xBC, 0x0
	.byte 0x0, 0x0, 0x20, 0x0, 0x0, 0x1, 0x0, 0x0, 0x2F, 0x1, 0x0, 0x0, 0x93, 0x1
	.byte 0x0, 0x0, 0x0, 0x0, 0x82, 0xFE, 0x0, 0x0, 0xBC, 0x0, 0x0, 0x0, 0x20, 0x0
	.byte 0x2, 0x1, 0x0, 0x0, 0x2F, 0x1, 0x0, 0x0, 0x93, 0x1, 0x0, 0x0
byte_809C248: .byte 0x0, 0x0, 0x68, 0xFF, 0x0, 0x0, 0xF8, 0xFE, 0x0, 0x0, 0x40, 0x0
	.byte 0x0, 0x0, 0x0, 0x0, 0x30, 0x1, 0x0, 0x0, 0x94, 0x1, 0x0, 0x0
	.byte 0x0, 0x0, 0xA8, 0xFF, 0x0, 0x0, 0xF8, 0xFE, 0x0, 0x0, 0x40, 0x0
	.byte 0x2, 0x0, 0x0, 0x0, 0x30, 0x1, 0x0, 0x0, 0x94, 0x1, 0x0, 0x0
off_809C278: .word unk_2020000
	.byte 0x0, 0x0, 0xDE, 0xFE, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x31, 0x1
	.byte 0x0, 0x0, 0x95, 0x1, 0x0, 0x0, 0x0, 0x0, 0x2, 0x2, 0x0, 0x0, 0x1E, 0xFF
	.byte 0x0, 0x0, 0x0, 0x0, 0x3, 0x0, 0x0, 0x0, 0x31, 0x1, 0x0, 0x0, 0x95, 0x1
	.byte 0x0, 0x0
off_809C2A8: .word byte_809C2AC
byte_809C2AC: .byte 0x0, 0x0, 0xA, 0x0, 0x0, 0x0, 0x56, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	.byte 0x32, 0x1, 0x0, 0x0, 0x96, 0x1, 0x0, 0x0, 0x0, 0x0, 0x4A, 0x0, 0x0, 0x0, 0x56, 0x1
	.byte 0x0, 0x0, 0x0, 0x0, 0x2, 0x0, 0x0, 0x0, 0x32, 0x1, 0x0, 0x0, 0x96, 0x1, 0x0, 0x0
	.byte 0x4, 0x40, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x8, 0x4, 0x60, 0x0, 0x0, 0x1, 0x0
	.byte 0x0, 0x0, 0x0, 0x8, 0x4, 0x80, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x8, 0x4, 0x40
	.byte 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x8, 0x4, 0x60, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0
	.byte 0x0, 0x8, 0x4, 0x80, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x8, 0x4, 0x40, 0x0, 0x0
	.byte 0xFF, 0x0, 0x0, 0x0, 0x0, 0x8, 0x4, 0x60, 0x0, 0x0, 0xFF, 0x0, 0x0, 0x0, 0x0, 0x8
	.byte 0x4, 0x80, 0x0, 0x0, 0xFF, 0x0, 0x0, 0x0, 0x0, 0x8, 0x4, 0x40, 0x0, 0x0, 0x0, 0x0
	.byte 0xFF, 0x0, 0x0, 0x8, 0x4, 0x60, 0x0, 0x0, 0x0, 0x0, 0xFF, 0x0, 0x0, 0x8, 0x4, 0x80
	.byte 0x0, 0x0, 0x0, 0x0, 0xFF, 0x0, 0x0, 0x8
byte_809C354: .byte 0x14, 0x0, 0x0, 0x0, 0x0, 0x3F, 0x0, 0x6, 0x3F, 0x1C, 0x2, 0xFF
	.byte 0x1, 0x3E, 0xE0, 0xB9, 0x73, 0x8, 0x2, 0xFF, 0x1, 0x19, 0xFF, 0xBB
	.byte 0x1, 0x7E, 0xC3, 0x9, 0x8, 0x3A, 0xFF, 0x1E, 0x4, 0x80, 0x2, 0xFF
	.byte 0x1, 0x3F, 0x18, 0x3F, 0x4, 0x0, 0x2, 0xFF, 0x8, 0x27, 0xFF, 0xC
	.byte 0x8, 0x7, 0x4A, 0x5, 0x4B, 0xA1, 0xC7, 0x9, 0x8, 0x4B, 0xFD, 0xC7
	.byte 0x9, 0x8, 0x4B, 0x15, 0xC8, 0x9, 0x8, 0x4B
	.word sub_809C830+1
	.byte 0x2, 0xFF, 0x1E, 0x27, 0xFF, 0x8, 0x8, 0x7, 0x2, 0xFF, 0x1E
	.byte 0x3A, 0xFF, 0x41, 0x4, 0x80, 0x2, 0xFF, 0x1E, 0x1C, 0x5, 0x0
	.byte 0x3, 0xC4, 0x9, 0x8, 0x1C, 0x5, 0x1, 0xE, 0xC4, 0x9, 0x8
	.byte 0x1C, 0x5, 0x2
	.word byte_809C419
	.byte 0x1C, 0x5, 0x3, 0x24, 0xC4, 0x9, 0x8, 0x1C, 0x5, 0x4, 0x2F, 0xC4
	.byte 0x9, 0x8, 0x1C, 0x5, 0x5, 0x3A, 0xC4, 0x9, 0x8, 0x1C, 0x5, 0x6
	.word byte_809C445
	.byte 0x1C, 0x5, 0x7, 0x50, 0xC4, 0x9, 0x8, 0x1C, 0x5, 0x8, 0x5B, 0xC4
	.byte 0x9, 0x8, 0x1C, 0x5, 0x9, 0x66, 0xC4, 0x9, 0x8, 0x1C, 0x5, 0xA
	.word byte_809C471
	.byte 0x1C, 0x5, 0xB, 0x7C, 0xC4, 0x9, 0x8, 0x12, 0x20, 0xAA, 0xC4
	.byte 0x9, 0x8, 0x15, 0x82, 0xC4, 0x9, 0x8, 0x12, 0x20
	.word byte_809C4CF
	.byte 0x15, 0x82, 0xC4, 0x9, 0x8
byte_809C419: .byte 0x12, 0x20, 0xE, 0xC5, 0x9, 0x8, 0x15
	.word byte_809C482
	.byte 0x12, 0x20, 0x67, 0xC5, 0x9, 0x8, 0x15, 0x82, 0xC4, 0x9
	.byte 0x8, 0x12, 0x20, 0x8C, 0xC5, 0x9, 0x8, 0x15, 0x82, 0xC4
	.byte 0x9, 0x8, 0x12, 0x20
	.word byte_809C5CB
	.byte 0x15, 0x82, 0xC4, 0x9, 0x8
byte_809C445: .byte 0x12, 0x20, 0x24, 0xC6, 0x9, 0x8, 0x15
	.word byte_809C482
	.byte 0x12, 0x20, 0x49, 0xC6, 0x9, 0x8, 0x15, 0x82, 0xC4, 0x9
	.byte 0x8, 0x12, 0x20, 0x88, 0xC6, 0x9, 0x8, 0x15, 0x82, 0xC4
	.byte 0x9, 0x8, 0x12, 0x20
	.word byte_809C6E1
	.byte 0x15, 0x82, 0xC4, 0x9, 0x8
byte_809C471: .byte 0x12, 0x20, 0x6, 0xC7, 0x9, 0x8, 0x15
	.word byte_809C482
	.byte 0x12, 0x20, 0x45, 0xC7, 0x9, 0x8
byte_809C482: .byte 0xA, 0x20, 0x2, 0xFF, 0x1E, 0x27, 0xFF, 0xC, 0x8, 0x7, 0x4B
	.byte 0x55, 0xC9, 0x9, 0x8, 0x4A, 0x3, 0x13, 0x20, 0x49, 0x40, 0x52
	.byte 0x1, 0x2C, 0x1, 0x2, 0xFF, 0x1E, 0x27, 0xFF, 0x8, 0x8, 0x7
	.byte 0x54, 0x1, 0x3F, 0x18, 0x3F, 0x4, 0x0, 0x49, 0x0, 0x27, 0x0
	.byte 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x49, 0x1
	.byte 0x28, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	.byte 0x9, 0x8, 0x1, 0x2, 0xFF, 0x1, 0x40, 0x4, 0xFF, 0x1, 0x11
byte_809C4CF: .byte 0x49, 0x0, 0x27, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x49
	.byte 0x1, 0x28, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x49, 0x2
	.byte 0x27, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x49, 0x3, 0x28
	.byte 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x9, 0x8, 0x1, 0x2
	.byte 0xFF, 0x1, 0x40, 0x4, 0xFF, 0x1, 0x11, 0x49, 0x0, 0x27, 0x0, 0x0, 0x0, 0x0
	.byte 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x49, 0x1, 0x28, 0x0, 0x0, 0x0, 0x0, 0x0
	.byte 0x0, 0x0, 0x0, 0x0, 0x0, 0x49, 0x2, 0x27, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	.byte 0x1, 0x0, 0x0, 0x0, 0x49, 0x3, 0x28, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1
	.byte 0x0, 0x0, 0x0, 0x49, 0x4, 0x27, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2, 0x0
	.byte 0x0, 0x0, 0x49, 0x5, 0x28, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2, 0x0, 0x0
	.byte 0x0, 0x9, 0x8, 0x1, 0x2, 0xFF, 0x1, 0x40, 0x4, 0xFF, 0x1, 0x11, 0x49, 0x0
	.byte 0x27, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x49, 0x1, 0x28
	.byte 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x9, 0x8, 0x1, 0x2
	.byte 0xFF, 0x1, 0x40, 0x4, 0xFF, 0x3, 0x11, 0x49, 0x0, 0x27, 0x0, 0x0, 0x0, 0x0
	.byte 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x49, 0x1, 0x28, 0x0, 0x0, 0x0, 0x0, 0x0
	.byte 0x0, 0x0, 0x0, 0x0, 0x0, 0x49, 0x2, 0x27, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	.byte 0x1, 0x1, 0x0, 0x0, 0x49, 0x3, 0x28, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1
	.byte 0x0, 0x0, 0x0, 0x9, 0x8, 0x1, 0x2, 0xFF, 0x1, 0x40, 0x4, 0xFF, 0x3, 0x11
byte_809C5CB:.byte 0x49, 0x0, 0x27, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x49
	.byte 0x1, 0x28, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x49, 0x2
	.byte 0x27, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x49, 0x3,0x28
	.byte  0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x49, 0x4, 0x27, 0x0
	.byte 0x0, 0x0, 0x0, 0x0, 0x0, 0x2, 0x1, 0x0, 0x0, 0x49, 0x5, 0x28, 0x0, 0x0
	.byte 0x0, 0x0, 0x0, 0x0, 0x2, 0x0, 0x0, 0x0, 0x9, 0x8, 0x1, 0x2, 0xFF, 0x1
	.byte 0x40, 0x4, 0xFF, 0x3, 0x11, 0x49, 0x0, 0x27, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	.byte 0x0, 0x0, 0x0, 0x0, 0x49, 0x1, 0x28, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	.byte 0x0
	.word off_8090000
	.byte 0x1, 0x2, 0xFF, 0x1, 0x40, 0x4, 0xFF, 0x5, 0x11, 0x49, 0x0, 0x27
	.byte 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x49, 0x1
	.byte 0x28, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x49
	.byte 0x2, 0x27, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0
	.byte 0x49, 0x3, 0x28, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0
	.byte 0x0, 0x9, 0x8, 0x1, 0x2, 0xFF, 0x1, 0x40, 0x4, 0xFF, 0x5, 0x11
	.byte 0x49, 0x0, 0x27, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	.byte 0x0, 0x49, 0x1, 0x28, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	.byte 0x0, 0x0, 0x49, 0x2, 0x27, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1
	.byte 0x0, 0x0, 0x0, 0x49, 0x3, 0x28, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	.byte 0x1, 0x0, 0x0, 0x0, 0x49, 0x4, 0x27, 0x0, 0x0, 0x0, 0x0, 0x0
	.byte 0x0, 0x2, 0x0, 0x0, 0x0, 0x49, 0x5, 0x28, 0x0, 0x0, 0x0, 0x0
	.byte 0x0, 0x0, 0x2, 0x0, 0x0, 0x0, 0x9, 0x8, 0x1, 0x2, 0xFF, 0x1
	.byte 0x40, 0x4, 0xFF, 0x5, 0x11
byte_809C6E1: .byte 0x49, 0x0, 0x27, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x49
	.byte 0x1, 0x28, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x9, 0x8
	.byte 0x1, 0x2, 0xFF, 0x1, 0x40, 0x4, 0xFF, 0x7, 0x11, 0x49, 0x0, 0x27, 0x0, 0x0
	.byte 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x49, 0x1, 0x28, 0x0, 0x0, 0x0
	.byte 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x49, 0x2, 0x27, 0x0, 0x0, 0x0, 0x0
	.byte 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x49, 0x3, 0x28, 0x0, 0x0, 0x0, 0x0, 0x0
	.byte 0x0, 0x1, 0x0, 0x0, 0x0, 0x9, 0x8, 0x1, 0x2, 0xFF, 0x1, 0x40, 0x4, 0xFF
	.byte 0x7, 0x11, 0x49, 0x0, 0x27, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0
	.byte 0x0, 0x49, 0x1, 0x28, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	.byte 0x49, 0x2, 0x27, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x49
	.byte 0x3, 0x28, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x49, 0x4
	.byte 0x27, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2, 0x1, 0x0, 0x0, 0x49, 0x5, 0x28
	.byte 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2, 0x0, 0x0, 0x0, 0x9, 0x8, 0x1, 0x2
	.byte 0xFF, 0x1, 0x40, 0x4, 0xFF, 0x7, 0x11, 0x0, 0x0
	thumb_func_end sub_809C09C

	thumb_local_start
sub_809C7A0:
	push {r4-r7,lr}
	ldr r0, [r5,#4]
	str r0, [r5,#0x70]
	ldr r1, off_809C7F8 // =byte_20065E0
	mov r2, #0
	strb r2, [r1]
	mov r2, #0
	ldr r2, [r0,r2]
	lsr r2, r2, #0x10
	lsl r2, r2, #4
	mov r3, #0x1 // (byte_20065E1 - 0x20065e0)
	strb r2, [r1,r3]
	lsr r2, r2, #8
	add r3, #1
	strb r2, [r1,r3]
	mov r2, #4
	ldr r2, [r0,r2]
	lsr r2, r2, #0x10
	lsl r2, r2, #4
	mov r3, #0x3 // (byte_20065E3 - 0x20065e0)
	strb r2, [r1,r3]
	lsr r2, r2, #8
	add r3, #1
	strb r2, [r1,r3]
	mov r2, #8
	ldr r2, [r0,r2]
	lsr r2, r2, #0x10
	lsl r2, r2, #4
	mov r3, #0x5 // (byte_20065E5 - 0x20065e0)
	strb r2, [r1,r3]
	lsr r2, r2, #8
	add r3, #1
	strb r2, [r1,r3]
	mov r2, #8
	strb r2, [r1,#0x7] // (byte_20065E7 - 0x20065e0)
	mov r2, #1
	strb r2, [r5,#0x13]
	str r1, [r5,#0x3c]
	mov r0, r1
	bl cutsceneCamera_setCutsceneCameraScript_8036f98
	mov r0, #0
	pop {r4-r7,pc}
	.balign 4, 0x00
off_809C7F8: .word byte_20065E0
	thumb_func_end sub_809C7A0

	thumb_local_start
sub_809C7FC:
	push {r4-r7,lr}
	ldr r3, [r5,#0x70]
	mov r0, #0
	ldr r0, [r3,r0]
	mov r1, #4
	ldr r1, [r3,r1]
	mov r2, #8
	ldr r2, [r3,r2]
	bl owPlayer_indirectlySetPlayerCoordsMaybe_809e188
	mov r0, #0
	pop {r4-r7,pc}
	thumb_func_end sub_809C7FC

	thumb_local_start
sub_809C814:
	push {r4-r7,lr}
	ldr r3, [r5,#0x70]
	mov r0, #0xc
	ldrb r0, [r3,r0]
	ldr r1, off_809C828 // =dword_809C82C
	ldrb r0, [r1,r0]
	bl owPlayer_setS200ace0_fixedAnimationSelect_809e13c
	mov r0, #0
	pop {r4-r7,pc}
off_809C828: .word dword_809C82C
dword_809C82C: .word 0x7050301
	thumb_func_end sub_809C814

	thumb_local_start
sub_809C830:
	push {r4-r7,lr}
	ldr r3, [r5,#0x70]
	mov r0, #0xc
	ldrb r0, [r3,r0]
	lsl r0, r0, #2
	mov r1, #0xd
	ldrb r1, [r3,r1]
	ldr r2, off_809C84C // =off_809C850
	ldr r2, [r2,r0]
	ldrb r0, [r2,r1]
	strb r0, [r5,#5]
	mov r0, #0
	pop {r4-r7,pc}
	.balign 4, 0x00
off_809C84C: .word off_809C850
off_809C850: .word dword_809C860
	.word dword_809C864
	.word dword_809C868
	.word dword_809C86C
dword_809C860: .word 0x20100
dword_809C864: .word 0x50403
dword_809C868: .word 0x80706
dword_809C86C: .word 0xB0A09
	thumb_func_end sub_809C830

	thumb_local_start
sub_809C870:
	push {lr}
	ldrb r0, [r5,#5]
	ldr r1, off_809C880 // =byte_809C884
	ldrb r0, [r1,r0]
	strb r0, [r5,#6]
	mov r0, #0
	pop {pc}
	.balign 4, 0x00
off_809C880: .word byte_809C884
byte_809C884: .byte 0x1, 0x1, 0x1, 0x3, 0x3, 0x3, 0x5, 0x5, 0x5, 0x7, 0x7, 0x7
	thumb_func_end sub_809C870

	thumb_func_start sub_809C890
sub_809C890:
	push {r4-r7,lr}
	bl sub_809E1BC
	lsr r1, r1, #0x10
	lsr r2, r2, #0x10
	lsr r3, r3, #0x10
	ldr r0, off_809C93C // =eCutsceneState 
	ldr r0, [r0,#0x70] // (dword_2011CC0 - 0x2011c50)
	ldrb r0, [r0,#0xc]
	lsl r0, r0, #2
	ldrb r4, [r5,#4]
	lsl r4, r4, #3
	ldr r6, off_809C8C8 // =off_809C8CC
	ldr r0, [r6,r0]
	add r0, r0, r4
	ldrh r4, [r0]
	add r1, r1, r4
	lsl r1, r1, #0x10
	add r0, #2
	ldrh r4, [r0]
	add r2, r2, r4
	lsl r2, r2, #0x10
	add r0, #2
	ldrh r4, [r0]
	add r3, r3, r4
	lsl r3, r3, #0x10
	mov r0, #0
	pop {r4-r7,pc}
off_809C8C8: .word off_809C8CC
off_809C8CC: .word byte_809C8DC
	.word byte_809C8F4
	.word byte_809C90C
	.word byte_809C924
byte_809C8DC: .byte 0x20, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x40, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	.byte 0x0, 0x60, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
byte_809C8F4: .byte 0x0, 0x0, 0x20, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x40, 0x0, 0x0, 0x0, 0x0
	.byte 0x0, 0x0, 0x0, 0x60, 0x0, 0x0, 0x0, 0x0, 0x0
byte_809C90C: .byte 0xE0, 0xFF, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xC0, 0xFF, 0x0, 0x0, 0x0
	.byte 0x0, 0x0, 0x0, 0xA0, 0xFF, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
byte_809C924: .byte 0x0, 0x0, 0xE0, 0xFF, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xC0, 0xFF, 0x0
	.byte 0x0, 0x0, 0x0, 0x0, 0x0, 0xA0, 0xFF, 0x0, 0x0, 0x0, 0x0
off_809C93C: .word eCutsceneState
	thumb_func_end sub_809C890

	thumb_func_start sub_809C940
sub_809C940:
	push {r4-r7,lr}
	ldr r0, off_809C950 // =eCutsceneState 
	ldr r0, [r0,#0x70] // (dword_2011CC0 - 0x2011c50)
	ldr r0, [r0,#0x14]
	mov r0, r0
	bl ClearEventFlag // (u16 entryFlagBitfield) -> void
	pop {r4-r7,pc}
off_809C950: .word eCutsceneState
	thumb_func_end sub_809C940

	thumb_local_start
sub_809C954:
	push {r4-r7,lr}
	ldr r0, [r5,#0x70]
	mov r1, #0x10
	ldr r0, [r0,r1]
	mov r0, r0
	bl SetEventFlag
	mov r0, #0
	pop {r4-r7,pc}
	.balign 4, 0x00
	thumb_func_end sub_809C954

	thumb_func_start sub_809C968
sub_809C968:
	push {r4-r7,lr}
	bl sub_8034C36
	beq loc_809CA26
	mov r0, #2
	mov r1, #0x24
	bl TestEventFlagFromImmediate
	beq loc_809CA26
	mov r0, #1
	mov r1, #0xb9
	bl TestEventFlagFromImmediate
	bne loc_809C9B6
	mov r7, r10
	ldr r7, [r7,#oToolkit_GameStatePtr]
	ldrb r6, [r7,#oGameState_MapGroup]
	cmp r6, #0x80
	blt loc_809CA26
	bl IsCutsceneScriptNonNull // () -> zf
	bne loc_809CA26
	mov r7, r10
	ldr r7, [r7,#oToolkit_GameStatePtr]
	ldrb r0, [r7,#oGameState_Unk_0e]
	tst r0, r0
	beq loc_809CA26
	cmp r0, #0x30 
	blt loc_809CA26
	cmp r0, #0x33 
	bgt loc_809CA26
	ldr r1, off_809CABC // =eOWPlayerObject 
	mov r2, #0x83 // (byte_2009FC3 - 0x2009f40)
	strb r0, [r1,r2]
	mov r0, #1
	mov r1, #0xb9
	bl SetEventFlagFromImmediate
	b locret_809CA1E
loc_809C9B6:
	mov r0, #1
	mov r1, #0xba
	bl TestEventFlagFromImmediate
	bne loc_809C9CA
	mov r0, #1
	mov r1, #0xba
	bl SetEventFlagFromImmediate
	b locret_809CA1E
loc_809C9CA:
	mov r3, r10
	ldr r3, [r3,#oToolkit_GameStatePtr]
	ldrb r0, [r3,#oGameState_Unk_0e]
	tst r0, r0
	bne loc_809CA26
	ldr r0, off_809CAC0 // =eOWPlayerObject 
	mov r1, #0x83 // (byte_2009FC3 - 0x2009f40)
	ldrb r0, [r0,r1]
	mov r7, r10
	ldr r7, [r7,#oToolkit_GameStatePtr]
	ldrb r6, [r7,#oGameState_MapGroup]
	ldrb r4, [r7,#oGameState_MapNumber]
	sub r6, #0x90
	lsl r6, r6, #2
	lsl r4, r4, #2
	ldr r1, off_809CA38 // =off_809C0F0 
	ldr r1, [r1,r6]
	ldr r1, [r1,r4]
	tst r1, r1
	beq loc_809CA26
	mov r2, #0x18
	sub r0, #0x30 
	mul r0, r2
	add r0, r0, r1
	mov r4, r0
	ldr r0, [r4,#0x10]
	mov r0, r0
	bl TestEventFlag // (u16 entryFlagBitfield) -> zf
	bne loc_809CA26
	mov r0, #0x2c 
	bl sub_803CE28
	ldrb r1, [r4,#0xd]
	add r1, #1
	cmp r0, r1
	blt loc_809CA20
	ldr r0, off_809CA3C // =byte_809C354
	mov r1, r4
	bl init_s_02011C50_8036E90
	b loc_809CA26
locret_809CA1E:
	pop {r4-r7,pc}
loc_809CA20:
	mov r0, #SOUND_CANT_JACK_IN
	bl PlaySoundEffect
loc_809CA26:
	mov r0, #1
	mov r1, #0xba
	bl ClearEventFlagFromImmediate
	mov r0, #1
	mov r1, #0xb9
	bl ClearEventFlagFromImmediate
	pop {r4-r7,pc}
off_809CA38: .word off_809C0F0
off_809CA3C: .word byte_809C354
	thumb_func_end sub_809C968

	thumb_func_start sub_809CA40
sub_809CA40:
	push {r4-r7,lr}
	cmp r0, #0x30 
	blt loc_809CA7A
	cmp r0, #0x33 
	bgt loc_809CA7A
	mov r7, r10
	ldr r7, [r7,#oToolkit_GameStatePtr]
	ldrb r6, [r7,#oGameState_MapGroup]
	ldrb r4, [r7,#oGameState_MapNumber]
	sub r6, #0x90
	lsl r6, r6, #2
	lsl r4, r4, #2
	ldr r1, off_809CA80 // =off_809C0F0 
	ldr r1, [r1,r6]
	ldr r1, [r1,r4]
	tst r1, r1
	beq loc_809CA7A
	mov r2, #0x18
	sub r0, #0x30 
	mul r0, r2
	add r0, r0, r1
	mov r4, r0
	ldr r0, [r4,#0x10]
	mov r0, r0
	bl TestEventFlag // (u16 entryFlagBitfield) -> zf
	beq loc_809CA7A
	mov r0, #1
	pop {r4-r7,pc}
loc_809CA7A:
	mov r0, #0
	pop {r4-r7,pc}
	.byte 0, 0
off_809CA80: .word off_809C0F0
	thumb_func_end sub_809CA40

	thumb_func_start sub_809CA84
sub_809CA84:
	push {r4-r7,lr}
	ldr r0, off_809CAC4 // =eOWPlayerObject 
	mov r1, #0x83 // (byte_2009FC3 - 0x2009f40)
	ldrb r0, [r0,r1]
	mov r7, r10
	ldr r7, [r7,#oToolkit_GameStatePtr]
	ldrb r6, [r7,#oGameState_MapGroup]
	ldrb r4, [r7,#oGameState_MapNumber]
	sub r6, #0x90
	lsl r6, r6, #2
	lsl r4, r4, #2
	ldr r1, off_809CAB8 // =off_809C0F0 
	ldr r1, [r1,r6]
	ldr r1, [r1,r4]
	tst r1, r1
	beq loc_809CAB2
	mov r2, #0x18
	sub r0, #0x30 
	mul r0, r2
	add r0, r0, r1
	ldrb r0, [r0,#0xd]
	add r0, #1
	pop {r4-r7,pc}
loc_809CAB2:
	mov r0, #0
	pop {r4-r7,pc}
	.balign 4, 0x00
off_809CAB8: .word off_809C0F0
off_809CABC: .word eOWPlayerObject
off_809CAC0: .word eOWPlayerObject
off_809CAC4: .word eOWPlayerObject
	.byte 0x16, 0x0, 0x0, 0x5, 0x16, 0x1, 0x1, 0x5, 0x16, 0x2, 0x2, 0x5, 0xFF
	.byte 0xFF, 0xFF, 0xFF
byte_809CAD8: .byte 0x3F, 0x0, 0x6, 0x29, 0xFF, 0x31, 0x17, 0x47, 0x1, 0xFF
	.byte 0x0, 0x4B
	.word sub_809CB68+1
	.byte 0x4B, 0x89, 0xCB, 0x9, 0x8, 0x1C, 0x8, 0x1
	.word byte_809CB0D
	.byte 0x1C, 0x8, 0x2, 0x3, 0xCB, 0x9, 0x8, 0x17, 0xFF, 0x63, 0x1, 0x49
	.byte 0xCB, 0x9, 0x8, 0x4, 0x80, 0x4B, 0x45, 0xCD, 0x9, 0x8, 0x3F, 0x4
	.byte 0x0
byte_809CB0D: .byte 0x4B, 0x1, 0xCC, 0x9, 0x8, 0x2, 0xFF, 0x1, 0x1C, 0x8, 0x1
	.word byte_809CB28
byte_809CB1C: .byte 0x4B, 0x35, 0xCD, 0x9, 0x8, 0x4, 0x88, 0x15
	.word byte_809CB40
byte_809CB28: .byte 0x4B, 0x61, 0xCC, 0x9, 0x8, 0x1C, 0x8, 0x0
	.word byte_809CB1C
	.byte 0x4, 0x88, 0x4B, 0xD5, 0xCD, 0x9, 0x8, 0x2, 0xFF, 0x1, 0x4, 0x88
byte_809CB40: .byte 0x3B, 0x4B, 0x45, 0xCD, 0x9, 0x8, 0x3F, 0x4, 0x0, 0x4B, 0xC5
	.byte 0xCD, 0x9, 0x8, 0x4B, 0x61, 0xCD, 0x9, 0x8, 0x2, 0xFF, 0x1
	.byte 0x4, 0x88, 0x4B, 0xD5, 0xCD, 0x9, 0x8, 0x2, 0xFF, 0x1, 0x4
	.byte 0x88, 0x15, 0x40, 0xCB, 0x9, 0x8, 0x0
	thumb_func_end sub_809CA84

	thumb_local_start
sub_809CB68:
	push {r4-r7,lr}
	mov r0, #0
	bl sub_8033FC0
	bl sub_8003984
	bl sub_8003AD4
	ldr r0, byte_809CEAC+4 // =0x4
	mov r1, #0x1e
	bl chatbox_runScript // (void *scripts, u8 scriptOffIdx) -> void
	mov r0, #0
	strb r0, [r5,#8]
	str r0, [r5,#0x70]
	pop {r4-r7,pc}
	thumb_func_end sub_809CB68

	thumb_local_start
sub_809CB88:
	push {r4-r7,lr}
	mov r0, #8
	bl chatbox_check_eFlags2009F38
	beq loc_809CBF6
	ldr r0, dword_809CBFC // =0x100
	bl chatbox_check_eFlags2009F38
	beq loc_809CBAA
	ldr r0, byte_809CEAC+4 // =0x4
	mov r1, #0x20
	bl chatbox_runScript // (void *scripts, u8 scriptOffIdx) -> void
	mov r0, #2
	str r0, [r5,#8]
	mov r0, #0
	pop {r4-r7,pc}
loc_809CBAA:
	bl chatbox_8045F4C
	cmp r0, #0
	bne loc_809CBDC
	movflag EVENT_163
	bl TestEventFlagFromImmediate
	beq loc_809CBCC
	bl sub_80010C6
	mov r0, #0
	bl SetCurPETNavi
	mov r0, #0
	str r0, [r5,#0x70]
	b loc_809CBE8
loc_809CBCC:
	ldr r0, byte_809CEAC+4 // =0x4
	mov r1, #0x1f
	bl chatbox_runScript // (void *scripts, u8 scriptOffIdx) -> void
	mov r0, #1
	str r0, [r5,#8]
	mov r0, #0
	pop {r4-r7,pc}
loc_809CBDC:
	movflag EVENT_163
	bl TestEventFlagFromImmediate
	beq loc_809CBE8
	b loc_809CBCC
loc_809CBE8:
	ldr r0, byte_809CEAC+4 // =0x4
	mov r1, #0x20
	bl chatbox_runScript // (void *scripts, u8 scriptOffIdx) -> void
	mov r0, #0
	str r0, [r5,#8]
	pop {r4-r7,pc}
loc_809CBF6:
	mov r0, #1
	pop {r4-r7,pc}
	.balign 4, 0x00
dword_809CBFC: .word 0x100
	thumb_func_end sub_809CB88

	thumb_local_start
sub_809CC00:
	push {r4-r7,lr}
	ldr r0, [r5,#0x70]
	tst r0, r0
	bne loc_809CC1C
	mov r0, #1
	str r0, [r5,#0x70]
	bl clear_e200AD04 // () -> void
	mov r0, #0
	bl sub_803F6B0
	bl loc_803F512
	b loc_809CC56
loc_809CC1C:
	mov r6, #0
	mov r4, #1
	mov r7, r12
	bl sub_803F560
	mov r12, r7
	beq loc_809CC3E
	mov r6, #1
	mov r4, #0
	ldr r1, off_809CC5C // =word_200AD04
	ldrh r0, [r1,#0x2] // (word_200AD06 - 0x200ad04)
	tst r0, r0
	beq loc_809CC3C
	sub r0, #1
	strh r0, [r1,#0x2] // (word_200AD06 - 0x200ad04)
	b loc_809CC56
loc_809CC3C:
	mov r6, #0
loc_809CC3E:
	mov r0, r4
	bl sub_803F4EC
	strb r4, [r5,#8]
	tst r4, r4
	beq loc_809CC52
	ldr r0, byte_809CEAC+4 // =0x4
	mov r1, #0x22
	bl chatbox_runScript // (void *scripts, u8 scriptOffIdx) -> void
loc_809CC52:
	mov r0, #0
	b locret_809CC58
loc_809CC56:
	mov r0, #1
locret_809CC58:
	pop {r4-r7,pc}
	.balign 4, 0x00
off_809CC5C: .word word_200AD04
	thumb_func_end sub_809CC00

	thumb_local_start
sub_809CC60:
	push {r4-r7,lr}
	bl sub_809CE14
	beq loc_809CC70
	mov r0, #0
	strb r0, [r5,#8]
	mov r0, #0
	b locret_809CCF2
loc_809CC70:
	mov r0, #8
	bl chatbox_check_eFlags2009F38
	beq loc_809CCF0
	ldr r0, [r5,#0x74]
	mov r4, #0
	ldr r2, off_809CCF4 // =byte_809CCF8
loc_809CC7E:
	ldr r3, [r2,r4]
	cmp r0, r3
	blt loc_809CCC0
	add r3, #0xf
	cmp r0, r3
	bge loc_809CCC0
	mov r1, r10
	ldr r1, [r1,#0x40]
	ldr r0, [r5,#0x74]
	str r0, [r1,#0x30]
	ldr r0, off_809CD14 // =byte_809CD18
	ldr r0, [r0,r4]
	str r0, [r5,#0x78]
	movflag EVENT_163
	bl SetEventFlagFromImmediate
	bl sub_80010C6
	mov r2, r10
	ldr r2, [r2,#0x2c]
	ldr r0, [r5,#0x78]
	str r0, [r2,#0x4c]
	bl SetCurPETNavi
	mov r0, #0x8d
	bl PlaySoundEffect
	ldr r0, byte_809CEAC+4 // =0x4
	mov r1, #0x23
	bl chatbox_runScript // (void *scripts, u8 scriptOffIdx) -> void
	b loc_809CCE4
loc_809CCC0:
	add r4, #4
	cmp r4, #0x1c
	blt loc_809CC7E
	mov r0, r10
	ldr r0, [r0,#4]
	ldrh r0, [r0,#2]
	mov r1, #2
	tst r0, r1
	beq loc_809CCF0
	mov r0, #SOUND_UNSELECT_68
	bl PlaySoundEffect
	bl sub_80010C6
	ldr r0, byte_809CEAC+4 // =0x4
	mov r1, #0x20
	bl chatbox_runScript // (void *scripts, u8 scriptOffIdx) -> void
loc_809CCE4:
	bl sub_81440D8 // static () -> void
	mov r0, #1
	strb r0, [r5,#8]
	mov r0, #0
	b locret_809CCF2
loc_809CCF0:
	mov r0, #1
locret_809CCF2:
	pop {r4-r7,pc}
off_809CCF4: .word byte_809CCF8
byte_809CCF8: .byte 0x41, 0x1, 0x0, 0x0, 0x9B, 0x1, 0x0, 0x0, 0xAA, 0x1, 0x0, 0x0, 0xB9
	.byte 0x1, 0x0, 0x0, 0xC8, 0x1, 0x0, 0x0, 0xD7, 0x1, 0x0, 0x0, 0xE6, 0x1
	.byte 0x0, 0x0
off_809CD14: .word byte_809CD18
byte_809CD18: .byte 0x0, 0x0, 0x0, 0x0, 0x6, 0x0, 0x0, 0x0, 0x7, 0x0, 0x0, 0x0, 0x8, 0x0, 0x0, 0x0, 0x9
	.byte 0x0, 0x0, 0x0, 0xA, 0x0, 0x0, 0x0, 0xB, 0x0, 0x0, 0x0
	thumb_func_end sub_809CC60

	thumb_local_start
sub_809CD34:
	push {r4-r7,lr}
	ldr r0, byte_809CEAC+4 // =0x4
	mov r1, #0x21
	bl chatbox_runScript // (void *scripts, u8 scriptOffIdx) -> void
	mov r0, #0
	pop {r4-r7,pc}
	.balign 4, 0x00
	thumb_func_end sub_809CD34

	thumb_local_start
sub_809CD44:
	push {r4-r7,lr}
	mov r0, #1
	bl sub_8033FC0
	bl sub_8003962
	bl zeroFill_8003AB2
	bl sub_800399A
	bl sub_8003AEA
	mov r0, #0
	pop {r4-r7,pc}
	thumb_func_end sub_809CD44

	thumb_local_start
sub_809CD60:
	push {r4-r7,lr}
	ldr r0, [r5,#0x70]
	tst r0, r0
	bne loc_809CD7C
	mov r0, #1
	str r0, [r5,#0x70]
	bl clear_e200AD04 // () -> void
	mov r0, #0
	bl sub_803F6B0
	bl loc_803F512
	b loc_809CDBA
loc_809CD7C:
	mov r6, #0
	mov r4, #1
	mov r7, r12
	bl sub_803F560
	mov r12, r7
	beq loc_809CD9E
	mov r6, #1
	mov r4, #0
	ldr r1, off_809CDC0 // =word_200AD04
	ldrh r0, [r1,#0x2] // (word_200AD06 - 0x200ad04)
	tst r0, r0
	beq loc_809CD9C
	sub r0, #1
	strh r0, [r1,#0x2] // (word_200AD06 - 0x200ad04)
	b loc_809CDBA
loc_809CD9C:
	mov r6, #0
loc_809CD9E:
	mov r0, r4
	bl sub_803F4EC
	strb r4, [r5,#8]
	movflag EVENT_163
	bl ClearEventFlagFromImmediate
	ldr r0, byte_809CEAC+4 // =0x4
	mov r1, #0x31
	bl chatbox_runScript // (void *scripts, u8 scriptOffIdx) -> void
	mov r0, #0
	b locret_809CDBC
loc_809CDBA:
	mov r0, #1
locret_809CDBC:
	pop {r4-r7,pc}
	.balign 4, 0x00
off_809CDC0: .word word_200AD04
	thumb_func_end sub_809CD60

	thumb_local_start
sub_809CDC4:
	push {r4-r7,lr}
	ldr r0, byte_809CEAC+4 // =0x4
	mov r1, #0x1f
	bl chatbox_runScript // (void *scripts, u8 scriptOffIdx) -> void
	mov r0, #0
	pop {r4-r7,pc}
	.balign 4, 0x00
	thumb_func_end sub_809CDC4

	thumb_local_start
sub_809CDD4:
	push {lr}
	bl GetCurPETNavi // () -> u8
	tst r0, r0
	bne loc_809CDE4
	bl sub_809CE40
	b loc_809CDE8
loc_809CDE4:
	bl sub_8120DF0
loc_809CDE8:
	bl sub_813C3AC
	mov r0, #0
	bl sub_8120D10
	beq loc_809CE0E
	mov r0, #0x32
	cmp r1, #0x10
	beq loc_809CE02
	mov r0, #0x34
	cmp r1, #0xf
	beq loc_809CE02
	mov r0, #0x33
loc_809CE02:
	mov r1, r0
	ldr r0, byte_809CEAC+4 // =0x4
	bl chatbox_runScript // (void *scripts, u8 scriptOffIdx) -> void
	mov r0, #0
	b locret_809CE10
loc_809CE0E:
	mov r0, #0
locret_809CE10:
	pop {pc}
	.balign 4, 0x00
	thumb_func_end sub_809CDD4

	thumb_local_start
sub_809CE14:
	push {r4-r7,lr}
	mov r4, #1
	mov r7, r12
	bl sub_803F560
	mov r12, r7
	tst r0, r0
	bne loc_809CE38
	bl sub_803F644
	beq loc_809CE38
	mov r0, #4
	bl sub_803F740
	tst r1, r1
	bne loc_809CE38
	str r2, [r5,#0x74]
	mov r4, #0
loc_809CE38:
	mov r0, r4
	tst r0, r0
	pop {r4-r7,pc}
	.balign 4, 0x00
	thumb_func_end sub_809CE14

	thumb_local_start
sub_809CE40:
	push {r4-r7,lr}
	sub sp, sp, #0x28
	mov r7, sp
	mov r0, r10
	ldr r0, [r0,#0x40]
	ldrb r4, [r0,#7]
	ldr r6, off_809CE80 // =byte_809CE84
	mov r5, #0
loc_809CE50:
	ldr r1, [r6,r5]
	ldr r0, byte_809CEAC // =0xff
	cmp r1, r0
	beq loc_809CE64
	mov r0, r4
	bl GetCurPETNaviStatsByte // (int a1, int a2) -> u8
	str r0, [r7,r5]
	add r5, #4
	b loc_809CE50
loc_809CE64:
	mov r5, #0
loc_809CE66:
	ldr r1, [r6,r5]
	ldr r0, byte_809CEAC // =0xff
	cmp r1, r0
	beq loc_809CE7A
	ldr r2, [r7,r5]
	mov r0, #0
	bl SetCurPETNaviStatsByte // (int a1, int a2, int a3) -> void
	add r5, #4
	b loc_809CE66
loc_809CE7A:
	add sp, sp, #0x28
	pop {r4-r7,pc}
	.balign 4, 0x00
off_809CE80: .word byte_809CE84
byte_809CE84: .byte 0x2D, 0x0, 0x0, 0x0, 0x2E, 0x0, 0x0, 0x0, 0x2F, 0x0, 0x0, 0x0, 0x30
	.byte 0x0, 0x0, 0x0, 0x56, 0x0, 0x0, 0x0, 0x57, 0x0, 0x0, 0x0, 0x58, 0x0
	.byte 0x0, 0x0, 0x59, 0x0, 0x0, 0x0, 0x5A, 0x0, 0x0, 0x0, 0x5B, 0x0, 0x0
	.byte 0x0
byte_809CEAC: .byte 0xFF, 0xFF, 0xFF, 0xFF, 0x4, 0x34, 0x3, 0x2
byte_809CEB4: .byte 0x3F, 0x0, 0x6, 0x2, 0xFF, 0x10, 0x47, 0x0, 0xFF, 0x4, 0x40
	.byte 0x4, 0xFF, 0x4, 0x3E, 0xE0, 0xB9, 0x73, 0x8, 0x2, 0xFF, 0x10
	.byte 0x3A, 0x4, 0x4, 0x80, 0x2, 0xFF, 0x10, 0x7B, 0x0, 0x0, 0x0
	.byte 0xDE, 0xCE, 0x9, 0x8, 0x15, 0x28, 0xCF, 0x9, 0x8, 0x53, 0xFF
	.byte 0x3, 0x2, 0xFF, 0x3C, 0x53, 0xFF, 0x1, 0x2, 0xFF, 0x1E, 0x7C
	.byte 0x0, 0x0, 0x0, 0xFB, 0xCE, 0x9, 0x8, 0x1D, 0xCF, 0x9, 0x8
	.byte 0x15, 0x28, 0xCF, 0x9, 0x8, 0x47, 0x0, 0xFF, 0x1A, 0x2, 0xFF
	.byte 0x13, 0x47, 0x0, 0xFF, 0x1B, 0x2, 0xFF, 0x10, 0x3A, 0xFF, 0x3C
	.byte 0x4, 0x80, 0x2, 0xFF, 0x10, 0x47, 0x0, 0xFF, 0x4, 0x2, 0xFF
	.byte 0x10, 0x15, 0x28, 0xCF, 0x9, 0x8, 0x2, 0xFF, 0x1E, 0x3A, 0xFF
	.byte 0x3C, 0x4, 0x80, 0x2, 0xFF, 0x10, 0x3F, 0x4, 0x0, 0x0
	thumb_func_end sub_809CE40

	thumb_func_start sub_809CF2C
sub_809CF2C:
	push {r4-r7,lr}
	bl sub_8034C36
	beq locret_809CF4E
	bl reqBBS_81407D8
	tst r0, r0
	beq locret_809CF4E
	ldr r0, off_809CF50 // =byte_809CEB4
	ldr r1, off_809CF58 // =eReqBBSGui
	ldr r2, dword_809CF54 // =0xe 
	ldrb r1, [r1,r2]
	sub r1, #1
	add r1, #0x32 
	bl init_s_02011C50_8036E90
	b locret_809CF4E
locret_809CF4E:
	pop {r4-r7,pc}
off_809CF50: .word byte_809CEB4
dword_809CF54: .word 0xE
off_809CF58: .word eReqBBSGui
byte_809CF5C: .byte 0x8, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0xFF, 0xFF, 0x9, 0x0, 0x0
	.byte 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0xA, 0x0, 0x0, 0x0, 0x0, 0x80
	.byte 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0xB, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	.byte 0x0, 0x1, 0x0, 0xC, 0x0, 0x0, 0x0, 0x0, 0x0, 0xFF, 0xFF, 0x0, 0x0, 0x1, 0x0
	.byte 0xD, 0x1, 0x0, 0x0, 0x0, 0x0, 0xFF, 0xFF, 0x0, 0x0, 0x0, 0x0, 0xE, 0x1, 0x0
	.byte 0x0, 0x0, 0x80, 0xFF, 0xFF, 0x0, 0x80, 0xFF, 0xFF, 0xF, 0x0, 0x0, 0x0, 0x0, 0x0
	.byte 0x0, 0x0, 0x0, 0x0, 0xFF, 0xFF
byte_809CFBC: .byte 0x10, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2, 0x0, 0x0, 0x0, 0xFE, 0xFF, 0x11
	.byte 0x0, 0x0, 0x0, 0x0, 0x0, 0x2, 0x0, 0x0, 0x0, 0x0, 0x0, 0x12, 0x0
	.byte 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x13, 0x0, 0x0
	.byte 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2, 0x0, 0x14, 0x0, 0x0, 0x0
	.byte 0x0, 0x0, 0xFE, 0xFF, 0x0, 0x0, 0x2, 0x0, 0x15, 0x1, 0x0, 0x0, 0x0
	.byte 0x0, 0xFE, 0xFF, 0x0, 0x0, 0x0, 0x0, 0x16, 0x1, 0x0, 0x0, 0x0, 0x0
	.byte 0xFF, 0xFF, 0x0, 0x0, 0xFF, 0xFF, 0x17, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	.byte 0x0, 0x0, 0x0, 0xFE, 0xFF, 0xC, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0
	.byte 0x0, 0x0, 0xFF, 0xFF, 0xD, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0
	.byte 0x0, 0x0, 0x0, 0xE, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x80
	.byte 0x0, 0x0, 0xF, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1
	.byte 0x0, 0x8, 0x0, 0x0, 0x0, 0x0, 0x0, 0xFF, 0xFF, 0x0, 0x0, 0x1, 0x0
	.byte 0x9, 0x1, 0x0, 0x0, 0x0, 0x0, 0xFF, 0xFF, 0x0, 0x0, 0x0, 0x0, 0xA
	.byte 0x1, 0x0, 0x0, 0x0, 0x80, 0xFF, 0xFF, 0x0, 0x80, 0xFF, 0xFF, 0xB, 0x0
	.byte 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xFF, 0xFF
byte_809D07C: .byte 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3, 0x0, 0x0, 0x0, 0x0
	.byte 0x0, 0x0, 0x0, 0x0, 0x0, 0x4, 0x0, 0x5, 0x1, 0x0, 0x0, 0x0, 0x0, 0xFC, 0xFF, 0x0, 0x0
	.byte 0x0, 0x0, 0x7, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xFC, 0xFF, 0x1, 0x0, 0x0
	.byte 0x0, 0x0, 0x0, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	.byte 0x0, 0x0, 0x4, 0x0, 0x5, 0x1, 0x0, 0x0, 0x0, 0x0, 0xFC, 0xFF, 0x0, 0x0, 0x0, 0x0, 0x7
	.byte 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xFC, 0xFF
byte_809D0DC: .byte 0x10, 0x0, 0x0, 0x0, 0x0, 0x0, 0x4, 0x0, 0x0, 0x0, 0xFC, 0xFF, 0x11
	.byte 0x0, 0x0, 0x0, 0x0, 0x0, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x12, 0x0
	.byte 0x0, 0x0, 0x0, 0x0, 0x2, 0x0, 0x0, 0x0, 0x2, 0x0, 0x13, 0x0, 0x0
	.byte 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x4, 0x0, 0x14, 0x0, 0x0, 0x0
	.byte 0x0, 0x0, 0xFC, 0xFF, 0x0, 0x0, 0x4, 0x0, 0x15, 0x1, 0x0, 0x0, 0x0
	.byte 0x0, 0xFC, 0xFF, 0x0, 0x0, 0x0, 0x0, 0x16, 0x1, 0x0, 0x0, 0x0, 0x0
	.byte 0xFE, 0xFF, 0x0, 0x0, 0xFE, 0xFF, 0x17, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	.byte 0x0, 0x0, 0x0, 0xFC, 0xFF
byte_809D13C: .byte 0x10, 0x0, 0x0, 0x0, 0x0, 0x0, 0x4, 0x0, 0x0, 0x0, 0xFC, 0xFF, 0x11
	.byte 0x0, 0x0, 0x0, 0x0, 0x0, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x12, 0x0
	.byte 0x0, 0x0, 0x0, 0x0, 0x2, 0x0, 0x0, 0x0, 0x2, 0x0, 0x13, 0x0, 0x0
	.byte 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x4, 0x0, 0x14, 0x0, 0x0, 0x0
	.byte 0x0, 0x0, 0xFC, 0xFF, 0x0, 0x0, 0x4, 0x0, 0x15, 0x1, 0x0, 0x0, 0x0
	.byte 0x0, 0xFC, 0xFF, 0x0, 0x0, 0x0, 0x0, 0x16, 0x1, 0x0, 0x0, 0x0, 0x0
	.byte 0xFE, 0xFF, 0x0, 0x0, 0xFE, 0xFF, 0x17, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	.byte 0x0, 0x0, 0x0, 0xFC, 0xFF
	thumb_func_end sub_809CF2C

	thumb_func_start sub_809D19C
sub_809D19C:
	push {lr}
	movflag EVENT_1716
	bl ClearEventFlagFromImmediate
	mov r0, #0xb
	mov r1, #0xe4
	bl TestEventFlagFromImmediate
	bne loc_809D1D2
	bl GetCurPETNavi // () -> u8
	mov r1, #0x35 
	bl GetCurPETNaviStatsByte // (int a1, int a2) -> u8
	tst r0, r0
	beq loc_809D1D2
	mov r7, r10
	ldr r7, [r7,#oToolkit_GameStatePtr]
	ldrb r0, [r7,#oGameState_MapGroup]
	mov r1, #0x80
	cmp r0, r1
	blt loc_809D1D2
	movflag EVENT_1716
	bl SetEventFlagFromImmediate
loc_809D1D2:
	ldr r0, off_809D258 // =off_809D25C 
	ldrb r1, [r5,#8]
	ldr r0, [r0,r1]
	mov lr, pc
	bx r0
	ldrb r0, [r5,#0x14]
	ldrb r1, [r5,#0x15]
	cmp r0, r1
	beq loc_809D1EE
	strb r0, [r5,#0x15]
	bl sprite_setAnimation // (u8 a1) -> void
	bl sprite_loadAnimationData // () -> void
loc_809D1EE:
	ldr r7, off_809D268 // =eStruct2000aa0 
	mov r6, r10
	ldr r6, [r6,#oToolkit_GameStatePtr]
	ldrb r0, [r6,#oGameState_MapGroup]
	cmp r0, #0x80
	blt loc_809D222
	bl sprite_makeScalable
	ldrb r0, [r7,#0x2] // (byte_2000AA2 - 0x2000aa0)
	ldrb r1, [r7]
	ldrb r2, [r7,#0x1] // (byte_2000AA1 - 0x2000aa0)
	cmp r0, #0
	bne loc_809D212
	cmp r1, #0x40 
	bne loc_809D212
	cmp r2, #0x40 
	bne loc_809D212
	b loc_809D218
loc_809D212:
	bl sprite_setScaleParameters
	b loc_809D21C
loc_809D218:
	bl sprite_makeUnscalable
loc_809D21C:
	ldrh r0, [r7,#oS2000aa0_OWPlayerNaviColorShader] // (word_2000AA6 - 0x2000aa0)
	cmp r0, #0
	bne loc_809D234
loc_809D222:
	bl sub_8002EE8
	mov r0, #oOWPlayerObject_Coords
	add r0, r0, r5
	bl sub_8031A7A
	cmp r0, #0x3c 
	bne loc_809D238
	ldr r0, dword_809D344 // =0xa108 
loc_809D234:
	bl sprite_setColorShader
loc_809D238:
	ldrb r0, [r7,#oS2000aa0_OWPlayerNaviPaletteIndex] // (byte_2000AA5 - 0x2000aa0)
	bl sprite_setPalette // (int pallete) -> void
	movflag EVENT_173D
	bl TestEventFlagFromImmediate
	beq loc_809D252
	mov r0, r10
	ldr r0, [r0,#oToolkit_GameStatePtr]
	ldrb r0, [r0,#oGameState_Unk_10]
	tst r0, r0
	beq locret_809D256
loc_809D252:
	bl sprite_update
locret_809D256:
	pop {pc}
off_809D258: .word off_809D25C
off_809D25C: .word sub_809D270+1
	.word sub_809D348+1
	.word sub_809D7F8+1
off_809D268: .word eStruct2000aa0
	.word eStruct200ace0
	thumb_func_end sub_809D19C

	thumb_local_start
sub_809D270:
	push {r4,lr}
	mov r0, #3
	strb r0, [r5]
	bl GetCurPETNavi // () -> u8
	ldr r4, off_809D324 // =byte_809D328
	ldrb r4, [r4,r0]
	mov r6, #0x18
	mov r7, r10
	ldr r7, [r7,#oToolkit_GameStatePtr]
	ldrb r0, [r7,#oGameState_MapGroup]
	mov r3, #INTERNET_MAP_GROUP_START
	cmp r0, r3
	bge .inInternetMap
	mov r4, #0x37 
	movflag EVENT_COPYBOT_ACTIVE
	bl TestEventFlagFromImmediate
	bne .inInternetMap
	mov r4, #0
	mov r6, #0x18
	b .loc_809D2B2
.inInternetMap
	ldr r7, off_809D340 // =eStruct2000aa0 
	ldrb r0, [r7,#oS2000aa0_Sprite_04] // (byte_2000AA4 - 0x2000aa0)
	tst r0, r0
	beq .loc_809D2B2
	sub r0, #1
	lsl r0, r0, #1
	ldr r4, off_809D334 // =byte_809D338
	add r4, r4, r0
	ldrb r6, [r4]
	ldrb r4, [r4,#1]
.loc_809D2B2:
	mov r0, #0x80
	mov r1, r6
	mov r2, r4
	bl sprite_load // (int a1, int a2, int a3) ->
	mov r0, #0
	strb r0, [r5,#0x14]
	mov r0, #0xff
	strb r0, [r5,#0x15]
	bl sprite_noShadow // () -> void
	mov r0, r10
	ldr r0, [r0,#oToolkit_GameStatePtr]
	str r5, [r0,#oGameState_OverworldPlayerObjectPtr]
	mov r0, #4
	strb r0, [r5,#8]
	mov r0, #0x48 
	// memBlock
	add r0, r0, r5
	// size
	mov r1, #0x20 
	bl ZeroFillByWord // (void *memBlock, int size) -> void
	mov r0, #1
	strb r0, [r5,#0x17]
	strb r0, [r5,#0xc]
	mov r0, #0
	strb r0, [r5,#0x16]
	ldrb r0, [r5,#0x10]
	mov r1, #7
	and r0, r1
	strb r0, [r5,#0x10]
	mov r0, #0xff
	strb r0, [r5,#0x11]
	mov r0, #0
	mov r3, #0x4c 
	strh r0, [r5,r3]
	mov r3, #0x4e 
	strh r0, [r5,r3]
	str r0, [r5,#0x38]
	str r0, [r5,#0x3c]
	str r0, [r5,#0x40]
	str r0, [r5,#0x44]
	strb r0, [r5,#0xd]
	strb r0, [r5,#0xe]
	strb r0, [r5,#0xf]
	strh r0, [r5,#0x18]
	mov r7, r10
	ldr r7, [r7,#oToolkit_GameStatePtr]
	strb r0, [r7,#oGameState_Unk_10]
	ldr r0, [r5,#0x1c]
	ldr r1, [r5,#0x20]
	ldr r2, [r5,#0x24]
	str r0, [r5,#0x28]
	str r1, [r5,#0x2c]
	str r2, [r5,#0x30]
	bl sub_809D348
	pop {r4,pc}
off_809D324: .word byte_809D328
byte_809D328: .byte 0x37, 0x47, 0x49, 0x4B, 0x50, 0x4F, 0x48, 0x4A, 0x4C
	.byte 0x4D, 0x4E, 0x37
off_809D334: .word byte_809D338
byte_809D338: .byte 0x1C, 0x54, 0x1C, 0x2, 0x1C, 0x6C, 0x0, 0x0
off_809D340: .word eStruct2000aa0
dword_809D344: .word 0xA108
	thumb_func_end sub_809D270

	thumb_local_start
sub_809D348:
	push {lr}
	mov r0, #0
	mov r7, r10
	ldr r7, [r7,#oToolkit_GameStatePtr]
	strb r0, [r7,#oGameState_Unk_11]
	strb r0, [r5,#oOWPlayerObject_Unk_13]
	strb r0, [r5,#oOWPlayerObject_Unk_13]
	ldrb r1, [r5,#oOWPlayerObject_Unk_0e]
	strb r1, [r5,#oOWPlayerObject_Unk_0f]
	ldrb r1, [r5,#oOWPlayerObject_Unk_0d]
	strb r1, [r5,#oOWPlayerObject_Unk_0e]
	strb r0, [r5,#oOWPlayerObject_Unk_0d]
	ldr r0, [r5,#oOWPlayerObject_X]
	ldr r1, [r5,#oOWPlayerObject_Y]
	ldr r2, [r5,#oOWPlayerObject_Z]
	str r0, [r5,#oOWPlayerObject_NextX]
	str r1, [r5,#oOWPlayerObject_NextY]
	str r2, [r5,#oOWPlayerObject_NextZ]
	ldr r7, off_809D468 // =off_809D450 
	ldrb r0, [r5,#oOWPlayerObject_JumptableIndex_09]
	ldr r7, [r7,r0]
	mov lr, pc
	bx r7
	ldrb r0, [r5,#0xc]
	tst r0, r0
	beq loc_809D3BC
	bl sub_809E3D6
	mov r0, #0x1c
	add r0, r0, r5
	bl sub_8030B6A
	tst r0, r0
	beq loc_809D3BC
	movflag EVENT_1716
	bl TestEventFlagFromImmediate
	beq loc_809D3BC
	movflag EVENT_173D
	bl TestEventFlagFromImmediate
	beq loc_809D3A8
	movflag EVENT_173F
	bl SetEventFlagFromImmediate
loc_809D3A8:
	movflag EVENT_173D
	bl ClearEventFlagFromImmediate
	movflag EVENT_173E
	bl ClearEventFlagFromImmediate
	bl sub_809DE60
loc_809D3BC:
	bl sub_809E46E
	bl sub_809DB60
	bl sub_809E3A2
	bne loc_809D3E6
	ldrb r0, [r5,#0x17]
	tst r0, r0
	beq loc_809D3E6
	mov r0, #0xb
	mov r1, #0xe4
	bl TestEventFlagFromImmediate
	bne loc_809D3E6
	mov r0, #oOWPlayerObject_Coords
	add r0, r0, r5
	bl sub_8031612
	lsl r0, r0, #0x10
	str r0, [r5,#oOWPlayerObject_Z]
loc_809D3E6:
	movflag EVENT_1718
	bl TestEventFlagFromImmediate
	beq loc_809D3FC
	movflag EVENT_1718
	bl ClearEventFlagFromImmediate
	bl owPlayer_809E0C8
loc_809D3FC: .align 1, 0
	ldrb r0, [r5,#0x16]
	tst r0, r0
	bne loc_809D40A
	mov r0, r5
	add r0, #oOWPlayerObject_Coords
	bl applyLayerEffectToOWObject_8035694
loc_809D40A:
	bl sub_8002E14
	bl sub_809DFA0
	tst r0, r0
	beq loc_809D446
	bl IsCutsceneScriptNonNull // () -> zf
	tst r0, r0
	bne loc_809D446
	ldrb r1, [r5,#0x13]
	mov r7, r10
	ldr r7, [r7,#oToolkit_S2001c04_Ptr]
	ldrh r0, [r7,#0x12]
	add r0, r0, r1
	strh r0, [r7,#0x12]
	ldr r0, [r7,#0x24]
	tst r0, r0
	beq loc_809D438
	sub r0, r0, r1
	bge loc_809D436
	mov r0, #0
loc_809D436:
	str r0, [r7,#0x24]
loc_809D438:
	ldr r0, [r7,#0x28]
	tst r0, r0
	beq loc_809D446
	sub r0, r0, r1
	bge loc_809D444
	mov r0, #0
loc_809D444:
	str r0, [r7,#0x28]
loc_809D446:
	bl sub_809DFC0
	bl sub_809DE98
	pop {pc}
off_809D450: .word sub_809D470+1
	.word sub_809D4DC+1
	.word sub_809D61A+1
	.word sub_809D75E+1
	.word sub_809D800+1
	.word sub_809D8F4+1
off_809D468: .word off_809D450
	.word 0xFFFF
	thumb_func_end sub_809D348

	thumb_local_start
sub_809D470:
	push {r4,lr}
	bl sub_809D9E0
	ldrb r0, [r5,#0xa]
	tst r0, r0
	bne loc_809D484
	ldrb r0, [r5,#0x10]
	strb r0, [r5,#0x14]
	mov r0, #4
	strb r0, [r5,#0xa]
loc_809D484:
	bl sub_809DB50
	beq loc_809D492
	mov r0, #0x14
	bl owPlayer_setJumptableIndex09AndOthers_809e004
	pop {r4,pc}
loc_809D492:
	bl sub_809DAF8
	tst r0, r0
	beq loc_809D4A2
	mov r0, #4
	bl owPlayer_setJumptableIndex09AndOthers_809e004
	pop {r4,pc}
loc_809D4A2:
	bl sub_809DB02
	tst r0, r0
	beq loc_809D4B2
	mov r0, #8
	bl owPlayer_setJumptableIndex09AndOthers_809e004
	pop {r4,pc}
loc_809D4B2:
	bl sub_809DED4
	tst r0, r0
	beq loc_809D4C2
	mov r0, #0xc
	bl owPlayer_setJumptableIndex09AndOthers_809e004
	pop {r4,pc}
loc_809D4C2:
	bl sub_809DF28
	tst r0, r0
	beq locret_809D4D6
	mov r0, #0
	strb r0, [r7,#1]
	mov r0, #0x10
	bl owPlayer_setJumptableIndex09AndOthers_809e004
	pop {r4,pc}
locret_809D4D6:
	pop {r4,pc}
	.word 0x2000AA0
	thumb_func_end sub_809D470

	thumb_local_start
sub_809D4DC:
	push {lr}
	bl sub_809D9E0
	tst r0, r0
	beq loc_809D4FC
	ldrb r0, [r5,#0x10]
	ldrb r1, [r5,#0x11]
	cmp r0, r1
	beq loc_809D4F2
	mov r0, #0
	strb r0, [r5,#0xa]
loc_809D4F2:
	ldr r7, off_809D55C // =off_809D554 
	ldrb r0, [r5,#0xa]
	ldr r7, [r7,r0]
	mov lr, pc
	bx r7
loc_809D4FC:
	bl sub_809DF28
	tst r0, r0
	beq loc_809D510
	mov r0, #0
	strb r0, [r7,#1]
	mov r0, #0x10
	bl owPlayer_setJumptableIndex09AndOthers_809e004
	b locret_809D552
loc_809D510:
	bl sub_809DED4
	tst r0, r0
	beq loc_809D520
	mov r0, #0xc
	bl owPlayer_setJumptableIndex09AndOthers_809e004
	b locret_809D552
loc_809D520:
	bl sub_809DB02
	tst r0, r0
	beq byte_809D530
	mov r0, #8
	bl owPlayer_setJumptableIndex09AndOthers_809e004
	b loc_809D54E
byte_809D530: .byte 0x0, 0xF0, 0xE, 0xFB, 0x3, 0xD0, 0x14, 0x20, 0x0, 0xF0, 0x64
	.byte 0xFD, 0x9, 0xE0, 0x0, 0xF0, 0xDB, 0xFA, 0x0, 0x42, 0x3, 0xD1
	.byte 0x0, 0x20, 0x0, 0xF0, 0x5C, 0xFD, 0x1, 0xE0
loc_809D54E:
	ldrb r0, [r5,#0x13]
	strb r0, [r5,#0x13]
locret_809D552:
	pop {pc}
off_809D554: .word sub_809D560+1
	.word sub_809D5C4+1
off_809D55C: .word off_809D554
	thumb_func_end sub_809D4DC

	thumb_local_start
sub_809D560:
	push {lr}
	mov r1, #0
	ldr r7, off_809D714 // =eStruct2000aa0 
	mov r6, r10
	ldr r6, [r6,#oToolkit_GameStatePtr]
	ldrb r0, [r6,#oGameState_MapGroup]
	cmp r0, #0x80
	blt loc_809D572
	ldrb r1, [r7,#oS2000aa0_Unk_03] // (byte_2000AA3 - 0x2000aa0)
loc_809D572:
	ldrb r0, [r5,#oOWPlayerObject_FacingDirection]
	ldr r7, off_809D5AC // =off_809D5B0 
	push {r0,r1,r3-r5}
	movflag EVENT_1716
	bl TestEventFlagFromImmediate
	beq loc_809D584
	ldr r7, off_809D5B8 // =off_809D5BC 
loc_809D584:
	pop {r0,r1,r3-r5}
	ldr r7, [r7,r1]
	ldr r6, off_809D8AC // =eStruct200ace0 
	ldr r1, [r6,#oS200ace0_Unk_18_1a] // (dword_200ACF8 - 0x200ace0)
	tst r1, r1
	beq loc_809D592
	ldr r7, [r6,#oS200ace0_Unk_20] // (dword_200AD00 - 0x200ace0)
loc_809D592:
	lsl r1, r0, #3
	lsl r0, r0, #2
	add r0, r0, r1
	add r7, r7, r0
	ldr r0, [r7,#4]
	str r0, [r5,#oOWPlayerObject_Unk_38]
	ldr r0, [r7,#8]
	str r0, [r5,#oOWPlayerObject_Unk_3c]
	ldrb r0, [r7]
	strb r0, [r5,#oOWPlayerObject_AnimationSelect]
	mov r0, #4
	strb r0, [r5,#0xa]
	pop {pc}
off_809D5AC: .word off_809D5B0
off_809D5B0: .word byte_809CF5C
	.word byte_809D0DC
off_809D5B8: .word off_809D5BC
off_809D5BC: .word byte_809CFBC
	.word byte_809D0DC
	thumb_func_end sub_809D560

	thumb_local_start
sub_809D5C4:
	push {lr}
	bl sub_809DDCC
	tst r0, r0
	beq loc_809D60C
	mov r0, #0x1c
	add r0, r0, r5
	bl sub_8031612
	mov r2, #0
	mov r3, #1
	cmp r1, #1
	bne loc_809D5F4
	mov r2, #1
	mov r3, #2
	push {r3}
	movflag EVENT_1716
	bl TestEventFlagFromImmediate
	pop {r3}
	beq loc_809D5F4
	mov r2, #0
	mov r3, #1
loc_809D5F4:
	strb r3, [r5,#0x13]
	ldr r0, [r5,#0x38]
	lsl r0, r2
	ldr r1, [r5,#0x1c]
	add r1, r1, r0
	str r1, [r5,#0x1c]
	ldr r0, [r5,#0x3c]
	lsl r0, r2
	ldr r1, [r5,#0x20]
	add r1, r1, r0
	str r1, [r5,#0x20]
	pop {pc}
loc_809D60C:
	ldr r0, [r5,#0x28]
	ldr r1, [r5,#0x2c]
	ldr r2, [r5,#0x30]
	str r0, [r5,#0x1c]
	str r1, [r5,#0x20]
	str r2, [r5,#0x24]
	pop {pc}
	thumb_func_end sub_809D5C4

	thumb_local_start
sub_809D61A:
	push {lr}
	movflag EVENT_1716
	bl TestEventFlagFromImmediate
	beq loc_809D630
	movflag EVENT_173D
	bl TestEventFlagFromImmediate
	bne loc_809D646
loc_809D630:
	bl sub_809D9E0
	tst r0, r0
	beq loc_809D650
	ldrb r0, [r5,#0x10]
	ldrb r1, [r5,#0x11]
	cmp r0, r1
	beq loc_809D646
	mov r0, #0
	strb r0, [r5,#0xa]
	b loc_809D646
loc_809D646:
	ldr r7, off_809D6B8 // =off_809D6B0 
	ldrb r0, [r5,#0xa]
	ldr r7, [r7,r0]
	mov lr, pc
	bx r7
loc_809D650:
	bl sub_809DF28
	tst r0, r0
	beq loc_809D668
	mov r0, #0
	strb r0, [r7,#1]
	mov r0, #0x10
	bl owPlayer_setJumptableIndex09AndOthers_809e004
	bl sub_809DE30
	b locret_809D6AE
loc_809D668:
	bl sub_809DED4
	tst r0, r0
	beq loc_809D678
	mov r0, #0xc
	bl owPlayer_setJumptableIndex09AndOthers_809e004
	b locret_809D6AE
loc_809D678:
	bl sub_809DB50
	beq loc_809D68A
	mov r0, #0x14
	bl owPlayer_setJumptableIndex09AndOthers_809e004
	bl sub_809DE30
	b locret_809D6AE
loc_809D68A:
	bl sub_809DAF8
	tst r0, r0
	beq loc_809D69A
	mov r0, #4
	bl owPlayer_setJumptableIndex09AndOthers_809e004
	b loc_809D6AA
loc_809D69A:
	bl sub_809DB02
	tst r0, r0
	bne loc_809D6AA
	mov r0, #0
	bl owPlayer_setJumptableIndex09AndOthers_809e004
	b locret_809D6AE
loc_809D6AA:
	bl sub_809DDF0
locret_809D6AE:
	pop {pc}
off_809D6B0: .word sub_809D6BC+1
	.word sub_809D730+1
off_809D6B8: .word off_809D6B0
	thumb_func_end sub_809D61A

	thumb_local_start
sub_809D6BC:
	push {lr}
	mov r1, #0
	ldr r7, off_809D714 // =eStruct2000aa0 
	mov r6, r10
	ldr r6, [r6,#oToolkit_GameStatePtr]
	ldrb r0, [r6,#oGameState_MapGroup]
	cmp r0, #INTERNET_MAP_GROUP_START
	blt .notInternetMapGroup
	ldrb r1, [r7,#oS2000aa0_Unk_03] // (byte_2000AA3 - 0x2000aa0)
.notInternetMapGroup
	ldrb r0, [r5,#oOWPlayerObject_FacingDirection]
	ldr r7, off_809D718 // =off_809D71C 
	push {r0,r1,r3-r5}
	movflag EVENT_1716
	bl TestEventFlagFromImmediate
	beq .loc_809D6F4
	movflag EVENT_173D
	bl TestEventFlagFromImmediate
	bne .loc_809D6F2
	movflag EVENT_173F
	bl TestEventFlagFromImmediate
	bne .loc_809D6F4
.loc_809D6F2:
	ldr r7, off_809D724 // =off_809D728 
.loc_809D6F4:
	pop {r0,r1,r3-r5}
	ldr r7, [r7,r1]
	lsl r1, r0, #3 
	lsl r0, r0, #2
	add r0, r0, r1 // r0 = map group * 10
	add r7, r7, r0
	ldr r0, [r7,#4]
	str r0, [r5,#0x38]
	ldr r0, [r7,#8]
	str r0, [r5,#0x3c]
	ldrb r0, [r7]
	strb r0, [r5,#0x14]
	mov r0, #4
	strb r0, [r5,#0xa]
	pop {pc}
	.balign 4, 0
off_809D714: .word eStruct2000aa0
off_809D718: .word off_809D71C
off_809D71C: .word byte_809CFBC
	.word byte_809D0DC
off_809D724: .word off_809D728
off_809D728: .word byte_809D13C
	.word byte_809D0DC
	thumb_func_end sub_809D6BC

	thumb_local_start
sub_809D730:
	push {lr}
	bl sub_809DDCC
	tst r0, r0
	beq loc_809D750
	ldr r0, [r5,#0x38]
	ldr r1, [r5,#0x1c]
	add r1, r1, r0
	str r1, [r5,#0x1c]
	ldr r0, [r5,#0x3c]
	ldr r1, [r5,#0x20]
	add r1, r1, r0
	str r1, [r5,#0x20]
	mov r0, #2
	strb r0, [r5,#0x13]
	pop {pc}
loc_809D750:
	ldr r0, [r5,#0x28]
	ldr r1, [r5,#0x2c]
	ldr r2, [r5,#0x30]
	str r0, [r5,#0x1c]
	str r1, [r5,#0x20]
	str r2, [r5,#0x24]
	pop {pc}
	thumb_func_end sub_809D730

	thumb_local_start
sub_809D75E:
	push {lr}
	ldr r7, off_809D7A4 // =off_809D798 
	ldrb r0, [r5,#0xa]
	ldr r7, [r7,r0]
	mov lr, pc
	bx r7
	ldr r7, off_809D8AC // =eStruct200ace0 
	ldrb r0, [r7,#0x1c] // (byte_200ACFC - 0x200ace0)
	cmp r0, #0xff
	beq loc_809D778
	strb r0, [r5,#0x14]
	mov r0, #0xff
	strb r0, [r7,#0x1c] // (byte_200ACFC - 0x200ace0)
loc_809D778:
	bl sub_809DF28
	tst r0, r0
	beq locret_809D796
	mov r0, #2
	strb r0, [r7,#0x1] // (byte_200ACE1 - 0x200ace0)
	mov r7, r10
	ldr r7, [r7,#oToolkit_GameStatePtr]
	mov r0, #0
	strb r0, [r7,#oGameState_Unk_10]
	mov r0, #0
	strb r0, [r5,#7]
	mov r0, #0x10
	bl owPlayer_setJumptableIndex09AndOthers_809e004
locret_809D796:
	pop {pc}
off_809D798: .word sub_809D7A8+1
	.word loc_809D7C8+1
	.word loc_809D7D8+1
off_809D7A4: .word off_809D798
	thumb_func_end sub_809D75E

	thumb_local_start
sub_809D7A8:
	push {lr}
	bl IsCutsceneScriptNonNull // () -> zf
	tst r0, r0
	bne loc_809D7E2
	ldrb r0, [r5,#0x10]
	strb r0, [r5,#0x14]
	ldr r7, [r5,#0x58]
	ldrb r0, [r7,#0x17]
	tst r0, r0
	bne locret_809D7C6
	mov r0, #1
	strb r0, [r7,#0x18]
	mov r0, #4
	strb r0, [r5,#0xa]
locret_809D7C6:
	pop {pc}
loc_809D7C8:
	push {lr}
	ldr r7, [r5,#0x58]
	ldrb r0, [r7,#0xa]
	cmp r0, #4
	bne locret_809D7D6
	mov r0, #8
	strb r0, [r5,#0xa]
locret_809D7D6:
	pop {pc}
loc_809D7D8:
	push {lr}
	mov r0, #0x80
	bl chatbox_check_eFlags2009F38
	bne locret_809D7F6
loc_809D7E2:
	mov r7, r10
	ldr r7, [r7,#oToolkit_GameStatePtr]
	mov r0, #0
	strb r0, [r7,#oGameState_Unk_10]
	mov r0, #0
	strb r0, [r5,#7]
	mov r0, #0
	strb r0, [r5,#9]
	mov r0, #0
	strb r0, [r5,#0xa]
locret_809D7F6:
	pop {pc}
	thumb_func_end sub_809D7A8

	thumb_local_start
sub_809D7F8:
	push {lr}
	bl FreeOWPlayerObject
	pop {pc}
	thumb_func_end sub_809D7F8

	thumb_local_start
sub_809D800:
	push {lr}
	ldr r7, off_809D8AC // =eStruct200ace0 
	ldr r0, [r5,#oOWPlayerObject_X]
	ldr r1, [r5,#oOWPlayerObject_Y]
	ldr r2, [r5,#oOWPlayerObject_Z]
	str r0, [r5,#oOWPlayerObject_NextX]
	str r1, [r5,#oOWPlayerObject_NextY]
	str r2, [r5,#oOWPlayerObject_NextZ]
	ldr r0, [r7,#oS200ace0_PlayerX] // (dword_200ACE8 - 0x200ace0)
	str r0, [r5,#oOWPlayerObject_X]
	ldr r0, [r7,#oS200ace0_PlayerY] // (dword_200ACEC - 0x200ace0)
	str r0, [r5,#oOWPlayerObject_Y]
	ldr r0, [r7,#oS200ace0_PlayerZ] // (dword_200ACF0 - 0x200ace0)
	str r0, [r5,#oOWPlayerObject_Z]
	ldrb r0, [r7,#oS200ace0_fixOWPlayerAnim_15] // (byte_200ACF5 - 0x200ace0)
	tst r0, r0
	bne loc_809D828
	ldrb r0, [r7,#oS200ace0_owPlayerFixedAnimationSelect_02] // (byte_200ACE2 - 0x200ace0)
	strb r0, [r5,#oOWPlayerObject_AnimationSelect]
	b loc_809D832
loc_809D828:
	ldr r7, off_809D8C8 // =off_809D8B0 
	ldrb r0, [r5,#oOWPlayerObject_Unk_0b]
	ldr r7, [r7,r0]
	mov lr, pc
	bx r7
loc_809D832:
	bl sub_809DF36
	tst r0, r0
	bne loc_809D844
	ldr r6, off_809D8A8 // =byte_809D89C
	ldrb r0, [r7,#0x1] // (byte_200ACE1 - 0x200ace0)
	lsl r0, r0, #2
	ldr r0, [r6,r0]
	str r0, [r5,#8]
loc_809D844:
	ldrb r0, [r5,#0xc]
	tst r0, r0
	beq loc_809D856
	bl sub_809E3D6
	mov r0, #0x1c
	add r0, r0, r5
	bl sub_8030B6A
loc_809D856:
	ldr r7, off_809D8AC // =eStruct200ace0 
	ldr r0, [r5,#0x1c]
	str r0, [r7,#0x8] // (dword_200ACE8 - 0x200ace0)
	ldr r0, [r5,#0x20]
	str r0, [r7,#0xc] // (dword_200ACEC - 0x200ace0)
	ldr r0, [r5,#0x24]
	str r0, [r7,#0x10] // (dword_200ACF0 - 0x200ace0)
	bl sub_809E3A2
	bne loc_809D886
	ldrb r0, [r5,#0x17]
	tst r0, r0
	beq loc_809D886
	mov r0, #0xb
	mov r1, #0xe4
	bl TestEventFlagFromImmediate
	bne loc_809D886
	mov r0, #0x1c
	add r0, r0, r5
	bl sub_8031612
	lsl r0, r0, #0x10
	str r0, [r5,#0x24]
loc_809D886:
	ldrb r0, [r5,#0x16]
	tst r0, r0
	bne loc_809D894
	mov r0, r5
	add r0, #0x1c
	bl applyLayerEffectToOWObject_8035694
loc_809D894:
	bl sub_8002E14
	pop {pc}
	.balign 4, 0x00
byte_809D89C: .byte 0x4, 0x0, 0x4, 0x0, 0x4, 0xC, 0x8, 0x0, 0x4, 0x0, 0x0, 0x0
off_809D8A8: .word byte_809D89C
off_809D8AC: .word eStruct200ace0
off_809D8B0: .word sub_809D470+1
	.word sub_809D4DC+1
	.word sub_809D61A+1
	.word sub_809D75E+1
	.word sub_809D800+1
	.word sub_809D8F4+1
off_809D8C8: .word off_809D8B0
	thumb_func_end sub_809D800

	thumb_local_start
sub_809D8CC:
	push {lr}
	ldrb r0, [r5,#0xa]
	tst r0, r0
	bne loc_809D8DE
	mov r0, #4
	strb r0, [r5,#0x10]
	strb r0, [r5,#0x14]
	mov r0, #4
	strb r0, [r5,#0xa]
loc_809D8DE:
	mov r0, #0x80
	bl chatbox_check_eFlags2009F38
	bne locret_809D8F0
	mov r0, #0
	strb r0, [r5,#9]
	mov r0, #0
	strb r0, [r5,#0xa]
	strb r0, [r5,#0xb]
locret_809D8F0:
	pop {pc}
	.balign 4, 0x00
	thumb_func_end sub_809D8CC

	thumb_local_start
sub_809D8F4:
	push {lr}
	ldr r7, off_809D928 // =off_809D91C 
	ldrb r0, [r5,#0xa]
	ldr r7, [r7,r0]
	mov lr, pc
	bx r7
	bl sub_809DF28
	tst r0, r0
	beq locret_809D91A
	mov r0, #0
	strb r0, [r7,#1]
	movflag EVENT_1717_PLAYER_ADVANCE_FORWARD
	bl ClearEventFlagFromImmediate
	mov r0, #0x10
	bl owPlayer_setJumptableIndex09AndOthers_809e004
locret_809D91A:
	pop {pc}
off_809D91C: .word sub_809D92C+1
	.word sub_809D964+1
	.word sub_809D9A0+1
off_809D928: .word off_809D91C
	thumb_func_end sub_809D8F4

	thumb_local_start
sub_809D92C:
	push {lr}
	mov r1, #0x64 
	ldrh r0, [r5,r1]
	cmp r0, #3
	bgt loc_809D938
	add r0, #4
loc_809D938:
	mov r2, #0x66 
	strh r0, [r5,r2]
	ldr r7, off_809D9D8 // =off_809D9DC 
	ldr r7, [r7]
	lsl r1, r0, #3
	lsl r0, r0, #2
	add r0, r0, r1
	add r7, r7, r0
	ldr r0, [r7,#4]
	str r0, [r5,#0x38]
	ldr r0, [r7,#8]
	str r0, [r5,#0x3c]
	ldrb r0, [r7]
	strb r0, [r5,#0x14]
	strb r0, [r5,#0x10]
	strb r0, [r5,#0x11]
	mov r0, #4
	strb r0, [r5,#0xa]
	mov r0, #1
	mov r1, #0x5c 
	strb r0, [r5,r1]
	pop {pc}
	thumb_func_end sub_809D92C

	thumb_local_start
sub_809D964:
	push {lr}
	mov r0, #1
	mov r1, #0x5c 
	ldrb r0, [r5,r1]
	sub r0, #1
	strb r0, [r5,r1]
	tst r0, r0
	bne loc_809D97E
	mov r0, #6
	strb r0, [r5,r1]
	mov r0, #0x98
	bl PlaySoundEffect
loc_809D97E:
	mov r1, #0x64 
	ldrh r0, [r5,r1]
	mov r2, #0x66 
	ldrh r3, [r5,r2]
	cmp r0, r3
	bne loc_809D98E
	mov r0, #8
	strb r0, [r5,#0xa]
loc_809D98E:
	ldr r0, [r5,#0x38]
	ldr r1, [r5,#0x1c]
	add r1, r1, r0
	str r1, [r5,#0x1c]
	ldr r0, [r5,#0x3c]
	ldr r1, [r5,#0x20]
	add r1, r1, r0
	str r1, [r5,#0x20]
	pop {pc}
	thumb_func_end sub_809D964

	thumb_local_start
sub_809D9A0:
	push {lr}
	mov r0, r5
	add r0, #0x1c
	bl sub_8031A7A
	cmp r0, #0x4c 
	blt loc_809D9C4
	cmp r0, #0x4f 
	bgt loc_809D9C4
	ldr r0, [r5,#0x38]
	ldr r1, [r5,#0x1c]
	add r1, r1, r0
	str r1, [r5,#0x1c]
	ldr r0, [r5,#0x3c]
	ldr r1, [r5,#0x20]
	add r1, r1, r0
	str r1, [r5,#0x20]
	b locret_809D9D6
loc_809D9C4:
	movflag EVENT_1717_PLAYER_ADVANCE_FORWARD
	bl ClearEventFlagFromImmediate
	mov r0, #0
	strb r0, [r5,#9]
	mov r0, #0
	strb r0, [r5,#0xa]
	strb r0, [r5,#0xb]
locret_809D9D6:
	pop {pc}
off_809D9D8: .word off_809D9DC
off_809D9DC: .word byte_809D07C
	thumb_func_end sub_809D9A0

	thumb_local_start
sub_809D9E0:
	push {lr}
	sub sp, sp, #0xc
	mov r8, sp
	ldr r7, off_809DAF4 // =eStruct200ace0 
	ldrb r0, [r7,#oS200ace0_fixOWPlayerAnim_15] // (byte_200ACF5 - 0x200ace0)
	tst r0, r0
	bne loc_809DA98
	bl IsScreenFadeActive // () -> zf
	beq loc_809DA94
	push {r0}
	movflag EVENT_PLAYER_CAN_MOVE
	bl TestEventFlagFromImmediate
	pop {r0}
	beq loc_809DA82
	movflag EVENT_1717_PLAYER_ADVANCE_FORWARD
	bl TestEventFlagFromImmediate
	bne loc_809DA94
	bl IsCutsceneScriptNonNull // () -> zf
	bne loc_809DA94
	ldrb r0, [r5,#0x10]
	strb r0, [r5,#0x11]
	mov r0, #0
	mov r7, r10
	ldr r7, [r7,#oToolkit_JoypadPtr]
	ldrh r1, [r7,#2]
	mov r2, #8
	tst r2, r1
	bne loc_809DA82
	mov r2, #1
	tst r2, r1
	beq loc_809DA62
	push {r0,r1,r7}
	ldrb r0, [r5,#0x10]
	lsl r0, r0, #2
	ldr r7, off_809DBBC // =off_809DC0C 
	ldr r7, [r7,r0]
	mov r6, r8
	ldr r0, [r5,#0x1c]
	ldr r1, [r7]
	add r0, r0, r1
	str r0, [r6]
	ldr r0, [r5,#0x20]
	ldr r1, [r7,#4]
	add r0, r0, r1
	str r0, [r6,#4]
	ldr r0, [r5,#0x24]
	ldr r1, [r7,#8]
	add r0, r0, r1
	str r0, [r6,#8]
	mov r0, r6
	bl sub_8031A7A
	mov r2, r0
	strb r2, [r5,#0xd]
	mov r7, r10
	ldr r7, [r7,#oToolkit_GameStatePtr]
	mov r2, #1
	strb r2, [r7,#oGameState_Unk_11]
	pop {r0,r1,r7}
loc_809DA62:
	ldrh r1, [r7,#oGameState_SubsystemIndex]
	mov r2, #0xf0
	and r2, r1
	beq loc_809DA82
	lsr r2, r2, #4
	ldr r7, off_809DAEC // =byte_809DAD8
	ldrb r2, [r7,r2]
	orr r0, r2
	mov r2, #2
	tst r2, r1
	beq loc_809DA7E
	mov r1, #0x20 
	orr r0, r1
	b loc_809DA82
loc_809DA7E:
	mov r1, #0x10
	orr r0, r1
loc_809DA82:
	mov r3, #0x4c 
	strh r0, [r5,r3]
	mov r1, #0xf
	and r1, r0
	beq loc_809DA90
	sub r1, #1
	strb r1, [r5,#0x10]
loc_809DA90:
	add sp, sp, #0xc
	pop {pc}
loc_809DA94:
	mov r0, #0
	b loc_809DA82
loc_809DA98:
	ldrb r0, [r5,#0x10]
	strb r0, [r5,#0x11]
	mov r0, #0
	ldr r7, off_809DAF4 // =eStruct200ace0 
	ldrh r1, [r7,#0x18] // (dword_200ACF8 - 0x200ace0)
	ldrh r1, [r7,#0x1a] // (dword_200ACF8+2 - 0x200ace0)
	mov r2, #0xf0
	and r2, r1
	beq loc_809DAC2
	lsr r2, r2, #4
	ldr r7, off_809DAEC // =byte_809DAD8
	ldrb r2, [r7,r2]
	orr r0, r2
	mov r2, #2
	tst r2, r1
	beq loc_809DABE
	mov r1, #0x20 
	orr r0, r1
	b loc_809DAC2
loc_809DABE:
	mov r1, #0x10
	orr r0, r1
loc_809DAC2:
	mov r3, #0x4c 
	strh r0, [r5,r3]
	mov r1, #0xf
	and r1, r0
	beq loc_809DAD0
	sub r1, #1
	strb r1, [r5,#0x10]
loc_809DAD0:
	add sp, sp, #0xc
	pop {pc}
	.word 0xE7F42000
byte_809DAD8: .byte 0x0, 0x3, 0x7, 0x0, 0x1, 0x2, 0x8, 0x0, 0x5, 0x4, 0x6, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	.byte 0x2, 0x0, 0x0
off_809DAEC: .word byte_809DAD8
	.word eStruct2000aa0
off_809DAF4: .word eStruct200ace0
	thumb_func_end sub_809D9E0

	thumb_local_start
sub_809DAF8:
	mov r3, #0x4c 
	ldrh r0, [r5,r3]
	mov r1, #0x10
	and r0, r1
	mov pc, lr
	thumb_func_end sub_809DAF8

	thumb_local_start
sub_809DB02:
	push {lr}
	mov r3, #0x4c 
	ldrh r0, [r5,r3]
	mov r1, #0x20 
	push {r0,r1}
	and r0, r1
	tst r0, r0
	beq loc_809DB4A
	movflag EVENT_173D
	bl TestEventFlagFromImmediate
	bne loc_809DB4A
	movflag EVENT_173F
	bl TestEventFlagFromImmediate
	bne loc_809DB4A
	movflag EVENT_1716
	bl TestEventFlagFromImmediate
	beq loc_809DB4A
	movflag EVENT_173D
	bl SetEventFlagFromImmediate
	movflag EVENT_173E
	bl SetEventFlagFromImmediate
	mov r0, #0x36 
	add r0, #0xff
	bl PlaySoundEffect
	b loc_809DB4A
loc_809DB4A:
	pop {r0,r1}
	and r0, r1
	pop {pc}
	thumb_func_end sub_809DB02

	thumb_local_start
sub_809DB50:
	push {lr}
	movflag EVENT_1717_PLAYER_ADVANCE_FORWARD
	bl TestEventFlagFromImmediate
	bne locret_809DB5E
	mov r0, #0
locret_809DB5E:
	pop {pc}
	thumb_func_end sub_809DB50

	thumb_local_start
sub_809DB60:
	push {lr}
	ldr r0, off_809DBF0 // =byte_809DBF4
	mov r1, #0x34 
	add r1, r1, r5
	bl sub_809DBC4
	movflag EVENT_173D
	bl TestEventFlagFromImmediate
	bne loc_809DB82
	mov r0, r10
	ldr r0, [r0,#oToolkit_JoypadPtr]
	ldrh r0, [r0, #oJoypad_Held]
	mov r1, #JOYPAD_ARROWS
	tst r0, r1
	beq loc_809DB92
loc_809DB82:
	ldrb r0, [r5,#0x10]
	lsl r0, r0, #2
	ldr r7, off_809DBC0 // =off_809DCEC 
	ldr r0, [r7,r0]
	mov r1, #0x50
	add r1, r1, r5
	bl sub_809DBC4
loc_809DB92:
	mov r7, r10
	ldr r7, [r7,#oToolkit_GameStatePtr]
	ldrb r0, [r7,#oGameState_Unk_11]
	tst r0, r0
	beq loc_809DBAC
	ldrb r0, [r5,#0x10]
	lsl r0, r0, #2
	ldr r7, off_809DBBC // =off_809DC0C 
	ldr r0, [r7,r0]
	mov r1, #0x48 
	add r1, r1, r5
	bl sub_809DBC4
loc_809DBAC:
	mov r0, #0
	mov r3, #0x34 
	str r0, [r5,r3]
	mov r3, #0x48 
	str r0, [r5,r3]
	mov r3, #0x50 
	str r0, [r5,r3]
	pop {pc}
off_809DBBC: .word off_809DC0C
off_809DBC0: .word off_809DCEC
	thumb_func_end sub_809DB60

	thumb_local_start
sub_809DBC4:
	push {r5,lr}
	mov r7, r0
	mov r2, #0
	str r2, [r1]
	push {r1}
	ldr r3, [r5,#0x1c]
	ldr r0, [r7]
	add r0, r0, r3
	ldr r3, [r5,#0x20]
	ldr r1, [r7,#4]
	add r1, r1, r3
	ldr r3, [r5,#0x24]
	ldr r2, [r7,#8]
	add r2, r2, r3
	ldr r3, [r7,#0xc]
	ldr r4, [r7,#0x10]
	ldr r5, [r7,#0x14]
	pop {r6}
	bl sub_80037AC
	pop {r5,pc}
	.byte 0, 0
off_809DBF0: .word byte_809DBF4
byte_809DBF4: .byte 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x4, 0x8, 0x0, 0x0, 0x0
	.byte 0x0, 0x1, 0x0, 0x0, 0x0, 0x18, 0x0
off_809DC0C: .word byte_809DC2C
	.word byte_809DC44
	.word byte_809DC5C
	.word byte_809DC74
	.word byte_809DC8C
	.word byte_809DCA4
	.word byte_809DCBC
	.word byte_809DCD4
byte_809DC2C: .byte 0x26, 0xA8, 0x5, 0x0, 0xDA, 0x57, 0xFA, 0xFF, 0x0, 0x0, 0x0
	.byte 0x0, 0x8, 0x8, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0
	.byte 0x6, 0x0
byte_809DC44: .byte 0x0, 0x0, 0x8, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x8, 0x8, 0x0, 0x0, 0x1
	.byte 0x0, 0x0, 0x0, 0x0, 0x0, 0x6, 0x0
byte_809DC5C: .byte 0x26, 0xA8, 0x5, 0x0, 0x26, 0xA8, 0x5, 0x0, 0x0, 0x0, 0x0, 0x0, 0x8
	.byte 0x8, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x6, 0x0
byte_809DC74: .byte 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x8, 0x0, 0x0, 0x0, 0x0, 0x0, 0x8, 0x8, 0x0, 0x0, 0x1
	.byte 0x0, 0x0, 0x0, 0x0, 0x0, 0x6, 0x0
byte_809DC8C: .byte 0xDA, 0x57, 0xFA, 0xFF, 0x26, 0xA8, 0x5, 0x0, 0x0, 0x0, 0x0
	.byte 0x0, 0x8, 0x8, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0
	.byte 0x6, 0x0
byte_809DCA4: .byte 0x0, 0x0, 0xF8, 0xFF, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x8, 0x8, 0x0
	.byte 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x6, 0x0
byte_809DCBC: .byte 0xDA, 0x57, 0xFA, 0xFF, 0xDA, 0x57, 0xFA, 0xFF, 0x0
	.byte 0x0, 0x0, 0x0, 0x8, 0x8, 0x0, 0x0, 0x1, 0x0
	.byte 0x0, 0x0, 0x0, 0x0, 0x6, 0x0
byte_809DCD4: .byte 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xF8, 0xFF, 0x0, 0x0, 0x0, 0x0, 0x8, 0x8, 0x0
	.byte 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x6, 0x0
off_809DCEC: .word byte_809DD0C
	.word byte_809DD24
	.word byte_809DD3C
	.word byte_809DD54
	.word byte_809DD6C
	.word byte_809DD84
	.word byte_809DD9C
	.word byte_809DDB4
byte_809DD0C: .byte 0x13, 0xD4, 0x2, 0x0, 0xED, 0x2B, 0xFD, 0xFF, 0x0, 0x0, 0x0
	.byte 0x0, 0x4, 0x8, 0x0, 0x0, 0x0, 0x0, 0x20, 0x0, 0x0, 0x0
	.byte 0xC0, 0x0
byte_809DD24: .byte 0x0, 0x0, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x4, 0x8, 0x0, 0x0, 0x0
	.byte 0x0, 0x20, 0x0, 0x0, 0x0, 0xC0, 0x0
byte_809DD3C: .byte 0x13, 0xD4, 0x2, 0x0, 0x13, 0xD4, 0x2, 0x0, 0x0, 0x0, 0x0, 0x0, 0x4
	.byte 0x8, 0x0, 0x0, 0x0, 0x0, 0x20, 0x0, 0x0, 0x0, 0xC0, 0x0
byte_809DD54: .byte 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x4, 0x8, 0x0, 0x0, 0x0
	.byte 0x0, 0x20, 0x0, 0x0, 0x0, 0xC0, 0x0
byte_809DD6C: .byte 0xED, 0x2B, 0xFD, 0xFF, 0x13, 0xD4, 0x2, 0x0, 0x0, 0x0, 0x0
	.byte 0x0, 0x4, 0x8, 0x0, 0x0, 0x0, 0x0, 0x20, 0x0, 0x0, 0x0
	.byte 0xC0, 0x0
byte_809DD84: .byte 0x0, 0x0, 0xFC, 0xFF, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x4, 0x8, 0x0
	.byte 0x0, 0x0, 0x0, 0x20, 0x0, 0x0, 0x0, 0xC0, 0x0
byte_809DD9C: .byte 0xED, 0x2B, 0xFD, 0xFF, 0xED, 0x2B, 0xFD, 0xFF, 0x0
	.byte 0x0, 0x0, 0x0, 0x4, 0x8, 0x0, 0x0, 0x0, 0x0
	.byte 0x20, 0x0, 0x0, 0x0, 0xC0, 0x0
byte_809DDB4: .byte 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xFC, 0xFF, 0x0, 0x0, 0x0, 0x0, 0x4, 0x8, 0x0
	.byte 0x0, 0x0, 0x0, 0x20, 0x0, 0x0, 0x0, 0xC0, 0x0
	thumb_func_end sub_809DBC4

	thumb_local_start
sub_809DDCC:
	push {lr}
	mov r0, #0
	ldrh r1, [r5,#0x18]
	tst r1, r1
	beq loc_809DDDE
	sub r1, #1
	strh r1, [r5,#0x18]
	mov r0, #1
	b locret_809DDE8
loc_809DDDE:
	ldr r1, [r5,#0x50]
	ldr r2, dword_809DDEC // =0xc00000 
	tst r2, r1
	bne locret_809DDE8
	mov r0, #1
locret_809DDE8:
	pop {pc}
	.balign 4, 0x00
dword_809DDEC: .word 0xC00000
	thumb_func_end sub_809DDCC

	thumb_local_start
sub_809DDF0:
	push {lr}
	movflag EVENT_1716
	bl TestEventFlagFromImmediate
	beq locret_809DE2A
	movflag EVENT_173D
	bl TestEventFlagFromImmediate
	beq locret_809DE2A
	ldr r1, [r5,#0x50]
	ldr r2, dword_809DE2C // =0xc00000 
	tst r2, r1
	beq locret_809DE2A
	movflag EVENT_173D
	bl ClearEventFlagFromImmediate
	movflag EVENT_173E
	bl ClearEventFlagFromImmediate
	movflag EVENT_173F
	bl SetEventFlagFromImmediate
	bl sub_809DE60
locret_809DE2A:
	pop {pc}
dword_809DE2C: .word 0xC00000
	thumb_func_end sub_809DDF0

	thumb_local_start
sub_809DE30:
	push {lr}
	movflag EVENT_1716
	bl TestEventFlagFromImmediate
	beq locret_809DE5E
	movflag EVENT_173D
	bl TestEventFlagFromImmediate
	beq loc_809DE4E
	movflag EVENT_173F
	bl SetEventFlagFromImmediate
loc_809DE4E:
	movflag EVENT_173D
	bl ClearEventFlagFromImmediate
	movflag EVENT_173E
	bl ClearEventFlagFromImmediate
locret_809DE5E:
	pop {pc}
	thumb_func_end sub_809DE30

	thumb_local_start
sub_809DE60:
	push {lr}
	mov r1, #0
	ldr r7, off_809E060 // =eStruct2000aa0 
	mov r6, r10
	ldr r6, [r6,#oToolkit_GameStatePtr]
	ldrb r0, [r6,#oGameState_MapGroup]
	cmp r0, #0x80
	blt loc_809DE72
	ldrb r1, [r7,#0x3] // (byte_2000AA3 - 0x2000aa0)
loc_809DE72:
	ldrb r0, [r5,#0x10]
	ldr r7, off_809DE8C // =off_809DE90 
	ldr r7, [r7,r1]
	lsl r1, r0, #3
	lsl r0, r0, #2
	add r0, r0, r1
	add r7, r7, r0
	ldr r0, [r7,#4]
	str r0, [r5,#0x38]
	ldr r0, [r7,#8]
	str r0, [r5,#0x3c]
	pop {pc}
	.balign 4, 0x00
off_809DE8C: .word off_809DE90
off_809DE90: .word byte_809CFBC
	.word byte_809D0DC
	thumb_func_end sub_809DE60

	thumb_local_start
sub_809DE98:
	push {lr}
	movflag EVENT_1716
	bl TestEventFlagFromImmediate
	bne loc_809DEBE
	movflag EVENT_173D
	bl ClearEventFlagFromImmediate
	movflag EVENT_173E
	bl ClearEventFlagFromImmediate
	movflag EVENT_173F
	bl ClearEventFlagFromImmediate
	b locret_809DED2
loc_809DEBE:
	mov r0, r10
	ldr r0, [r0,#oToolkit_JoypadPtr]
	ldrh r0, [r0,#oJoypad_Held]
	mov r1, #JOYPAD_B
	tst r0, r1
	bne locret_809DED2
	movflag EVENT_173F
	bl ClearEventFlagFromImmediate
locret_809DED2:
	pop {pc}
	thumb_func_end sub_809DE98

	thumb_local_start
sub_809DED4:
	push {lr}
	mov r0, #1
	bl TestPETMenuDataFlag
	bne loc_809DEE4
	bl IsCutsceneScriptNonNull // () -> zf
	beq loc_809DEEA
loc_809DEE4:
	mov r0, #0
	strb r0, [r5,#7]
	b locret_809DEF6
loc_809DEEA:
	ldrb r0, [r5,#7]
	lsl r0, r0, #2
	ldr r7, off_809DEFC // =off_809DEF8 
	ldr r7, [r7,r0]
	mov lr, pc
	bx r7
locret_809DEF6:
	pop {pc}
off_809DEF8: .word sub_809DF00+1
off_809DEFC: .word off_809DEF8
	thumb_func_end sub_809DED4

	thumb_local_start
sub_809DF00:
	push {lr}
	bl sub_809E01C
	tst r0, r0
	bne loc_809DF16
	mov r0, #1
	mov r7, r10
	ldr r7, [r7,#oToolkit_GameStatePtr]
	strb r0, [r7,#oGameState_Unk_10]
	mov r0, #1
	pop {pc}
loc_809DF16:
	ldrb r0, [r5,#0xf]
	mov r7, r10
	ldr r7, [r7,#oToolkit_GameStatePtr]
	strb r0, [r7,#oGameState_Unk_0e]
	tst r0, r0
	beq loc_809DF24
	strb r0, [r7,#oGameState_Unk_03]
loc_809DF24:
	mov r0, #0
	pop {pc}
	thumb_func_end sub_809DF00

	thumb_local_start
sub_809DF28:
	push {lr}
	ldr r7, off_809DF40 // =eStruct200ace0 
	ldrb r0, [r5,#9]
	cmp r0, #0x10
	bne loc_809DF3A
	mov r0, #0
	pop {pc}
	thumb_func_end sub_809DF28

	thumb_local_start
sub_809DF36:
	push {lr}
	ldr r7, off_809DF40 // =eStruct200ace0 
loc_809DF3A:
	ldrb r0, [r7]
	pop {pc}
	.byte 0, 0
off_809DF40: .word eStruct200ace0
	thumb_func_end sub_809DF36

	thumb_local_start
sub_809DF44:
	push {lr}
	ldr r7, off_809DF9C // =off_809DF9C 
	lsl r0, r0, #3
	add r7, r7, r0
	ldr r3, [r7]
	mul r3, r1
	ldr r4, [r7,#4]
	mul r4, r1
	mov r0, r3
	mov r1, r4
	pop {pc}
	.balign 4, 0x00
	.byte 0x4, 0xB5, 0x0, 0x0, 0xFC, 0x4A, 0xFF, 0xFF, 0x0, 0x0, 0x1, 0x0
	.byte 0x0, 0x0, 0x0, 0x0, 0x4, 0xB5, 0x0, 0x0, 0x4, 0xB5, 0x0, 0x0
	.byte 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0xFC, 0x4A, 0xFF, 0xFF
	.byte 0x4, 0xB5, 0x0, 0x0, 0x0, 0x0, 0xFF, 0xFF, 0x0, 0x0, 0x0, 0x0
	.byte 0xFC, 0x4A, 0xFF, 0xFF, 0xFC, 0x4A, 0xFF, 0xFF, 0x0, 0x0, 0x0, 0x0
	.byte 0x0, 0x0, 0xFF, 0xFF
off_809DF9C: .word off_809DF9C
	thumb_func_end sub_809DF44

	thumb_local_start
sub_809DFA0:
	push {lr}
	mov r0, #1
	ldr r1, [r5,#0x1c]
	ldr r2, [r5,#0x28]
	cmp r1, r2
	bne locret_809DFBE
	ldr r1, [r5,#0x20]
	ldr r2, [r5,#0x2c]
	cmp r1, r2
	bne locret_809DFBE
	ldr r1, [r5,#0x24]
	ldr r2, [r5,#0x30]
	cmp r1, r2
	bne locret_809DFBE
	mov r0, #0
locret_809DFBE:
	pop {pc}
	thumb_func_end sub_809DFA0

	thumb_local_start
sub_809DFC0:
	push {lr}
	ldrb r0, [r5,#9]
	cmp r0, #4
	beq loc_809DFCC
	cmp r0, #8
	bne loc_809DFD4
loc_809DFCC:
	bl sub_809DFA0
	tst r0, r0
	beq loc_809DFDC
loc_809DFD4:
	mov r3, #0x56 
	mov r0, #0
	strh r0, [r5,r3]
	b locret_809DFF6
loc_809DFDC:
	mov r3, #0x56 
	ldrb r0, [r5,r3]
	ldrb r2, [r5,#0x10]
	ldr r7, off_809DFF8 // =byte_809DFFC 
	ldrb r1, [r7,r2]
	orr r0, r1
	strb r0, [r5,r3]
	cmp r0, #0xf
	bne locret_809DFF6
	mov r0, #0xa
	strh r0, [r5,#0x18]
	mov r0, #0
	strb r0, [r5,r3]
locret_809DFF6:
	pop {pc}
off_809DFF8: .word byte_809DFFC
byte_809DFFC: .byte 0x1, 0x3, 0x2, 0x6, 0x4, 0xC, 0x8, 0x9
	thumb_func_end sub_809DFC0

	thumb_local_start
owPlayer_setJumptableIndex09AndOthers_809e004:
	push {lr}
	mov r1, #0
	strb r1, [r5,#oOWPlayerObject_Unk_0a]
	ldrb r1, [r5,#oOWPlayerObject_JumptableIndex_09]
	cmp r1, #0x10
	bne loc_809E014
	strb r0, [r5,#oOWPlayerObject_Unk_0b]
	pop {pc}
loc_809E014:
	strb r0, [r5,#oOWPlayerObject_JumptableIndex_09]
	pop {pc}
	.word eStruct200ace0
	thumb_func_end owPlayer_setJumptableIndex09AndOthers_809e004

	thumb_local_start
sub_809E01C:
	push {lr}
	ldr r7, off_809E044 // =eOverworldNPCObjects 
	ldr r2, dword_809E048 // =0xd80 
	add r2, r2, r7
loc_809E024:
	ldr r0, [r7,#0x50]
	mov r1, #1
	tst r0, r1
	beq loc_809E03A
	ldr r0, [r7,#0x60]
	mov r1, #1
	tst r0, r1
	bne locret_809E042
	str r7, [r5,#0x58]
	mov r0, #0
	b locret_809E042
loc_809E03A:
	add r7, #0xd8
	cmp r7, r2
	blt loc_809E024
	mov r0, #1
locret_809E042:
	pop {pc}
off_809E044: .word eOverworldNPCObjects
dword_809E048: .word 0xD80
	thumb_func_end sub_809E01C

	thumb_func_start sub_809E04C
sub_809E04C:
	push {r0,r1,lr}
	ldr r0, off_809E05C // =eOWPlayerObject 
	mov r1, #0
	strb r1, [r0,#0xd] // (byte_2009F4D - 0x2009f40)
	strb r1, [r0,#0xe] // (byte_2009F4E - 0x2009f40)
	strb r1, [r0,#0xf] // (byte_2009F4F - 0x2009f40)
	pop {r0,r1,pc}
	.balign 4, 0x00
off_809E05C: .word eOWPlayerObject
off_809E060: .word eStruct2000aa0
	thumb_func_end sub_809E04C

	thumb_func_start sub_809E064
sub_809E064:
	push {r4,r6,r7,lr}
	mov r0, #0
	mov r4, #0
	bl SpawnOWPlayerObject
	tst r5, r5
	beq locret_809E088
	mov r6, r10
	ldr r6, [r6,#oToolkit_GameStatePtr]
	str r5, [r6,#oGameState_OverworldPlayerObjectPtr]
	ldr r1, [r6,#oGameState_PlayerX]
	str r1, [r5,#oOWPlayerObject_X]
	ldr r1, [r6,#oGameState_PlayerY]
	str r1, [r5,#oOWPlayerObject_Y]
	ldr r1, [r6,#oGameState_Unk_2c]
	str r1, [r5,#oOWPlayerObject_Z]
	ldr r1, [r6,#oGameState_facingDirectionAfterWarp_30]
	strb r1, [r5,#oOWPlayerObject_FacingDirection]
locret_809E088:
	pop {r4,r6,r7,pc}
	thumb_func_end sub_809E064

	thumb_local_start
sub_809E08A:
	push {r4-r7,lr}
	mov r5, r10
	ldr r5, [r5,#oToolkit_GameStatePtr]
	ldr r5, [r5,#oGameState_OverworldPlayerObjectPtr]
	bl FreeOWPlayerObject
	pop {r4-r7,pc}
	thumb_func_end sub_809E08A

	thumb_func_start SetPlayerCanMoveEventFlag
SetPlayerCanMoveEventFlag:
	push {lr}
	// flag 3 @ 0x2001c88[0x2e2] (=2001f6a)
	movflag EVENT_PLAYER_CAN_MOVE
	bl SetEventFlagFromImmediate
	pop {pc}
	thumb_func_end SetPlayerCanMoveEventFlag

// () -> void
	thumb_local_start
ClearPlayerCanMoveEventFlag:
	push {lr}
	// clear flag 3 @ 0x2001c88[0x2e2] (=2001f6a)
	movflag EVENT_PLAYER_CAN_MOVE
	bl ClearEventFlagFromImmediate
	pop {pc}
	thumb_func_end ClearPlayerCanMoveEventFlag

// () -> void
	thumb_func_start owPlayer_lockPlayerForNonNPCDialogue_809E0B0
owPlayer_lockPlayerForNonNPCDialogue_809E0B0:
	// [break] pressing L, jacking in, and talking to objects but not NPCs
	ldr r3, off_809E138 // =eStruct200ace0 
	mov r0, #1
	strb r0, [r3]
	push {lr}
	// if not set, map location changes after function call (also when jacking in)
	movflag EVENT_1718
	bl SetEventFlagFromImmediate
	bl ClearPlayerCanMoveEventFlag // () -> void
	pop {pc}
	thumb_func_end owPlayer_lockPlayerForNonNPCDialogue_809E0B0

	thumb_local_start
nullsub_26:
	mov pc, lr
	thumb_func_end nullsub_26

	thumb_local_start
owPlayer_809E0C8:
	push {lr}
	ldr r3, off_809E138 // =eStruct200ace0 
	mov r1, r10
	ldr r1, [r1,#oToolkit_GameStatePtr]
	ldr r1, [r1,#oGameState_OverworldPlayerObjectPtr]
	ldr r0, [r1,#oOWPlayerObject_X]
	str r0, [r3,#oS200ace0_PlayerX] // (dword_200ACE8 - 0x200ace0)
	ldr r0, [r1,#oOWPlayerObject_Y]
	str r0, [r3,#oS200ace0_PlayerY] // (dword_200ACEC - 0x200ace0)
	ldr r0, [r1,#oOWPlayerObject_Z]
	str r0, [r3,#oS200ace0_PlayerZ] // (dword_200ACF0 - 0x200ace0)
	push {r3}
	movflag EVENT_1719
	bl TestEventFlagFromImmediate
	pop {r3}
	bne locret_809E0FA
	mov r2, r10
	ldr r2, [r2,#oToolkit_GameStatePtr]
	ldr r2, [r2,#oGameState_OverworldPlayerObjectPtr]
	ldrb r0, [r2,#oOWPlayerObject_FacingDirection]
	mov r1, #7
	and r0, r1
	strb r0, [r3,#oS200ace0_owPlayerFixedAnimationSelect_02]
locret_809E0FA:
	pop {pc}
	thumb_func_end owPlayer_809E0C8

	thumb_func_start owPlayer_809E0FC
owPlayer_809E0FC:
	ldr r3, off_809E138 // =eStruct200ace0 
	mov r0, #1
	strb r0, [r3,#oS200ace0_fixOWPlayerAnim_15] // (byte_200ACF5 - 0x200ace0)
	mov r0, #0
	str r0, [r3,#oS200ace0_Unk_18] // (dword_200ACF8 - 0x200ace0)
	str r0, [r3,#oS200ace0_Unk_20] // (dword_200AD00 - 0x200ace0)
	ldr r1, off_809E110 // =byte_809CF5C
	str r1, [r3,#oS200ace0_Unk_20] // (dword_200AD00 - 0x200ace0)
	mov pc, lr
	.balign 4, 0
off_809E110: .word byte_809CF5C
	thumb_func_end owPlayer_809E0FC

	thumb_func_start sub_809E114
sub_809E114:
	ldr r3, off_809E138 // =eStruct200ace0 
	mov r0, #0
	strb r0, [r3,#0x15] // (byte_200ACF5 - 0x200ace0)
	mov r0, #0
	str r0, [r3,#0x18] // (dword_200ACF8 - 0x200ace0)
	str r0, [r3,#0x20] // (dword_200AD00 - 0x200ace0)
	mov pc, lr
	thumb_func_end sub_809E114

	thumb_func_start owPlayer_unlockPlayerAfterNonNPCDialogue_809E122
owPlayer_unlockPlayerAfterNonNPCDialogue_809E122:
	push {lr}
	ldr r3, off_809E138 // =eStruct200ace0 
	mov r0, #0
	strb r0, [r3]
	bl SetPlayerCanMoveEventFlag
	// flag 6 @ 0x2001c88[0x2e3] (=2001f6b)
	movflag EVENT_1719
	bl ClearEventFlagFromImmediate
	pop {pc}
off_809E138: .word eStruct200ace0
	thumb_func_end owPlayer_unlockPlayerAfterNonNPCDialogue_809E122

	thumb_func_start owPlayer_setS200ace0_fixedAnimationSelect_809e13c
owPlayer_setS200ace0_fixedAnimationSelect_809e13c:
	push {lr}
	ldr r3, off_809E184 // =eStruct200ace0 
	strb r0, [r3,#oS200ace0_owPlayerFixedAnimationSelect_02]
	movflag EVENT_1719
	bl SetEventFlagFromImmediate
	pop {pc}
	thumb_func_end owPlayer_setS200ace0_fixedAnimationSelect_809e13c

	thumb_func_start sub_809E14C
sub_809E14C:
	push {r4-r7,lr}
	mov r4, r0
	ldr r7, off_809E184 // =eStruct200ace0 
	bl sub_809E462
	bne loc_809E164
	strb r4, [r7,#oS200ace0_owPlayerFixedAnimationSelect_02] // (byte_200ACE2 - 0x200ace0)
	movflag EVENT_1719
	bl SetEventFlagFromImmediate
	pop {r4-r7,pc}
loc_809E164:
	strb r4, [r7,#oS200ace0_Unk_1c] // (byte_200ACFC - 0x200ace0)
	pop {r4-r7,pc}
	thumb_func_end sub_809E14C

	thumb_local_start
sub_809E168:
	push {lr}
	ldr r3, off_809E184 // =eStruct200ace0 
	strb r0, [r3,#0x2] // (byte_200ACE2 - 0x200ace0)
	mvn r0, r0
	mov r3, r10
	ldr r3, [r3,#oToolkit_GameStatePtr]
	ldr r3, [r3,#oGameState_OverworldPlayerObjectPtr]
	strb r0, [r3,#0x15]
	movflag EVENT_1719
	bl SetEventFlagFromImmediate
	pop {pc}
	.balign 4, 0x00
off_809E184: .word eStruct200ace0
	thumb_func_end sub_809E168

	thumb_func_start owPlayer_indirectlySetPlayerCoordsMaybe_809e188
owPlayer_indirectlySetPlayerCoordsMaybe_809e188:
	push {r7}
	mov r3, r10
	ldr r3, [r3,#oToolkit_GameStatePtr]
	ldr r3, [r3,#oGameState_OverworldPlayerObjectPtr]
	ldr r7, [r3,#oOWPlayerObject_X]
	str r7, [r3,#oOWPlayerObject_NextX]
	ldr r7, [r3,#oOWPlayerObject_Y]
	str r7, [r3,#oOWPlayerObject_NextY]
	ldr r7, [r3,#oOWPlayerObject_Z]
	str r7, [r3,#oOWPlayerObject_NextZ]
	str r0, [r3,#oOWPlayerObject_X]
	str r1, [r3,#oOWPlayerObject_Y]
	str r2, [r3,#oOWPlayerObject_Z]
	pop {r7}

	thumb_func_start owPlayer_indirectlySetPlayerCoordsMaybe_809e1a4
owPlayer_indirectlySetPlayerCoordsMaybe_809e1a4:
	ldr r3, off_809E214 // =eStruct200ace0
	str r0, [r3,#oS200ace0_PlayerX] // (dword_200ACE8 - 0x200ace0)
	str r1, [r3,#oS200ace0_PlayerY] // (dword_200ACEC - 0x200ace0)
	str r2, [r3,#oS200ace0_PlayerZ] // (dword_200ACF0 - 0x200ace0)
	mov pc, lr
	thumb_func_end owPlayer_indirectlySetPlayerCoordsMaybe_809e1a4
	thumb_func_end owPlayer_indirectlySetPlayerCoordsMaybe_809e188

	thumb_func_start ReadOWPlayerObjectCoords
ReadOWPlayerObjectCoords:
	mov r3, r10
	ldr r3, [r3,#oToolkit_GameStatePtr]
	ldr r3, [r3,#oGameState_OverworldPlayerObjectPtr]
	ldr r0, [r3,#oOWPlayerObject_X]
	ldr r1, [r3,#oOWPlayerObject_Y]
	ldr r2, [r3,#oOWPlayerObject_Z]
	mov pc, lr
	thumb_func_end ReadOWPlayerObjectCoords

	thumb_func_start sub_809E1BC
sub_809E1BC:
	mov r3, r10
	ldr r3, [r3,#oToolkit_GameStatePtr]
	ldr r3, [r3,#oGameState_OverworldPlayerObjectPtr]
	ldr r1, [r3,#0x1c]
	ldr r2, [r3,#0x20]
	ldr r3, [r3,#0x24]
	mov pc, lr
	thumb_func_end sub_809E1BC

	thumb_local_start
sub_809E1CA:
	mov r3, r10
	ldr r3, [r3,#oToolkit_GameStatePtr]
	ldr r3, [r3,#oGameState_OverworldPlayerObjectPtr]
	ldr r0, [r3,#0x20]
	ldr r1, [r3,#0x1c]
	ldr r2, [r3,#0x24]
	mov pc, lr
	thumb_func_end sub_809E1CA

	thumb_func_start owPlayer_copyCoordsToNextCoordsThenAddOffsetToCoords_809e1d8
owPlayer_copyCoordsToNextCoordsThenAddOffsetToCoords_809e1d8:
	push {r7}
	mov r7, r10
	ldr r7, [r7,#oToolkit_GameStatePtr]
	ldr r7, [r7,#oGameState_OverworldPlayerObjectPtr]

	ldr r3, [r7,#oOWPlayerObject_X]
	str r3, [r7,#oOWPlayerObject_NextX]
	add r3, r3, r0
	str r3, [r7,#oOWPlayerObject_X]

	ldr r3, [r7,#oOWPlayerObject_Y]
	str r3, [r7,#oOWPlayerObject_NextY]
	add r3, r3, r1
	str r3, [r7,#oOWPlayerObject_Y]

	ldr r3, [r7,#oOWPlayerObject_Z]
	str r3, [r7,#oOWPlayerObject_NextZ]
	add r3, r3, r2
	str r3, [r7,#oOWPlayerObject_Z]
	pop {r7}
	thumb_func_end owPlayer_copyCoordsToNextCoordsThenAddOffsetToCoords_809e1d8

	thumb_func_start owPlayer_offsetS200ace0Coords_809e1fa
owPlayer_offsetS200ace0Coords_809e1fa:
	push {r7,lr}
	ldr r7, off_809E214 // =eStruct200ace0 
	ldr r3, [r7,#oS200ace0_PlayerX] // (dword_200ACE8 - 0x200ace0)
	add r3, r3, r0
	str r3, [r7,#oS200ace0_PlayerX] // (dword_200ACE8 - 0x200ace0)
	ldr r3, [r7,#oS200ace0_PlayerY] // (dword_200ACEC - 0x200ace0)
	add r3, r3, r1
	str r3, [r7,#oS200ace0_PlayerY] // (dword_200ACEC - 0x200ace0)
	ldr r3, [r7,#oS200ace0_PlayerZ] // (dword_200ACF0 - 0x200ace0)
	add r3, r3, r2
	str r3, [r7,#oS200ace0_PlayerZ] // (dword_200ACF0 - 0x200ace0)
	pop {r7,pc}
	.balign 4, 0x00
off_809E214: .word eStruct200ace0
	thumb_func_end owPlayer_offsetS200ace0Coords_809e1fa

	thumb_func_start owPlayer_809e218
owPlayer_809e218:
	ldr r3, =eStruct200ace0 
	ldrb r1, [r3,#oS200ace0_fixOWPlayerAnim_15] // (byte_200ACF5 - 0x200ace0)
	tst r1, r1
	beq locret_809E222
	strh r0, [r3,#oS200ace0_Unk_1a] // (dword_200ACF8+2 - 0x200ace0)
locret_809E222:
	mov pc, lr
	.pool // 809E224
	thumb_func_end owPlayer_809e218

	thumb_func_start returnZero_809E228
returnZero_809E228:
	mov r0, #0
	mov pc, lr
	.word eStruct200ace0
	thumb_func_end returnZero_809E228

	thumb_func_start sub_809E230
sub_809E230:
	mov r3, r10
	ldr r3, [r3,#oToolkit_GameStatePtr]
	ldr r3, [r3,#oGameState_OverworldPlayerObjectPtr]
	mov r0, #1
	strb r0, [r3,#0x17]
	mov pc, lr
	thumb_func_end sub_809E230

	thumb_func_start sub_809E23C
sub_809E23C:
	mov r3, r10
	ldr r3, [r3,#oToolkit_GameStatePtr]
	ldr r3, [r3,#oGameState_OverworldPlayerObjectPtr]
	mov r0, #0
	strb r0, [r3,#0x17]
	mov pc, lr
	thumb_func_end sub_809E23C

	thumb_func_start sub_809E248
sub_809E248:
	mov r3, r10
	ldr r3, [r3,#oToolkit_GameStatePtr]
	ldr r3, [r3,#oGameState_OverworldPlayerObjectPtr]
	mov r0, #1
	strb r0, [r3,#0xc]
	mov pc, lr
	thumb_func_end sub_809E248

	thumb_func_start sub_809E254
sub_809E254:
	mov r3, r10
	ldr r3, [r3,#oToolkit_GameStatePtr]
	ldr r3, [r3,#oGameState_OverworldPlayerObjectPtr]
	mov r0, #0
	strb r0, [r3,#0xc]
	mov pc, lr
	thumb_func_end sub_809E254

	thumb_func_start owPlayer_writeLayerIndexOverride_809e260
owPlayer_writeLayerIndexOverride_809e260:
	mov r3, r10
	ldr r3, [r3,#oToolkit_GameStatePtr]
	ldr r3, [r3,#oGameState_OverworldPlayerObjectPtr]
	strb r0, [r3,#oOWPlayerObject_LayerIndexOverride]
	mov pc, lr
	thumb_func_end owPlayer_writeLayerIndexOverride_809e260

	thumb_func_start sub_809E26A
sub_809E26A:
	mov r3, r10
	ldr r3, [r3,#oToolkit_GameStatePtr]
	ldr r3, [r3,#oGameState_OverworldPlayerObjectPtr]
	mov r0, #0
	strb r0, [r3,#0x16]
	mov pc, lr
	thumb_func_end sub_809E26A

	thumb_func_start sub_809E276
sub_809E276:
	push {r5,lr}
	mov r5, r10
	ldr r5, [r5,#oToolkit_GameStatePtr]
	ldr r5, [r5,#oGameState_OverworldPlayerObjectPtr]
	bl sprite_noShadow // () -> void
	pop {r5,pc}
	thumb_func_end sub_809E276

	thumb_func_start sub_809E284
sub_809E284:
	push {r5,lr}
	mov r5, r10
	ldr r5, [r5,#oToolkit_GameStatePtr]
	ldr r5, [r5,#oGameState_OverworldPlayerObjectPtr]
	bl sprite_hasShadow
	pop {r5,pc}
	thumb_func_end sub_809E284

	thumb_func_start sub_809E292
sub_809E292:
	push {r5,lr}
	mov r5, r10
	ldr r5, [r5,#oToolkit_GameStatePtr]
	ldr r5, [r5,#oGameState_OverworldPlayerObjectPtr]
	bl sub_8002E52
	pop {r5,pc}
	thumb_func_end sub_809E292

	thumb_func_start owPlayer_setPalette_809e2a0
owPlayer_setPalette_809e2a0:
	push {r5,lr}
	mov r5, r10
	ldr r5, [r5,#oToolkit_GameStatePtr]
	ldr r5, [r5,#oGameState_OverworldPlayerObjectPtr]
	bl sprite_setPalette // (int pallete) -> void
	pop {r5,pc}
	thumb_func_end owPlayer_setPalette_809e2a0

	thumb_func_start SetOWPlayerFacingDirection
SetOWPlayerFacingDirection:
	mov r3, r10
	ldr r3, [r3,#oToolkit_GameStatePtr]
	ldr r3, [r3,#oGameState_OverworldPlayerObjectPtr]
	strb r0, [r3,#oOWPlayerObject_FacingDirection]
	mov pc, lr
	thumb_func_end SetOWPlayerFacingDirection

	thumb_func_start GetOWPlayerFacingDirection
GetOWPlayerFacingDirection:
	mov r0, r10
	ldr r0, [r0,#oToolkit_GameStatePtr]
	ldr r0, [r0,#oGameState_OverworldPlayerObjectPtr]
	ldrb r0, [r0,#oOWPlayerObject_FacingDirection]
	mov pc, lr
	thumb_func_end GetOWPlayerFacingDirection

	thumb_func_start owPlayer_setS2000aa0_param0x0to0x2_with0x40_0x40_0x0_respectively_809e2c2
owPlayer_setS2000aa0_param0x0to0x2_with0x40_0x40_0x0_respectively_809e2c2:
	mov r0, #DEFAULT_OW_PLAYER_NAVI_HORIZONTAL_COMPRESS
	mov r1, #DEFAULT_OW_PLAYER_NAVI_VERTICAL_COMPRESS
	mov r2, #DEFAULT_OW_PLAYER_NAVI_ROTATION

	thumb_func_start owPlayer_setS2000aa0_param0x0to0x2_809e2c8
owPlayer_setS2000aa0_param0x0to0x2_809e2c8:
	ldr r3, off_809E430 // =eStruct2000aa0 
	strb r0, [r3,#oS2000aa0_OWPlayerNaviHorizontalCompress]
	strb r1, [r3,#oS2000aa0_OWPlayerNaviVerticalCompress] // (byte_2000AA1 - 0x2000aa0)
	strb r2, [r3,#oS2000aa0_OWPlayerNaviRotation] // (byte_2000AA2 - 0x2000aa0)
	mov pc, lr
	thumb_func_end owPlayer_setS2000aa0_param0x0to0x2_809e2c8
	thumb_func_end owPlayer_setS2000aa0_param0x0to0x2_with0x40_0x40_0x0_respectively_809e2c2

	thumb_local_start
sub_809E2D2:
	ldr r3, off_809E430 // =eStruct2000aa0
	ldrb r0, [r3,#oS2000aa0_OWPlayerNaviHorizontalCompress]
	ldrb r1, [r3,#oS2000aa0_OWPlayerNaviVerticalCompress] // (byte_2000AA1 - 0x2000aa0)
	ldrb r2, [r3,#oS2000aa0_OWPlayerNaviRotation] // (byte_2000AA2 - 0x2000aa0)
	mov pc, lr
	thumb_func_end sub_809E2D2

	thumb_func_start owPlayer_offsetS2000aa0_param0x0to0x2_809e2dc
owPlayer_offsetS2000aa0_param0x0to0x2_809e2dc:
	push {r4,lr}
	ldr r3, off_809E430 // =eStruct2000aa0 
	ldrb r4, [r3,#oS2000aa0_OWPlayerNaviHorizontalCompress]
	add r4, r4, r0
	strb r4, [r3,#oS2000aa0_OWPlayerNaviHorizontalCompress]
	ldrb r4, [r3,#oS2000aa0_OWPlayerNaviVerticalCompress] // (byte_2000AA1 - 0x2000aa0)
	add r4, r4, r1
	strb r4, [r3,#oS2000aa0_OWPlayerNaviVerticalCompress] // (byte_2000AA1 - 0x2000aa0)
	ldrb r4, [r3,#oS2000aa0_OWPlayerNaviRotation] // (byte_2000AA2 - 0x2000aa0)
	add r4, r4, r2
	strb r4, [r3,#oS2000aa0_OWPlayerNaviRotation] // (byte_2000AA2 - 0x2000aa0)
	pop {r4,pc}
	thumb_func_end owPlayer_offsetS2000aa0_param0x0to0x2_809e2dc

	thumb_func_start SetDefaultOWPlayerNaviColorShader
SetDefaultOWPlayerNaviColorShader:
	mov r0, #0

	thumb_func_start SetOWPlayerNaviColorShader
SetOWPlayerNaviColorShader:
	ldr r3, off_809E430 // =eStruct2000aa0
	strh r0, [r3,#oS2000aa0_OWPlayerNaviColorShader] // (word_2000AA6 - 0x2000aa0)
	mov pc, lr
	thumb_func_end SetOWPlayerNaviColorShader
	thumb_func_end SetDefaultOWPlayerNaviColorShader

	thumb_func_start ZeroOWPlayerNaviPaletteIndex
ZeroOWPlayerNaviPaletteIndex:
	mov r0, #0

	thumb_func_start SetOWPlayerNaviPaletteIndex
SetOWPlayerNaviPaletteIndex:
	ldr r3, off_809E430 // =eStruct2000aa0
	strb r0, [r3,#oS2000aa0_OWPlayerNaviPaletteIndex] // (byte_2000AA5 - 0x2000aa0)
	mov pc, lr
	thumb_func_end SetOWPlayerNaviPaletteIndex
	thumb_func_end ZeroOWPlayerNaviPaletteIndex

	thumb_func_start sub_809E304
sub_809E304:
	mov r0, #0
loc_809E306:
	ldr r3, off_809E430 // =eStruct2000aa0 
	strb r0, [r3,#0x3] // (byte_2000AA3 - 0x2000aa0)
	mov pc, lr
	thumb_func_end sub_809E304

	thumb_local_start
sub_809E30C:
	ldr r3, off_809E430 // =eStruct2000aa0
	ldrb r0, [r3,#0x3] // (byte_2000AA3 - 0x2000aa0)
	mov pc, lr
	thumb_func_end sub_809E30C

	thumb_func_start owPlayer_zeroS2000AA0Param0x4_809e312
owPlayer_zeroS2000AA0Param0x4_809e312:
	mov r0, #0

	thumb_func_start owPlayer_setS2000AA0Param0x4_809e314
owPlayer_setS2000AA0Param0x4_809e314:
	ldr r3, off_809E430 // =eStruct2000aa0 
	strb r0, [r3,#oS2000aa0_Sprite_04] // (byte_2000AA4 - 0x2000aa0)
	mov pc, lr
	thumb_func_end owPlayer_setS2000AA0Param0x4_809e314
	thumb_func_end owPlayer_zeroS2000AA0Param0x4_809e312

	thumb_local_start
sub_809E31A:
	push {r4-r7,lr}
	ldr r3, off_809E430 // =eStruct2000aa0 
	mov r0, #0
	strb r0, [r3,#0x8] // (byte_2000AA8 - 0x2000aa0)
	strb r0, [r3,#0x4] // (byte_2000AA4 - 0x2000aa0)
	mov r5, r10
	ldr r5, [r5,#oToolkit_GameStatePtr]
	ldr r5, [r5,#oGameState_OverworldPlayerObjectPtr]
	mov r0, #0x80
	mov r1, #0x18
	mov r2, #0x48 
	bl sprite_load // (int a1, int a2, int a3) ->
	ldrb r0, [r5,#0x14]
	bl sprite_setAnimation // (u8 a1) -> void
	bl sprite_loadAnimationData // () -> void
	bl sprite_noShadow // () -> void
	bl sprite_update
	mov r0, #0
	bl sub_8001172
	mov r0, #6
	mov r1, #0x8e
	bl SetEventFlagFromImmediate
	mov r0, #6
	mov r1, #0x8f
	bl ClearEventFlagFromImmediate
	pop {r4-r7,pc}
	thumb_func_end sub_809E31A

	thumb_local_start
sub_809E35E:
	push {r4-r7,lr}
	ldr r3, off_809E430 // =eStruct2000aa0 
	mov r0, #1
	strb r0, [r3,#0x8] // (byte_2000AA8 - 0x2000aa0)
	strb r0, [r3,#0x4] // (byte_2000AA4 - 0x2000aa0)
	mov r5, r10
	ldr r5, [r5,#oToolkit_GameStatePtr]
	ldr r5, [r5,#oGameState_OverworldPlayerObjectPtr]
	mov r0, #0x80
	mov r1, #0x1c
	mov r2, #0x54 
	bl sprite_load // (int a1, int a2, int a3) ->
	ldrb r0, [r5,#0x14]
	bl sprite_setAnimation // (u8 a1) -> void
	bl sprite_loadAnimationData // () -> void
	bl sprite_noShadow // () -> void
	bl sprite_update
	mov r0, #0x54
	bl sub_8001172
	mov r0, #6
	mov r1, #0x8e
	bl ClearEventFlagFromImmediate
	mov r0, #6
	mov r1, #0x8f
	bl SetEventFlagFromImmediate
	pop {r4-r7,pc}
	thumb_func_end sub_809E35E

	thumb_func_start sub_809E3A2
sub_809E3A2:
	ldr r3, off_809E430 // =eStruct2000aa0 
	ldrb r0, [r3,#0x8] // (byte_2000AA8 - 0x2000aa0)
	tst r0, r0
	mov pc, lr
	thumb_func_end sub_809E3A2

	thumb_func_start sub_809E3AA
sub_809E3AA:
	ldr r3, off_809E430 // =eStruct2000aa0 
	mov r0, #0
	strb r0, [r3,#0x8] // (byte_2000AA8 - 0x2000aa0)
	mov pc, lr
	thumb_func_end sub_809E3AA

	thumb_func_start sub_809E3B2
sub_809E3B2:
	push {r4-r7,lr}
	ldr r4, off_809E430 // =eStruct2000aa0 
	mov r0, #0
	strb r0, [r4,#0xb] // (byte_2000AAB - 0x2000aa0)
	strh r0, [r4,#0xc] // (dword_2000AAC - 0x2000aa0)
	strh r0, [r4,#0x10] // (dword_2000AB0 - 0x2000aa0)
	strh r0, [r4,#0x14] // (dword_2000AB4 - 0x2000aa0)
	strh r0, [r4,#0x18] // (dword_2000AB8 - 0x2000aa0)
	pop {r4-r7,pc}
	thumb_func_end sub_809E3B2

	thumb_func_start sub_809E3C4
sub_809E3C4:
	push {r4-r7,lr}
	ldr r4, off_809E430 // =eStruct2000aa0 
	str r0, [r4,#0xc] // (dword_2000AAC - 0x2000aa0)
	str r1, [r4,#0x10] // (dword_2000AB0 - 0x2000aa0)
	str r2, [r4,#0x14] // (dword_2000AB4 - 0x2000aa0)
	str r3, [r4,#0x18] // (dword_2000AB8 - 0x2000aa0)
	mov r0, #1
	strb r0, [r4,#0xb] // (byte_2000AAB - 0x2000aa0)
	pop {r4-r7,pc}
	thumb_func_end sub_809E3C4

	thumb_local_start
sub_809E3D6:
	push {r4-r7,lr}
	ldr r4, off_809E430 // =eStruct2000aa0 
	ldrb r0, [r4,#0xb] // (byte_2000AAB - 0x2000aa0)
	tst r0, r0
	beq locret_809E42C
	mov r0, r10
	ldr r0, [r0,#oToolkit_GameStatePtr]
	ldrb r0, [r0,#oGameState_MapGroup]
	cmp r0, #0x80
	mov r7, r10
	ldr r7, [r7,#oToolkit_GameStatePtr]
	ldr r7, [r7,#oGameState_OverworldPlayerObjectPtr]
	ldr r0, [r4,#0xc] // (dword_2000AAC - 0x2000aa0)
	ldr r1, [r7,#0x1c]
	cmp r0, r1
	ble loc_809E3FE
	str r0, [r7,#0x1c]
	ldr r0, [r7,#0x2c]
	str r0, [r7,#0x20]
	b locret_809E42C
loc_809E3FE:
	ldr r0, [r4,#0x14] // (dword_2000AB4 - 0x2000aa0)
	ldr r1, [r7,#0x1c]
	cmp r0, r1
	bge loc_809E40E
	str r0, [r7,#0x1c]
	ldr r0, [r7,#0x2c]
	str r0, [r7,#0x20]
	b locret_809E42C
loc_809E40E:
	ldr r0, [r4,#0x10] // (dword_2000AB0 - 0x2000aa0)
	ldr r1, [r7,#0x20]
	cmp r0, r1
	ble loc_809E41E
	str r0, [r7,#0x20]
	ldr r0, [r7,#0x28]
	str r0, [r7,#0x1c]
	b locret_809E42C
loc_809E41E:
	ldr r0, [r4,#0x18] // (dword_2000AB8 - 0x2000aa0)
	ldr r1, [r7,#0x20]
	cmp r0, r1
	bge locret_809E42C
	str r0, [r7,#0x20]
	ldr r0, [r7,#0x28]
	str r0, [r7,#0x1c]
locret_809E42C:
	pop {r4-r7,pc}
	.byte 0, 0
off_809E430: .word eStruct2000aa0
	thumb_func_end sub_809E3D6

	thumb_func_start getOWPlayerSpriteFrameParameters_809E434
getOWPlayerSpriteFrameParameters_809E434:
	push {r5,lr}
	mov r5, r10
	ldr r5, [r5,#oToolkit_GameStatePtr]
	ldr r5, [r5,#oGameState_OverworldPlayerObjectPtr]
	bl sprite_getFrameParameters
	pop {r5,pc}
	thumb_func_end getOWPlayerSpriteFrameParameters_809E434

	thumb_func_start sub_809E442
sub_809E442:
	mov r3, r10
	ldr r3, [r3,#oToolkit_GameStatePtr]
	ldr r3, [r3,#oGameState_OverworldPlayerObjectPtr]
	ldrb r0, [r3]
	mov r1, #2
	orr r0, r1
	strb r0, [r3]
	mov pc, lr
	thumb_func_end sub_809E442

	thumb_func_start sub_809E452
sub_809E452:
	mov r3, r10
	ldr r3, [r3,#oToolkit_GameStatePtr]
	ldr r3, [r3,#oGameState_OverworldPlayerObjectPtr]
	ldrb r0, [r3]
	mov r1, #2
	bic r0, r1
	strb r0, [r3]
	mov pc, lr
	thumb_func_end sub_809E452

	thumb_func_start sub_809E462
sub_809E462:
	push {lr}
	mov r1, r10
	ldr r1, [r1,#oToolkit_GameStatePtr]
	ldrb r0, [r1,#oGameState_Unk_10]
	tst r0, r0
	pop {pc}
	thumb_func_end sub_809E462

	thumb_local_start
sub_809E46E:
	push {r7,lr}
	mov r7, r10
	ldr r7, [r7,#oToolkit_GameStatePtr]
	ldr r0, [r7,#oGameState_OverworldPlayerObjectPtr]
	add r0, #0x1c
	bl sub_8031A7A
	cmp r0, #0x48 
	blt locret_809E494
	cmp r0, #0x4f 
	bgt locret_809E494
	sub r0, #0x48 
	ldr r7, [r7,#oGameState_OverworldPlayerObjectPtr]
	mov r2, #0x64 
	strh r0, [r7,r2]
	movflag EVENT_1717_PLAYER_ADVANCE_FORWARD
	bl SetEventFlagFromImmediate
locret_809E494:
	pop {r7,pc}
	thumb_func_end sub_809E46E

	thumb_func_start owPlayer_writeS200aec0_Unk20_809e496
owPlayer_writeS200aec0_Unk20_809e496:
	ldr r1, =eStruct200ace0 
	str r0, [r1,#oS200ace0_Unk_20] // (dword_200AD00 - 0x200ace0)
	mov pc, lr
	// 809E49C
	.pool
	thumb_func_end owPlayer_writeS200aec0_Unk20_809e496

	thumb_func_start owPlayer_setMosaicScalingParameters_8002c7a_809e4a0
owPlayer_setMosaicScalingParameters_8002c7a_809e4a0:
	push {r5,lr}
	mov r5, r10
	ldr r5, [r5,#oToolkit_GameStatePtr]
	ldr r5, [r5,#oGameState_OverworldPlayerObjectPtr]
	bl sprite_setMosaicScalingParameters_8002c7a
	pop {r5,pc}
	thumb_func_end owPlayer_setMosaicScalingParameters_8002c7a_809e4a0

	thumb_func_start sub_809E4AE
sub_809E4AE:
	push {r5,lr}
	mov r5, r10
	ldr r5, [r5,#oToolkit_GameStatePtr]
	ldr r5, [r5,#oGameState_OverworldPlayerObjectPtr]
	bl sub_8002CCE
	pop {r5,pc}
	thumb_func_end sub_809E4AE

	thumb_func_start sub_809E4BC
sub_809E4BC:
	push {r4-r7,lr}
	movflag EVENT_COPYBOT_ACTIVE
	bl ToggleEventFlagFromImmediate // (u8 entryIdx, u8 byteFlagIdx) -> void
	mov r5, r10
	ldr r5, [r5,#oToolkit_GameStatePtr]
	ldr r5, [r5,#oGameState_OverworldPlayerObjectPtr]
	mov r4, #0x37 
	movflag EVENT_COPYBOT_ACTIVE
	bl TestEventFlagFromImmediate
	bne loc_809E4DA
	mov r4, #0
loc_809E4DA:
	mov r0, #0x80
	mov r1, #0x18
	mov r2, r4
	bl sprite_load // (int a1, int a2, int a3) ->
	ldrb r0, [r5,#0x14]
	bl sprite_setAnimation // (u8 a1) -> void
	bl sprite_loadAnimationData // () -> void
	bl sprite_noShadow // () -> void
	bl sprite_update
	pop {r4-r7,pc}
	thumb_func_end sub_809E4BC

	thumb_local_start
sub_809E4F8:
	push {r4-r7,lr}
	mov r5, r10
	ldr r5, [r5,#oToolkit_GameStatePtr]
	ldr r5, [r5,#oGameState_OverworldPlayerObjectPtr]
	mov r0, #0x80
	mov r1, #0x18
	mov r2, #0
	bl sprite_load // (int a1, int a2, int a3) ->
	ldrb r0, [r5,#0x14]
	bl sprite_setAnimation // (u8 a1) -> void
	bl sprite_loadAnimationData // () -> void
	bl sprite_noShadow // () -> void
	bl sprite_update
	pop {r4-r7,pc}
	.byte 0, 0
	thumb_func_end sub_809E4F8

	thumb_local_start
sub_809E520:
	push {lr}
	mov r0, r10
	ldr r0, [r0,#oToolkit_GameStatePtr]
	ldrb r0, [r0,#oGameState_CurPETNavi]
	cmp r0, #6
	ble locret_809E52E
	sub r0, #5
locret_809E52E:
	pop {pc}
byte_809E530: .byte 0x5, 0x8, 0x0, 0x15, 0x10, 0x1, 0x9, 0x10, 0x0, 0xA, 0x20, 0x1, 0x3C
	.byte 0x0, 0x0, 0x3D, 0x0, 0x1, 0x3E, 0x18, 0x0, 0x3F, 0x18, 0x2, 0x40, 0x18
	.byte 0x8, 0x41, 0x28, 0x4, 0x42, 0x30, 0x6, 0x57, 0x18, 0xA, 0x43, 0x0, 0x0
	.byte 0x44, 0x0, 0x2, 0x45, 0x0, 0x0, 0x46, 0x0, 0x1, 0x5C, 0x0, 0x5, 0x5D
	.byte 0x0, 0x7, 0x5E, 0x0, 0x9, 0x5F, 0x0, 0xB, 0xFF, 0x0, 0x0, 0x0
	thumb_func_end sub_809E520

/*For debugging purposes, connect comment at any range!*/
